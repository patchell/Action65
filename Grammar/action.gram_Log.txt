???????? $ Nullable Set(0)
TERMINALS['Terminals'] { 'IDENT' }
FIRST['IDENT'] { 'IDENT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER' }
FIRST['NUMBER'] { 'NUMBER' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING' }
FIRST['STRING'] { 'STRING' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR' }
FIRST['VECTOR'] { 'VECTOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE' }
FIRST['MODULE'] { 'MODULE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN' }
FIRST['RETURN'] { 'RETURN' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
 }
FIRST['PROC'] { 'PROC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC' }
FIRST['FUNC'] { 'FUNC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT' }
FIRST['INTERRUPT'] { 'INTERRUPT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE' }
FIRST['DECLARE'] { 'DECLARE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT' }
FIRST['INTERRUPT_IDENT'] { 'INTERRUPT_IDENT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT' }
FIRST['PROC_IDENT'] { 'PROC_IDENT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT' }
FIRST['FUNC_IDENT'] { 'FUNC_IDENT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR' }
FIRST['FOR'] { 'FOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
 }
FIRST['WHILE'] { 'WHILE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO' }
FIRST['DO'] { 'DO' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD' }
FIRST['OD'] { 'OD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN' }
FIRST['BEGIN'] { 'BEGIN' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END' }
FIRST['END'] { 'END' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT' }
FIRST['EXIT'] { 'EXIT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF' }
FIRST['IF'] { 'IF' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN' }
FIRST['THEN'] { 'THEN' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF' }
FIRST['ELSEIF'] { 'ELSEIF' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE' }
FIRST['ELSE'] { 'ELSE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI' }
FIRST['FI'] { 'FI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF' }
FIRST['IFF'] { 'IFF' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI' }
FIRST['FFI'] { 'FFI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
 }
FIRST['UNTILL'] { 'UNTILL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO' }
FIRST['TO'] { 'TO' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP' }
FIRST['STEP'] { 'STEP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR' }
FIRST['OR'] { 'OR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND' }
FIRST['AND'] { 'AND' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ' }
FIRST['GTEQ'] { 'GTEQ' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ' }
FIRST['LTEQ'] { 'LTEQ' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE' }
FIRST['DEFINE'] { 'DEFINE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT' }
FIRST['DEFINED_IDENT'] { 'DEFINED_IDENT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE' }
FIRST['TYPE'] { 'TYPE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
 }
FIRST['RECORDTYPE'] { 'RECORDTYPE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL' }
FIRST['BOOL'] { 'BOOL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR' }
FIRST['CHAR'] { 'CHAR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE' }
FIRST['BYTE'] { 'BYTE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD' }
FIRST['CARD'] { 'CARD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT' }
FIRST['INT'] { 'INT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER' }
FIRST['POINTER'] { 'POINTER' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY' }
FIRST['ARRAY'] { 'ARRAY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL' }
FIRST['VAR_LOCAL'] { 'VAR_LOCAL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL' }
FIRST['VAR_GLOBAL'] { 'VAR_GLOBAL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
 }
FIRST['VAR_PARAM'] { 'VAR_PARAM' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH' }
FIRST['PUSH'] { 'PUSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP' }
FIRST['POP'] { 'POP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK' }
FIRST['BREAK'] { 'BREAK' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS' }
FIRST['BITS'] { 'BITS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC' }
FIRST['ACC'] { 'ACC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG' }
FIRST['XREG'] { 'XREG' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG' }
FIRST['YREG'] { 'YREG' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM' }
FIRST['ASM'] { 'ASM' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION' }
FIRST['SECTION'] { 'SECTION' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START' }
FIRST['START'] { 'START' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE' }
FIRST['SIZE'] { 'SIZE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
 }
FIRST['MODE'] { 'MODE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE' }
FIRST['ZEROPAGE'] { 'ZEROPAGE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY' }
FIRST['READ_ONLY'] { 'READ_ONLY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE' }
FIRST['READ_WRITE'] { 'READ_WRITE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true' }
FIRST['true'] { 'true' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false' }
FIRST['false'] { 'false' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG' }
FIRST['ORG'] { 'ORG' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB' }
FIRST['DB'] { 'DB' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW' }
FIRST['DW'] { 'DW' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL' }
FIRST['DL'] { 'DL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS' }
FIRST['DAS'] { 'DAS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
 }
FIRST['DCS'] { 'DCS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS' }
FIRST['DS'] { 'DS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC' }
FIRST['ASMPROC'] { 'ASMPROC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC' }
FIRST['EPROC'] { 'EPROC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE' }
FIRST['LOCAL_LABLE'] { 'LOCAL_LABLE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE' }
FIRST['GLOBAL_LABLE'] { 'GLOBAL_LABLE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE' }
FIRST['GLOBAL_LABLE'] { 'GLOBAL_LABLE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC' }
FIRST['ADC'] { 'ADC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL' }
FIRST['ASL'] { 'ASL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
 }
FIRST['BCC'] { 'BCC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS' }
FIRST['BCS'] { 'BCS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ' }
FIRST['BEQ'] { 'BEQ' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI' }
FIRST['BMI'] { 'BMI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE' }
FIRST['BNE'] { 'BNE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL' }
FIRST['BPL'] { 'BPL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC' }
FIRST['BVC'] { 'BVC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS' }
FIRST['BVS'] { 'BVS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT' }
FIRST['BIT'] { 'BIT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK' }
FIRST['BRK'] { 'BRK' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC' }
FIRST['CLC'] { 'CLC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD' }
FIRST['CLD'] { 'CLD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI' }
FIRST['CLI'] { 'CLI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV' }
FIRST['CLV'] { 'CLV' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
 }
FIRST['CMP'] { 'CMP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX' }
FIRST['CPX'] { 'CPX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY' }
FIRST['CPY'] { 'CPY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC' }
FIRST['DEC'] { 'DEC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX' }
FIRST['DEX'] { 'DEX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY' }
FIRST['DEY'] { 'DEY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR' }
FIRST['EOR'] { 'EOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC' }
FIRST['INC'] { 'INC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX' }
FIRST['INX'] { 'INX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY' }
FIRST['INY'] { 'INY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP' }
FIRST['JMP'] { 'JMP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR' }
FIRST['JSR'] { 'JSR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA' }
FIRST['LDA'] { 'LDA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX' }
FIRST['LDX'] { 'LDX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
 }
FIRST['LDY'] { 'LDY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR' }
FIRST['LSR'] { 'LSR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP' }
FIRST['NOP'] { 'NOP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA' }
FIRST['ORA'] { 'ORA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA' }
FIRST['PHA'] { 'PHA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA' }
FIRST['PLA'] { 'PLA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP' }
FIRST['PHP'] { 'PHP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP' }
FIRST['PLP'] { 'PLP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL' }
FIRST['ROL'] { 'ROL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR' }
FIRST['ROR'] { 'ROR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI' }
FIRST['RTI'] { 'RTI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS' }
FIRST['RTS'] { 'RTS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC' }
FIRST['SBC'] { 'SBC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA' }
FIRST['STA'] { 'STA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
 }
FIRST['SEC'] { 'SEC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED' }
FIRST['SED'] { 'SED' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI' }
FIRST['SEI'] { 'SEI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX' }
FIRST['STX'] { 'STX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY' }
FIRST['STY'] { 'STY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX' }
FIRST['TAX'] { 'TAX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY' }
FIRST['TAY'] { 'TAY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA' }
FIRST['TXA'] { 'TXA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA' }
FIRST['TYA'] { 'TYA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS' }
FIRST['TXS'] { 'TXS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX' }
FIRST['TSX'] { 'TSX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X' }
FIRST['X'] { 'X' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y' }
FIRST['Y'] { 'Y' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A' }
FIRST['A'] { 'A' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR' }
FIRST['SR'] { 'SR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
 }
FIRST['@'] { '@' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.' }
FIRST['.'] { '.' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^' }
FIRST['^'] { '^' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!' }
FIRST['!'] { '!' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR' }
FIRST['XOR'] { 'XOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&' }
FIRST['&'] { '&' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%' }
FIRST['%'] { '%' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#' }
FIRST['#'] { '#' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>' }
FIRST['>'] { '>' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<' }
FIRST['<'] { '<' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{' }
FIRST['{'] { '{' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}' }
FIRST['}'] { '}' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=' }
FIRST['='] { '=' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+' }
FIRST['==+'] { '==+' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-' }
FIRST['==-'] { '==-' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*' }
FIRST['==*'] { '==*' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/' }
FIRST['==/'] { '==/' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
 }
FIRST['==MOD'] { '==MOD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&' }
FIRST['==&'] { '==&' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!' }
FIRST['==!'] { '==!' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR' }
FIRST['==XOR'] { '==XOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%' }
FIRST['==%'] { '==%' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH' }
FIRST['==LSH'] { '==LSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH' }
FIRST['==RSH'] { '==RSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[' }
FIRST['['] { '[' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']' }
FIRST[']'] { ']' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',' }
FIRST[','] { ',' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';' }
FIRST[';'] { ';' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+' }
FIRST['+'] { '+' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-' }
FIRST['-'] { '-' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*' }
FIRST['*'] { '*' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/' }
FIRST['/'] { '/' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD' }
FIRST['MOD'] { 'MOD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
 }
FIRST['LSH'] { 'LSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
,'RSH' }
FIRST['RSH'] { 'RSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
,'RSH','(' }
FIRST['('] { '(' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
,'RSH','(',')' }
FIRST[')'] { ')' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
,'RSH','(',')','NEG' }
FIRST['NEG'] { 'NEG' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
,'RSH','(',')','NEG','CARRY' }
FIRST['CARRY'] { 'CARRY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
,'RSH','(',')','NEG','CARRY','ZERO' }
FIRST['ZERO'] { 'ZERO' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
,'RSH','(',')','NEG','CARRY','ZERO','OVERFLOW' }
FIRST['OVERFLOW'] { 'OVERFLOW' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
,'RSH','(',')','NEG','CARRY','ZERO','OVERFLOW','CUR_LOC' }
FIRST['CUR_LOC'] { 'CUR_LOC' }
Add Rule:AsmStmt
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','DECLARE','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE'
,'DO','OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL'
,'TO','STEP','OR','AND','GTEQ','LTEQ','DEFINE','DEFINED_IDENT','TYPE','RECORDTYPE'
,'BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','VAR_LOCAL','VAR_GLOBAL','VAR_PARAM'
,'PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM','SECTION','START','SIZE','MODE'
,'ZEROPAGE','READ_ONLY','READ_WRITE','true','false','ORG','DB','DW','DL','DAS','DCS'
,'DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE','GLOBAL_LABLE','ADC','ASL','BCC'
,'BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP'
,'CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY'
,'LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC'
,'SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','X','Y','A','SR','@'
,'.','^','!','XOR','&','%','#','>','<','{','}','=','==+','==-','==*','==/','==MOD'
,'==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH'
,'RSH','(',')','NEG','CARRY','ZERO','OVERFLOW','CUR_LOC','AREG','PROCESSOR','R6502'
,'WD65C02','WD65C816',':','CHAR_CONSTANT','e','$' }
NONTERMINALS['Non Terminals'] { 'Action65','Modules','Modules_1','Statements','ProcCall_1'
,'ProcParams','ProcParams_1','ProcParamsEnd','ProcParamsEnd_1','ForStmt','ForStmt_1'
,'ForDOend','ForDOend_1','ForDO','ForDO_1','STEPoption','STEPoption_1','ForTO','ForTO_1'
,'Itterrator','Itterrator_1','IfStmt','IfStmt_1','EndIF','EndIF_1','ElsePart','ElsePart_1'
,'ElseIfPart','ElseIfPart_1','ThenPart','ThenPart_1','Iff','Iff_1','IFFend','IFFend_1'
,'IFFelse','IFFelse_1','IFFthenpart','IFFthenpart_1','IffConditional','IffConditional_1'
,'RelOper','Bits','Bits_1','BitValue','StatusFlags','StatusFlags_1','OptNot','WhileStmt'
,'WhileStmt_1','WhileDOend','WhileDOend_1','WhileDO','WhileDO_1','DoStmt','DoStmt_1'
,'DoEnd','DoEnd_1','EXITstmt','EXITstmt_1','RetStmt','RetStmt_1','OptReturnValue'
,'InlineAssembly','InlineAssembly_1','EndAsmBlock','EndAsmBlock_1','InlineAssBlock'
,'CodeBlock','CodeBlock_1','CodeBlockEnd','CodeBlockEnd_1','UntillStmt','UntillStmt_1'
,'Push','Push_1','PushSourceList','PushSourceList_1','PushSource','PushSource_1','Pop'
,'Pop_1','PopDestList','PopDestList_1','PopDest','PopDest_1','Break','Break_1','Rti'
,'Rti_1','Assignment','Assignment_1','RelOperation','RelOperation_1','LogicalOR','LogicalOR_1'
,'LogicalAND','LogicalAND_1','ArithExpr','BitwiseOR_1','BitwiseAND','BitwiseAND_1'
,'BitwiseXOR','BitwiseXOR_1','AddExpr','AddExpr_1','ShifExpr','ShiftExpr_1','MultExpr'
,'MultExpr_1','Unary','ValueList','ValueList_1','Value','Value_1','AddressOf','AddressOf_1'
,'MemContentsType','MemContentsType_1','MemContents','MemContents_1','ArrayIndex'
,'Factor','SysDecl','Vector_1','VectorEnd','VectorEnd_1','AddressEnd','AddressEnd_1'
,'VectorAddress','Define','Define_1','DefList','DefList_1','Def','TypeDefDecl','TypeDefDecl_1'
,'EndTypeDef','EndTypeDef_1','RecDefField','RecDefField_1','Fields','Declare','Declare_1'
,'DeclareEnd','DeclareEnd_1','DeclareParams','DeclareParams_1','DeclParamList','DeclParamList_1'
,'DeclPramPointer','DeclPramPointer_1','DeclParamArray','DeclParamArray_1','DeclareParamIdentList'
,'DeclareParamIdentList_1','DeclareParamIdent','DeclarFuncName','DeclarFuncName_1'
,'DeclareType','DeclareType_1','DeclarePointer','DeclarePointer_1','DeclareArray'
,'DeclareArray_1','DeclarFuncType','FundDecl','FundDecl_1','FundPointerDecl','FundPointerDecl_1'
,'FundArrayDecl','FundArrayDecl_1','FunctionDecl','FunctionDecl_1','IrqDecl','IrqDeclParams'
,'IrqBody','ProcDecl','ProcDeclParams','ProcBody','FuncDecl','FuncDeclParams','FuncBody'
,'OptInit','IdentList','IdentList_1','Ident','Ident_1','IdentInitType','InitData'
,'InitData_1','ParamList','Param_1','PramPointer','ParamPointer_1','ParamArray','ParamArray_1'
,'DefineParamIdentList','DefineParamIdentList_1','DefineParamIdent','LocalDecls','LocalDecls_1'
,'LocalPointerDecl','LocalPointerDecl_1','LocalArrayDecl','LocalArrayDecl_1','ConstList'
,'ConstList_1','CompConst','CompConst_1','BaseCompConst','AsmStmt','Processor_1','ProcessorType'
,'Section','Section_1','SectionName','SectionName_1','SectionDef','SectionAttributesList'
,'SectionAttributesList_1','SectionAtribute','Modes','TrueFalse','Org','Org_1','DefineMemory'
,'DefineMemory_1','DefineStorage','DefineStorage_1','Proceedure','Proceedure_1','Instruction'
,'Instruction_1','Labels','Label_1','AluAdrModes','Indirect','Indirect_1','StaAddressingModes'
,'ShiftAddressingModes','RelAddressingMode','BitAddressModes','IncAddressingMOdes'
,'JumpAddressingModes','JumpIndirect','JumpDirect','CallAddressingMode','LdxAddressingMode'
,'CPX_CPY_AddressingMode','StxAddressingMode','LdyAddressingMode','StyAddressingMode'
,'OptIndexReg','OptIndexReg_1','OptXReg','OptYReg','AsmConstList','AsmConstList_1'
,'AsmConstList_2','AsmConstant','AsmConstant_1','AsmConstAddSub','AsmConstAddSub_1'
,'BaseAsmConstant' }
*********** Build Nullable Set **********
****************Create NOT nullable set ************************
----- Calc First Sets------
FIRST['Action65'] { '(','=' }
FIRST['Modules'] { '(','=' }
FIRST['Modules_1'] { 'MODULE','e' }
FIRST['Statements'] { '(' }
FIRST['ProcCall_1'] { 'PROC_IDENT','FUNC_IDENT','e' }
FIRST['ProcParams'] { '(' }
FIRST['ProcParams_1'] { '(','e' }
FIRST['ProcParamsEnd'] { '(' }
FIRST['ProcParamsEnd_1'] { ')' }
FIRST['ForStmt'] { '(' }
FIRST['ForStmt_1'] { 'FOR','e' }
FIRST['ForDOend'] { '(' }
FIRST['ForDOend_1'] { 'OD' }
FIRST['ForDO'] { '(' }
FIRST['ForDO_1'] { 'DO' }
FIRST['STEPoption'] { '(' }
FIRST['STEPoption_1'] { 'STEP','e' }
FIRST['ForTO'] { '(' }
FIRST['ForTO_1'] { 'TO' }
FIRST['Itterrator'] { '(' }
FIRST['Itterrator_1'] { '=' }
FIRST['IfStmt'] { '(' }
FIRST['IfStmt_1'] { 'IF','e' }
FIRST['EndIF'] { '-','(' }
FIRST['EndIF_1'] { 'FI' }
FIRST['ElsePart'] { '-','(' }
FIRST['ElsePart_1'] { 'ELSE','e' }
FIRST['ElseIfPart'] { '-','(' }
FIRST['ElseIfPart_1'] { 'ELSEIF','e' }
FIRST['ThenPart'] { '-','(' }
FIRST['ThenPart_1'] { 'THEN','e' }
FIRST['Iff'] { '(' }
FIRST['Iff_1'] { 'IFF','e' }
FIRST['IFFend'] { '^' }
FIRST['IFFend_1'] { 'FFI' }
FIRST['IFFelse'] { '^' }
FIRST['IFFelse_1'] { 'ELSE','e' }
FIRST['IFFthenpart'] { '^' }
FIRST['IFFthenpart_1'] { 'THEN','e' }
FIRST['IffConditional'] { '^' }
FIRST['IffConditional_1'] { 'AREG','XREG','YREG','e' }
FIRST['RelOper'] { '<','GTEQ','=','e' }
FIRST['Bits'] { '^' }
FIRST['Bits_1'] { 'BITS','e' }
FIRST['BitValue'] { '[' }
FIRST['StatusFlags'] { '^' }
FIRST['StatusFlags_1'] { 'NEG','CARRY','ZERO','OVERFLOW' }
FIRST['OptNot'] { '^','e' }
FIRST['WhileStmt'] { '(' }
FIRST['WhileStmt_1'] { 'WHILE','e' }
FIRST['WhileDOend'] { '-','(' }
FIRST['WhileDOend_1'] { 'OD' }
FIRST['WhileDO'] { '-','(' }
FIRST['WhileDO_1'] { 'DO' }
FIRST['DoStmt'] { '(' }
FIRST['DoStmt_1'] { 'DO','e' }
FIRST['DoEnd'] { '(' }
FIRST['DoEnd_1'] { 'OD' }
FIRST['EXITstmt'] { '(' }
FIRST['EXITstmt_1'] { 'EXIT','e' }
FIRST['RetStmt'] { '(' }
FIRST['RetStmt_1'] { 'RETURN','e' }
FIRST['OptReturnValue'] { '(','e' }
FIRST['InlineAssembly'] { '(' }
FIRST['InlineAssembly_1'] { 'ASM','e' }
FIRST['EndAsmBlock'] { '{' }
FIRST['EndAsmBlock_1'] { '}' }
FIRST['InlineAssBlock'] { '{' }
FIRST['CodeBlock'] { '(' }
FIRST['CodeBlock_1'] { '[','e' }
FIRST['CodeBlockEnd'] { 'NUMBER','CUR_LOC','@','DEFINED_IDENT','INTERRUPT_IDENT','FUNC_IDENT'
,'PROC_IDENT' }
FIRST['CodeBlockEnd_1'] { ']' }
FIRST['UntillStmt'] { '(' }
FIRST['UntillStmt_1'] { 'UNTILL','e' }
FIRST['Push'] { '(' }
FIRST['Push_1'] { 'PUSH','e' }
FIRST['PushSourceList'] { '-','(' }
FIRST['PushSourceList_1'] { ',','e' }
FIRST['PushSource'] { '-','(' }
FIRST['PushSource_1'] { 'AREG','XREG','YREG','SR','e' }
FIRST['Pop'] { '(' }
FIRST['Pop_1'] { 'POP','e' }
FIRST['PopDestList'] { '(' }
FIRST['PopDestList_1'] { ',','e' }
FIRST['PopDest'] { '(' }
FIRST['PopDest_1'] { 'AREG','XREG','YREG','SR','e' }
FIRST['Break'] { '(' }
FIRST['Break_1'] { 'BREAK','e' }
FIRST['Rti'] { '(' }
FIRST['Rti_1'] { 'RTI','e' }
FIRST['Assignment'] { '(' }
FIRST['Assignment_1'] { '=','==+','==-','==*','==/','==MOD','==&','==!','==%','==LSH'
,'==RSH','e' }
FIRST['RelOperation'] { '-','(' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','=','#','e' }
FIRST['LogicalOR'] { '-','(' }
FIRST['LogicalOR_1'] { 'OR','e' }
FIRST['LogicalAND'] { '-','(' }
FIRST['LogicalAND_1'] { 'AND','e' }
FIRST['ArithExpr'] { '-','(' }
FIRST['BitwiseOR_1'] { '%','e' }
FIRST['BitwiseAND'] { '-','(' }
FIRST['BitwiseAND_1'] { '&','e' }
FIRST['BitwiseXOR'] { '-','(' }
FIRST['BitwiseXOR_1'] { '!','XOR','e' }
FIRST['AddExpr'] { '-','(' }
FIRST['AddExpr_1'] { '+','-','e' }
FIRST['ShifExpr'] { '-','(' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','e' }
FIRST['MultExpr'] { '-','(' }
FIRST['MultExpr_1'] { '*','/','MOD','e' }
FIRST['Unary'] { '-','(' }
FIRST['ValueList'] { '(' }
FIRST['ValueList_1'] { ',','e' }
FIRST['Value'] { '(' }
FIRST['Value_1'] { 'NUMBER','CUR_LOC','@','e' }
FIRST['AddressOf'] { '(' }
FIRST['AddressOf_1'] { 'PROC_IDENT','FUNC_IDENT','INTERRUPT_IDENT','e' }
FIRST['MemContentsType'] { '(' }
FIRST['MemContentsType_1'] { '^','.','e' }
FIRST['MemContents'] { 'e','(' }
FIRST['MemContents_1'] { 'VAR_GLOBAL','VAR_LOCAL','VAR_PARAM','e' }
FIRST['ArrayIndex'] { '(','e' }
FIRST['Factor'] { '(','e' }
FIRST['SysDecl'] { '(','=' }
FIRST['Vector_1'] { 'VECTOR','e' }
FIRST['VectorEnd'] { '(' }
FIRST['VectorEnd_1'] { '=' }
FIRST['AddressEnd'] { '(' }
FIRST['AddressEnd_1'] { ')' }
FIRST['VectorAddress'] { '(' }
FIRST['Define'] { '(','=' }
FIRST['Define_1'] { 'DEFINE','e' }
FIRST['DefList'] { 'IDENT' }
FIRST['DefList_1'] { ',','e' }
FIRST['Def'] { 'IDENT' }
FIRST['TypeDefDecl'] { '(','=' }
FIRST['TypeDefDecl_1'] { 'TYPE','e' }
FIRST['EndTypeDef'] { 'IDENT' }
FIRST['EndTypeDef_1'] { ']','e' }
FIRST['RecDefField'] { 'IDENT' }
FIRST['RecDefField_1'] { '=' }
FIRST['Fields'] { '[' }
FIRST['Declare'] { '(','=' }
FIRST['Declare_1'] { 'DECLARE','e' }
FIRST['DeclareEnd'] { 'FUNC','PROC','INTERRUPT' }
FIRST['DeclareEnd_1'] { ')' }
FIRST['DeclareParams'] { 'FUNC','PROC','INTERRUPT' }
FIRST['DeclareParams_1'] { '(' }
FIRST['DeclParamList'] { 'IDENT' }
FIRST['DeclParamList_1'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','e' }
FIRST['DeclPramPointer'] { 'IDENT' }
FIRST['DeclPramPointer_1'] { 'POINTER','e' }
FIRST['DeclParamArray'] { 'IDENT' }
FIRST['DeclParamArray_1'] { 'ARRAY','e' }
FIRST['DeclareParamIdentList'] { 'IDENT' }
FIRST['DeclareParamIdentList_1'] { ',','e' }
FIRST['DeclareParamIdent'] { 'IDENT' }
FIRST['DeclarFuncName'] { 'FUNC','PROC','INTERRUPT' }
FIRST['DeclarFuncName_1'] { 'IDENT' }
FIRST['DeclareType'] { 'FUNC','PROC','INTERRUPT' }
FIRST['DeclareType_1'] { 'BYTE','CHAR','INT','CARD','BOOL','RECORDTYPE','e' }
FIRST['DeclarePointer'] { 'FUNC','PROC','INTERRUPT' }
FIRST['DeclarePointer_1'] { 'POINTER','e' }
FIRST['DeclareArray'] { 'e','FUNC','PROC','INTERRUPT' }
FIRST['DeclareArray_1'] { 'ARRAY','e' }
FIRST['DeclarFuncType'] { 'FUNC','PROC','INTERRUPT','e' }
FIRST['FundDecl'] { '(','=' }
FIRST['FundDecl_1'] { 'BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE','e' }
FIRST['FundPointerDecl'] { '(','=' }
FIRST['FundPointerDecl_1'] { 'POINTER','e' }
FIRST['FundArrayDecl'] { '(','=' }
FIRST['FundArrayDecl_1'] { 'ARRAY','e' }
FIRST['FunctionDecl'] { '(','=' }
FIRST['FunctionDecl_1'] { 'FUNC','PROC','INTERRUPT','e' }
FIRST['IrqDecl'] { 'IDENT' }
FIRST['IrqDeclParams'] { '(' }
FIRST['IrqBody'] { '(','=' }
FIRST['ProcDecl'] { 'IDENT' }
FIRST['ProcDeclParams'] { '(' }
FIRST['ProcBody'] { '(','=' }
FIRST['FuncDecl'] { 'IDENT' }
FIRST['FuncDeclParams'] { '(' }
FIRST['FuncBody'] { '(','=' }
FIRST['OptInit'] { '=','e' }
FIRST['IdentList'] { '(','=' }
FIRST['IdentList_1'] { ',','e' }
FIRST['Ident'] { '(','=' }
FIRST['Ident_1'] { 'IDENT','e' }
FIRST['IdentInitType'] { '(','=' }
FIRST['InitData'] { 'NUMBER','CUR_LOC','@','DEFINED_IDENT','INTERRUPT_IDENT','FUNC_IDENT'
,'PROC_IDENT' }
FIRST['InitData_1'] { 'STRING','[','e' }
FIRST['ParamList'] { 'IDENT' }
FIRST['Param_1'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','e' }
FIRST['PramPointer'] { 'IDENT' }
FIRST['ParamPointer_1'] { 'POINTER','e' }
FIRST['ParamArray'] { 'IDENT' }
FIRST['ParamArray_1'] { 'ARRAY','e' }
FIRST['DefineParamIdentList'] { 'IDENT' }
FIRST['DefineParamIdentList_1'] { ',','e' }
FIRST['DefineParamIdent'] { 'IDENT' }
FIRST['LocalDecls'] { '(','=' }
FIRST['LocalDecls_1'] { 'CHAR','BYTE','INT','CARD','BOOL','RECORDTYPE','e' }
FIRST['LocalPointerDecl'] { '(','=' }
FIRST['LocalPointerDecl_1'] { 'POINTER','e' }
FIRST['LocalArrayDecl'] { '(','=' }
FIRST['LocalArrayDecl_1'] { 'ARRAY','e' }
FIRST['ConstList'] { 'NUMBER','CUR_LOC','@','DEFINED_IDENT','INTERRUPT_IDENT','FUNC_IDENT'
,'PROC_IDENT' }
FIRST['ConstList_1'] { ',','e' }
FIRST['CompConst'] { 'e','NUMBER','CUR_LOC','@','DEFINED_IDENT','INTERRUPT_IDENT','FUNC_IDENT'
,'PROC_IDENT' }
FIRST['CompConst_1'] { '+','-','e' }
FIRST['BaseCompConst'] { 'NUMBER','CUR_LOC','@','DEFINED_IDENT','INTERRUPT_IDENT','FUNC_IDENT'
,'PROC_IDENT','e' }
FIRST['AsmStmt'] { 'IDENT' }
FIRST['Processor_1'] { 'PROCESSOR','e' }
FIRST['ProcessorType'] { 'R6502','WD65C02','WD65C816' }
FIRST['Section'] { 'IDENT' }
FIRST['Section_1'] { 'SECTION','e' }
FIRST['SectionName'] { 'e','[' }
FIRST['SectionName_1'] { 'IDENT','e' }
FIRST['SectionDef'] { '[','e' }
FIRST['SectionAttributesList'] { 'e','START','SIZE','MODE','ZEROPAGE' }
FIRST['SectionAttributesList_1'] { ',','e' }
FIRST['SectionAtribute'] { 'START','SIZE','MODE','ZEROPAGE','e' }
FIRST['Modes'] { 'READ_ONLY','READ_WRITE' }
FIRST['TrueFalse'] { 'true','false' }
FIRST['Org'] { 'IDENT' }
FIRST['Org_1'] { 'ORG','e' }
FIRST['DefineMemory'] { 'IDENT' }
FIRST['DefineMemory_1'] { 'DB','DW','DL','DAS','DCS','e' }
FIRST['DefineStorage'] { 'IDENT' }
FIRST['DefineStorage_1'] { 'DS','e' }
FIRST['Proceedure'] { 'IDENT' }
FIRST['Proceedure_1'] { 'ASMPROC','e' }
FIRST['Instruction'] { 'e','IDENT' }
FIRST['Instruction_1'] { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL'
,'LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD'
,'CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC'
,'SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY'
,'LDX','LDY','STX','STY','e' }
FIRST['Labels'] { 'IDENT','e' }
FIRST['Label_1'] { ':','e' }
FIRST['AluAdrModes'] { '#','(','LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['Indirect'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT','*'
 }
FIRST['Indirect_1'] { ')',',' }
FIRST['StaAddressingModes'] { '(','LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['ShiftAddressingModes'] { 'AREG','LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER'
,'CHAR_CONSTANT','*' }
FIRST['RelAddressingMode'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['BitAddressModes'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['IncAddressingMOdes'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['JumpAddressingModes'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['JumpIndirect'] { '(','e' }
FIRST['JumpDirect'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['CallAddressingMode'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['LdxAddressingMode'] { '#','LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['CPX_CPY_AddressingMode'] { '#','LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER'
,'CHAR_CONSTANT','*' }
FIRST['StxAddressingMode'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['LdyAddressingMode'] { '#','LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['StyAddressingMode'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['OptIndexReg'] { ',','e' }
FIRST['OptIndexReg_1'] { 'XREG','YREG' }
FIRST['OptXReg'] { ',','e' }
FIRST['OptYReg'] { ',','e' }
FIRST['AsmConstList'] { 'STRING','LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['AsmConstList_1'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['AsmConstList_2'] { ',','e' }
FIRST['AsmConstant'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['AsmConstant_1'] { '>','<','e' }
FIRST['AsmConstAddSub'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
FIRST['AsmConstAddSub_1'] { '+','-','e' }
FIRST['BaseAsmConstant'] { 'LOCAL_LABLE','GLOBAL_LABLE','IDENT','NUMBER','CHAR_CONSTANT'
,'*' }
----- Calc Follow Sets------
------------ Follow Sets ---------------
FOLLOW['Action65'] { '$' }
FOLLOW['Modules'] { '$' }
FOLLOW['Modules_1'] { '$' }
FOLLOW['Statements'] { 'OD' }
FOLLOW['ProcCall_1'] { 'OD' }
FOLLOW['ProcParams'] { }
FOLLOW['ProcParams_1'] { }
FOLLOW['ProcParamsEnd'] { '(' }
FOLLOW['ProcParamsEnd_1'] { '(' }
FOLLOW['ForStmt'] { 'PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['ForStmt_1'] { 'PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['ForDOend'] { }
FOLLOW['ForDOend_1'] { }
FOLLOW['ForDO'] { 'OD' }
FOLLOW['ForDO_1'] { 'OD' }
FOLLOW['STEPoption'] { 'DO' }
FOLLOW['STEPoption_1'] { 'DO' }
FOLLOW['ForTO'] { 'STEP','DO' }
FOLLOW['ForTO_1'] { 'STEP','DO' }
FOLLOW['Itterrator'] { 'TO' }
FOLLOW['Itterrator_1'] { 'TO' }
FOLLOW['IfStmt'] { 'FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['IfStmt_1'] { 'FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['EndIF'] { }
FOLLOW['EndIF_1'] { }
FOLLOW['ElsePart'] { 'FI' }
FOLLOW['ElsePart_1'] { 'FI' }
FOLLOW['ElseIfPart'] { 'ELSE','FI' }
FOLLOW['ElseIfPart_1'] { 'ELSE','FI' }
FOLLOW['ThenPart'] { 'ELSEIF','ELSE','FI' }
FOLLOW['ThenPart_1'] { 'ELSEIF','ELSE','FI' }
FOLLOW['Iff'] { 'IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['Iff_1'] { 'IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['IFFend'] { }
FOLLOW['IFFend_1'] { }
FOLLOW['IFFelse'] { 'FFI' }
FOLLOW['IFFelse_1'] { 'FFI' }
FOLLOW['IFFthenpart'] { 'ELSE','FFI' }
FOLLOW['IFFthenpart_1'] { 'ELSE','FFI' }
FOLLOW['IffConditional'] { 'THEN','ELSE','FFI' }
FOLLOW['IffConditional_1'] { 'THEN','ELSE','FFI' }
FOLLOW['RelOper'] { }
FOLLOW['Bits'] { 'AREG','XREG','YREG','THEN','ELSE','FFI' }
FOLLOW['Bits_1'] { 'AREG','XREG','YREG','THEN','ELSE','FFI' }
FOLLOW['BitValue'] { }
FOLLOW['StatusFlags'] { 'BITS','AREG','XREG','YREG','THEN','ELSE','FFI' }
FOLLOW['StatusFlags_1'] { 'BITS','AREG','XREG','YREG','THEN','ELSE','FFI' }
FOLLOW['OptNot'] { 'NEG','CARRY','ZERO','OVERFLOW' }
FOLLOW['WhileStmt'] { 'IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['WhileStmt_1'] { 'IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['WhileDOend'] { }
FOLLOW['WhileDOend_1'] { }
FOLLOW['WhileDO'] { 'OD' }
FOLLOW['WhileDO_1'] { 'OD' }
FOLLOW['DoStmt'] { 'WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['DoStmt_1'] { 'WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['DoEnd'] { }
FOLLOW['DoEnd_1'] { }
FOLLOW['EXITstmt'] { 'DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['EXITstmt_1'] { 'DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD'
 }
FOLLOW['RetStmt'] { 'EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD'
 }
FOLLOW['RetStmt_1'] { 'EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT'
,'OD' }
FOLLOW['OptReturnValue'] { }
FOLLOW['InlineAssembly'] { 'RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT'
,'FUNC_IDENT','OD' }
FOLLOW['InlineAssembly_1'] { 'RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT'
,'FUNC_IDENT','OD' }
FOLLOW['EndAsmBlock'] { }
FOLLOW['EndAsmBlock_1'] { }
FOLLOW['InlineAssBlock'] { '}' }
FOLLOW['CodeBlock'] { 'ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT'
,'FUNC_IDENT','OD' }
FOLLOW['CodeBlock_1'] { 'ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT'
,'FUNC_IDENT','OD' }
FOLLOW['CodeBlockEnd'] { }
FOLLOW['CodeBlockEnd_1'] { }
FOLLOW['UntillStmt'] { '[','ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT'
,'FUNC_IDENT','OD' }
FOLLOW['UntillStmt_1'] { '[','ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT'
,'FUNC_IDENT','OD' }
FOLLOW['Push'] { 'UNTILL','[','ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT'
,'FUNC_IDENT','OD' }
FOLLOW['Push_1'] { 'UNTILL','[','ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR'
,'PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['PushSourceList'] { }
FOLLOW['PushSourceList_1'] { }
FOLLOW['PushSource'] { ',' }
FOLLOW['PushSource_1'] { ',' }
FOLLOW['Pop'] { 'PUSH','UNTILL','[','ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR'
,'PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['Pop_1'] { 'PUSH','UNTILL','[','ASM','RETURN','EXIT','DO','WHILE','IFF','IF'
,'FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['PopDestList'] { }
FOLLOW['PopDestList_1'] { }
FOLLOW['PopDest'] { ',' }
FOLLOW['PopDest_1'] { ',' }
FOLLOW['Break'] { 'POP','PUSH','UNTILL','[','ASM','RETURN','EXIT','DO','WHILE','IFF'
,'IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['Break_1'] { 'POP','PUSH','UNTILL','[','ASM','RETURN','EXIT','DO','WHILE','IFF'
,'IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['Rti'] { 'BREAK','POP','PUSH','UNTILL','[','ASM','RETURN','EXIT','DO','WHILE'
,'IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['Rti_1'] { 'BREAK','POP','PUSH','UNTILL','[','ASM','RETURN','EXIT','DO','WHILE'
,'IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['Assignment'] { 'RTI','BREAK','POP','PUSH','UNTILL','[','ASM','RETURN','EXIT'
,'DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['Assignment_1'] { 'RTI','BREAK','POP','PUSH','UNTILL','[','ASM','RETURN','EXIT'
,'DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['RelOperation'] { 'THEN','ELSEIF','ELSE','FI','DO',')' }
FOLLOW['RelOperation_1'] { 'THEN','ELSEIF','ELSE','FI','DO',')' }
FOLLOW['LogicalOR'] { '>','<','GTEQ','LTEQ','=','#','THEN','ELSEIF','ELSE','FI','DO'
,')' }
FOLLOW['LogicalOR_1'] { '>','<','GTEQ','LTEQ','=','#','THEN','ELSEIF','ELSE','FI','DO'
,')' }
FOLLOW['LogicalAND'] { 'OR','>','<','GTEQ','LTEQ','=','#','THEN','ELSEIF','ELSE','FI'
,'DO',')' }
FOLLOW['LogicalAND_1'] { 'OR','>','<','GTEQ','LTEQ','=','#','THEN','ELSEIF','ELSE','FI'
,'DO',')' }
FOLLOW['ArithExpr'] { ']',')','AREG','XREG','YREG','SR',',','=','==+','==-','==*','==/'
,'==MOD','==&','==!','==%','==LSH','==RSH','AND','OR','>','<','GTEQ','LTEQ','#','THEN'
,'ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH','UNTILL','[','ASM','RETURN'
,'EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['BitwiseOR_1'] { ']',')','AREG','XREG','YREG','SR',',','=','==+','==-','==*'
,'==/','==MOD','==&','==!','==%','==LSH','==RSH','AND','OR','>','<','GTEQ','LTEQ'
,'#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH','UNTILL','[','ASM'
,'RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['BitwiseAND'] { '%',']',')','AREG','XREG','YREG','SR',',','=','==+','==-','==*'
,'==/','==MOD','==&','==!','==%','==LSH','==RSH','AND','OR','>','<','GTEQ','LTEQ'
,'#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH','UNTILL','[','ASM'
,'RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['BitwiseAND_1'] { '%',']',')','AREG','XREG','YREG','SR',',','=','==+','==-','==*'
,'==/','==MOD','==&','==!','==%','==LSH','==RSH','AND','OR','>','<','GTEQ','LTEQ'
,'#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH','UNTILL','[','ASM'
,'RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['BitwiseXOR'] { '&','%',']',')','AREG','XREG','YREG','SR',',','=','==+','==-'
,'==*','==/','==MOD','==&','==!','==%','==LSH','==RSH','AND','OR','>','<','GTEQ','LTEQ'
,'#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH','UNTILL','[','ASM'
,'RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['BitwiseXOR_1'] { '&','%',']',')','AREG','XREG','YREG','SR',',','=','==+','==-'
,'==*','==/','==MOD','==&','==!','==%','==LSH','==RSH','AND','OR','>','<','GTEQ','LTEQ'
,'#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH','UNTILL','[','ASM'
,'RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['AddExpr'] { '!','XOR','&','%',']',')','AREG','XREG','YREG','SR',',','=','==+'
,'==-','==*','==/','==MOD','==&','==!','==%','==LSH','==RSH','AND','OR','>','<','GTEQ'
,'LTEQ','#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH','UNTILL','['
,'ASM','RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['AddExpr_1'] { '!','XOR','&','%',']',')','AREG','XREG','YREG','SR',',','=','==+'
,'==-','==*','==/','==MOD','==&','==!','==%','==LSH','==RSH','AND','OR','>','<','GTEQ'
,'LTEQ','#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH','UNTILL','['
,'ASM','RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['ShifExpr'] { '+','-','!','XOR','&','%',']',')','AREG','XREG','YREG','SR',','
,'=','==+','==-','==*','==/','==MOD','==&','==!','==%','==LSH','==RSH','AND','OR'
,'>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH'
,'UNTILL','[','ASM','RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT'
,'OD' }
FOLLOW['ShiftExpr_1'] { '+','-','!','XOR','&','%',']',')','AREG','XREG','YREG','SR'
,',','=','==+','==-','==*','==/','==MOD','==&','==!','==%','==LSH','==RSH','AND','OR'
,'>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP','PUSH'
,'UNTILL','[','ASM','RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT'
,'OD' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','XOR','&','%',']',')','AREG','XREG','YREG'
,'SR',',','=','==+','==-','==*','==/','==MOD','==&','==!','==%','==LSH','==RSH','AND'
,'OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP'
,'PUSH','UNTILL','[','ASM','RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT'
,'OD' }
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','XOR','&','%',']',')','AREG','XREG','YREG'
,'SR',',','=','==+','==-','==*','==/','==MOD','==&','==!','==%','==LSH','==RSH','AND'
,'OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','DO','RTI','BREAK','POP'
,'PUSH','UNTILL','[','ASM','RETURN','EXIT','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT'
,'OD' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',']',')','AREG'
,'XREG','YREG','SR',',','=','==+','==-','==*','==/','==MOD','==&','==!','==%','==LSH'
,'==RSH','AND','OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','DO','RTI'
,'BREAK','POP','PUSH','UNTILL','[','ASM','RETURN','EXIT','WHILE','IFF','IF','FOR'
,'PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['ValueList'] { ')' }
FOLLOW['ValueList_1'] { ')' }
FOLLOW['Value'] { '=','*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',']',')','AREG'
,'XREG','YREG','SR',',','==+','==-','==*','==/','==MOD','==&','==!','==%','==LSH'
,'==RSH','AND','OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','DO','RTI'
,'BREAK','POP','PUSH','UNTILL','[','ASM','RETURN','EXIT','WHILE','IFF','IF','FOR'
,'PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['Value_1'] { '=','*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',']',')'
,'AREG','XREG','YREG','SR',',','==+','==-','==*','==/','==MOD','==&','==!','==%','==LSH'
,'==RSH','AND','OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','DO','RTI'
,'BREAK','POP','PUSH','UNTILL','[','ASM','RETURN','EXIT','WHILE','IFF','IF','FOR'
,'PROC_IDENT','FUNC_IDENT','OD' }
FOLLOW['AddressOf'] { }
FOLLOW['AddressOf_1'] { }
FOLLOW['MemContentsType'] { 'AREG','XREG','YREG','SR',',','=','==+','==-','==*','==/'
,'==MOD','==&','==!','==%','==LSH','==RSH','RTI','BREAK','POP','PUSH','UNTILL','['
,'ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD'
,'NUMBER','CUR_LOC','@','*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',']',')'
,'AND','OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','INTERRUPT_IDENT'
 }
FOLLOW['MemContentsType_1'] { 'AREG','XREG','YREG','SR',',','=','==+','==-','==*','==/'
,'==MOD','==&','==!','==%','==LSH','==RSH','RTI','BREAK','POP','PUSH','UNTILL','['
,'ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT','OD'
,'NUMBER','CUR_LOC','@','*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',']',')'
,'AND','OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','INTERRUPT_IDENT'
 }
FOLLOW['MemContents'] { '^','.','AREG','XREG','YREG','SR',',','=','==+','==-','==*'
,'==/','==MOD','==&','==!','==%','==LSH','==RSH','RTI','BREAK','POP','PUSH','UNTILL'
,'[','ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT'
,'OD','NUMBER','CUR_LOC','@','*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',']'
,')','AND','OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','INTERRUPT_IDENT'
 }
FOLLOW['MemContents_1'] { '^','.','AREG','XREG','YREG','SR',',','=','==+','==-','==*'
,'==/','==MOD','==&','==!','==%','==LSH','==RSH','RTI','BREAK','POP','PUSH','UNTILL'
,'[','ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR','PROC_IDENT','FUNC_IDENT'
,'OD','NUMBER','CUR_LOC','@','*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',']'
,')','AND','OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF','ELSE','FI','INTERRUPT_IDENT'
 }
FOLLOW['ArrayIndex'] { }
FOLLOW['Factor'] { 'VAR_GLOBAL','VAR_LOCAL','VAR_PARAM','^','.','AREG','XREG','YREG'
,'SR',',','=','==+','==-','==*','==/','==MOD','==&','==!','==%','==LSH','==RSH','RTI'
,'BREAK','POP','PUSH','UNTILL','[','ASM','RETURN','EXIT','DO','WHILE','IFF','IF','FOR'
,'PROC_IDENT','FUNC_IDENT','OD','NUMBER','CUR_LOC','@','*','/','MOD','LSH','RSH','+'
,'-','!','XOR','&','%',']',')','AND','OR','>','<','GTEQ','LTEQ','#','THEN','ELSEIF'
,'ELSE','FI','INTERRUPT_IDENT' }
FOLLOW['SysDecl'] { 'MODULE','$' }
FOLLOW['Vector_1'] { 'MODULE','$' }
FOLLOW['VectorEnd'] { }
FOLLOW['VectorEnd_1'] { }
FOLLOW['AddressEnd'] { '=' }
FOLLOW['AddressEnd_1'] { '=' }
FOLLOW['VectorAddress'] { ')' }
FOLLOW['Define'] { 'VECTOR','MODULE','$' }
FOLLOW['Define_1'] { 'VECTOR','MODULE','$' }
FOLLOW['DefList'] { }
FOLLOW['DefList_1'] { }
FOLLOW['Def'] { ',' }
FOLLOW['TypeDefDecl'] { 'DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['TypeDefDecl_1'] { 'DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['EndTypeDef'] { }
FOLLOW['EndTypeDef_1'] { }
FOLLOW['RecDefField'] { ']' }
FOLLOW['RecDefField_1'] { }
FOLLOW['Fields'] { }
FOLLOW['Declare'] { 'TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['Declare_1'] { 'TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['DeclareEnd'] { }
FOLLOW['DeclareEnd_1'] { }
FOLLOW['DeclareParams'] { ')' }
FOLLOW['DeclareParams_1'] { ')' }
FOLLOW['DeclParamList'] { }
FOLLOW['DeclParamList_1'] { }
FOLLOW['DeclPramPointer'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FOLLOW['DeclPramPointer_1'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FOLLOW['DeclParamArray'] { 'POINTER','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL'
 }
FOLLOW['DeclParamArray_1'] { 'POINTER','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL'
 }
FOLLOW['DeclareParamIdentList'] { 'ARRAY','POINTER','RECORDTYPE','CHAR','BYTE','INT'
,'CARD','BOOL' }
FOLLOW['DeclareParamIdentList_1'] { 'ARRAY','POINTER','RECORDTYPE','CHAR','BYTE','INT'
,'CARD','BOOL' }
FOLLOW['DeclareParamIdent'] { ',','ARRAY','POINTER','RECORDTYPE','CHAR','BYTE','INT'
,'CARD','BOOL' }
FOLLOW['DeclarFuncName'] { '(' }
FOLLOW['DeclarFuncName_1'] { '(' }
FOLLOW['DeclareType'] { 'IDENT' }
FOLLOW['DeclareType_1'] { 'IDENT' }
FOLLOW['DeclarePointer'] { 'BYTE','CHAR','INT','CARD','BOOL','RECORDTYPE','IDENT' }
FOLLOW['DeclarePointer_1'] { 'BYTE','CHAR','INT','CARD','BOOL','RECORDTYPE','IDENT'
 }
FOLLOW['DeclareArray'] { 'POINTER','BYTE','CHAR','INT','CARD','BOOL','RECORDTYPE','IDENT'
 }
FOLLOW['DeclareArray_1'] { 'POINTER','BYTE','CHAR','INT','CARD','BOOL','RECORDTYPE'
,'IDENT' }
FOLLOW['DeclarFuncType'] { 'ARRAY','POINTER','BYTE','CHAR','INT','CARD','BOOL','RECORDTYPE'
,'IDENT' }
FOLLOW['FundDecl'] { 'DECLARE','TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['FundDecl_1'] { 'DECLARE','TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['FundPointerDecl'] { 'BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE','DECLARE'
,'TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['FundPointerDecl_1'] { 'BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE','DECLARE'
,'TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['FundArrayDecl'] { 'POINTER','BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE','DECLARE'
,'TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['FundArrayDecl_1'] { 'POINTER','BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE'
,'DECLARE','TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['FunctionDecl'] { 'ARRAY','POINTER','BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE'
,'DECLARE','TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['FunctionDecl_1'] { 'ARRAY','POINTER','BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE'
,'DECLARE','TYPE','DEFINE','VECTOR','MODULE','$','(','=' }
FOLLOW['IrqDecl'] { }
FOLLOW['IrqDeclParams'] { }
FOLLOW['IrqBody'] { }
FOLLOW['ProcDecl'] { }
FOLLOW['ProcDeclParams'] { }
FOLLOW['ProcBody'] { }
FOLLOW['FuncDecl'] { }
FOLLOW['FuncDeclParams'] { }
FOLLOW['FuncBody'] { }
FOLLOW['OptInit'] { '(' }
FOLLOW['IdentList'] { 'FUNC','PROC','INTERRUPT','ARRAY','POINTER','BOOL','CHAR','BYTE'
,'INT','CARD','RECORDTYPE','DECLARE','TYPE','DEFINE','VECTOR','MODULE','$','(','='
 }
FOLLOW['IdentList_1'] { 'FUNC','PROC','INTERRUPT','ARRAY','POINTER','BOOL','CHAR','BYTE'
,'INT','CARD','RECORDTYPE','DECLARE','TYPE','DEFINE','VECTOR','MODULE','$','(','='
 }
FOLLOW['Ident'] { ',','FUNC','PROC','INTERRUPT','ARRAY','POINTER','BOOL','CHAR','BYTE'
,'INT','CARD','RECORDTYPE','DECLARE','TYPE','DEFINE','VECTOR','MODULE','$','(','='
 }
FOLLOW['Ident_1'] { ',','FUNC','PROC','INTERRUPT','ARRAY','POINTER','BOOL','CHAR','BYTE'
,'INT','CARD','RECORDTYPE','DECLARE','TYPE','DEFINE','VECTOR','MODULE','$','(','='
 }
FOLLOW['IdentInitType'] { 'IDENT',',','FUNC','PROC','INTERRUPT','ARRAY','POINTER','BOOL'
,'CHAR','BYTE','INT','CARD','RECORDTYPE','DECLARE','TYPE','DEFINE','VECTOR','MODULE'
,'$','(','=' }
FOLLOW['InitData'] { 'IDENT',',','FUNC','PROC','INTERRUPT','ARRAY','POINTER','BOOL'
,'CHAR','BYTE','INT','CARD','RECORDTYPE','DECLARE','TYPE','DEFINE','VECTOR','MODULE'
,'$','(','=' }
FOLLOW['InitData_1'] { 'IDENT',',','FUNC','PROC','INTERRUPT','ARRAY','POINTER','BOOL'
,'CHAR','BYTE','INT','CARD','RECORDTYPE','DECLARE','TYPE','DEFINE','VECTOR','MODULE'
,'$','(','=' }
FOLLOW['ParamList'] { }
FOLLOW['Param_1'] { }
FOLLOW['PramPointer'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FOLLOW['ParamPointer_1'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FOLLOW['ParamArray'] { 'POINTER','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FOLLOW['ParamArray_1'] { 'POINTER','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FOLLOW['DefineParamIdentList'] { 'ARRAY','POINTER','RECORDTYPE','CHAR','BYTE','INT'
,'CARD','BOOL' }
FOLLOW['DefineParamIdentList_1'] { 'ARRAY','POINTER','RECORDTYPE','CHAR','BYTE','INT'
,'CARD','BOOL' }
FOLLOW['DefineParamIdent'] { ',','ARRAY','POINTER','RECORDTYPE','CHAR','BYTE','INT'
,'CARD','BOOL' }
FOLLOW['LocalDecls'] { '(' }
FOLLOW['LocalDecls_1'] { '(' }
FOLLOW['LocalPointerDecl'] { 'CHAR','BYTE','INT','CARD','BOOL','RECORDTYPE','(' }
FOLLOW['LocalPointerDecl_1'] { 'CHAR','BYTE','INT','CARD','BOOL','RECORDTYPE','(' }
FOLLOW['LocalArrayDecl'] { 'POINTER','CHAR','BYTE','INT','CARD','BOOL','RECORDTYPE'
,'(' }
FOLLOW['LocalArrayDecl_1'] { 'POINTER','CHAR','BYTE','INT','CARD','BOOL','RECORDTYPE'
,'(' }
FOLLOW['ConstList'] { ']' }
FOLLOW['ConstList_1'] { ']' }
FOLLOW['CompConst'] { ')','STRING','[','IDENT',',','FUNC','PROC','INTERRUPT','ARRAY'
,'POINTER','BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE','DECLARE','TYPE','DEFINE'
,'VECTOR','MODULE','$','(','=',']' }
FOLLOW['CompConst_1'] { ')','STRING','[','IDENT',',','FUNC','PROC','INTERRUPT','ARRAY'
,'POINTER','BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE','DECLARE','TYPE','DEFINE'
,'VECTOR','MODULE','$','(','=',']' }
FOLLOW['BaseCompConst'] { '+','-',')','STRING','[','IDENT',',','FUNC','PROC','INTERRUPT'
,'ARRAY','POINTER','BOOL','CHAR','BYTE','INT','CARD','RECORDTYPE','DECLARE','TYPE'
,'DEFINE','VECTOR','MODULE','$','(','=',']' }
FOLLOW['AsmStmt'] { }
FOLLOW['Processor_1'] { }
FOLLOW['ProcessorType'] { }
FOLLOW['Section'] { 'PROCESSOR' }
FOLLOW['Section_1'] { 'PROCESSOR' }
FOLLOW['SectionName'] { }
FOLLOW['SectionName_1'] { }
FOLLOW['SectionDef'] { 'IDENT' }
FOLLOW['SectionAttributesList'] { ']' }
FOLLOW['SectionAttributesList_1'] { ']' }
FOLLOW['SectionAtribute'] { ',',']' }
FOLLOW['Modes'] { }
FOLLOW['TrueFalse'] { }
FOLLOW['Org'] { 'SECTION','PROCESSOR' }
FOLLOW['Org_1'] { 'SECTION','PROCESSOR' }
FOLLOW['DefineMemory'] { 'ORG','SECTION','PROCESSOR' }
FOLLOW['DefineMemory_1'] { 'ORG','SECTION','PROCESSOR' }
FOLLOW['DefineStorage'] { 'DB','DW','DL','DAS','DCS','ORG','SECTION','PROCESSOR' }
FOLLOW['DefineStorage_1'] { 'DB','DW','DL','DAS','DCS','ORG','SECTION','PROCESSOR' }
FOLLOW['Proceedure'] { 'DS','DB','DW','DL','DAS','DCS','ORG','SECTION','PROCESSOR' }
FOLLOW['Proceedure_1'] { 'DS','DB','DW','DL','DAS','DCS','ORG','SECTION','PROCESSOR'
 }
FOLLOW['Instruction'] { 'ASMPROC','DS','DB','DW','DL','DAS','DCS','ORG','SECTION','PROCESSOR'
 }
FOLLOW['Instruction_1'] { 'ASMPROC','DS','DB','DW','DL','DAS','DCS','ORG','SECTION'
,'PROCESSOR' }
FOLLOW['Labels'] { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR'
,'ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI'
,'CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED'
,'SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX'
,'LDY','STX','STY','ASMPROC','DS','DB','DW','DL','DAS','DCS','ORG','SECTION','PROCESSOR'
 }
FOLLOW['Label_1'] { }
FOLLOW['AluAdrModes'] { }
FOLLOW['Indirect'] { }
FOLLOW['Indirect_1'] { }
FOLLOW['StaAddressingModes'] { }
FOLLOW['ShiftAddressingModes'] { }
FOLLOW['RelAddressingMode'] { }
FOLLOW['BitAddressModes'] { }
FOLLOW['IncAddressingMOdes'] { }
FOLLOW['JumpAddressingModes'] { }
FOLLOW['JumpIndirect'] { }
FOLLOW['JumpDirect'] { '(' }
FOLLOW['CallAddressingMode'] { }
FOLLOW['LdxAddressingMode'] { }
FOLLOW['CPX_CPY_AddressingMode'] { }
FOLLOW['StxAddressingMode'] { }
FOLLOW['LdyAddressingMode'] { }
FOLLOW['StyAddressingMode'] { }
FOLLOW['OptIndexReg'] { }
FOLLOW['OptIndexReg_1'] { }
FOLLOW['OptXReg'] { }
FOLLOW['OptYReg'] { }
FOLLOW['AsmConstList'] { }
FOLLOW['AsmConstList_1'] { }
FOLLOW['AsmConstList_2'] { }
FOLLOW['AsmConstant'] { ',',')','(' }
FOLLOW['AsmConstant_1'] { ',',')','(' }
FOLLOW['AsmConstAddSub'] { '>','<',',',')','(' }
FOLLOW['AsmConstAddSub_1'] { '>','<',',',')','(' }
FOLLOW['BaseAsmConstant'] { '+','-','>','<',',',')','(' }
---------------- Create Parse Table --------------
Table Entries = 1943
------------ Check For Conflicts-------------
