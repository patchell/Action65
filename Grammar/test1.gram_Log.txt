???????? $ Nullable Set(0)
TERMINALS['Terminals'] { 'IDENT' }
FIRST['IDENT'] { 'IDENT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER' }
FIRST['NUMBER'] { 'NUMBER' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING' }
FIRST['STRING'] { 'STRING' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR' }
FIRST['VECTOR'] { 'VECTOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE' }
FIRST['MODULE'] { 'MODULE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN' }
FIRST['RETURN'] { 'RETURN' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
 }
FIRST['PROC'] { 'PROC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC' }
FIRST['FUNC'] { 'FUNC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT' }
FIRST['INTERRUPT'] { 'INTERRUPT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT' }
FIRST['INTERRUPT_IDENT'] { 'INTERRUPT_IDENT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT' }
FIRST['PROC_IDENT'] { 'PROC_IDENT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT' }
FIRST['FUNC_IDENT'] { 'FUNC_IDENT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR' }
FIRST['FOR'] { 'FOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE' }
FIRST['WHILE'] { 'WHILE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
 }
FIRST['DO'] { 'DO' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD' }
FIRST['OD'] { 'OD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN' }
FIRST['BEGIN'] { 'BEGIN' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END' }
FIRST['END'] { 'END' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT' }
FIRST['EXIT'] { 'EXIT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF' }
FIRST['IF'] { 'IF' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN' }
FIRST['THEN'] { 'THEN' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF' }
FIRST['ELSEIF'] { 'ELSEIF' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE' }
FIRST['ELSE'] { 'ELSE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI' }
FIRST['FI'] { 'FI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF' }
FIRST['IFF'] { 'IFF' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI' }
FIRST['FFI'] { 'FFI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL' }
FIRST['UNTILL'] { 'UNTILL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
 }
FIRST['TO'] { 'TO' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP' }
FIRST['STEP'] { 'STEP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR' }
FIRST['OR'] { 'OR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND' }
FIRST['AND'] { 'AND' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ' }
FIRST['GTEQ'] { 'GTEQ' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ' }
FIRST['LTEQ'] { 'LTEQ' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE' }
FIRST['DEFINE'] { 'DEFINE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE' }
FIRST['TYPE'] { 'TYPE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE' }
FIRST['RECORDTYPE'] { 'RECORDTYPE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL' }
FIRST['BOOL'] { 'BOOL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR' }
FIRST['CHAR'] { 'CHAR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
 }
FIRST['BYTE'] { 'BYTE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD' }
FIRST['CARD'] { 'CARD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT' }
FIRST['INT'] { 'INT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER' }
FIRST['POINTER'] { 'POINTER' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY' }
FIRST['ARRAY'] { 'ARRAY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH' }
FIRST['PUSH'] { 'PUSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP' }
FIRST['POP'] { 'POP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK' }
FIRST['BREAK'] { 'BREAK' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS' }
FIRST['BITS'] { 'BITS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC' }
FIRST['ACC'] { 'ACC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG' }
FIRST['XREG'] { 'XREG' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG' }
FIRST['YREG'] { 'YREG' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
 }
FIRST['ASM'] { 'ASM' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION' }
FIRST['SECTION'] { 'SECTION' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START' }
FIRST['START'] { 'START' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE' }
FIRST['SIZE'] { 'SIZE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE' }
FIRST['MODE'] { 'MODE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE' }
FIRST['ZEROPAGE'] { 'ZEROPAGE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY' }
FIRST['READ_ONLY'] { 'READ_ONLY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE' }
FIRST['READ_WRITE'] { 'READ_WRITE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true' }
FIRST['true'] { 'true' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
 }
FIRST['false'] { 'false' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG' }
FIRST['ORG'] { 'ORG' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB' }
FIRST['DB'] { 'DB' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW' }
FIRST['DW'] { 'DW' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL' }
FIRST['DL'] { 'DL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS' }
FIRST['DAS'] { 'DAS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS' }
FIRST['DCS'] { 'DCS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS' }
FIRST['DS'] { 'DS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC' }
FIRST['ASMPROC'] { 'ASMPROC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC' }
FIRST['EPROC'] { 'EPROC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE' }
FIRST['LOCAL_LABLE'] { 'LOCAL_LABLE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
 }
FIRST['GLOBAL_LABLE'] { 'GLOBAL_LABLE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE' }
FIRST['GLOBAL_LABLE'] { 'GLOBAL_LABLE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC' }
FIRST['ADC'] { 'ADC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL' }
FIRST['ASL'] { 'ASL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC' }
FIRST['BCC'] { 'BCC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS' }
FIRST['BCS'] { 'BCS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ' }
FIRST['BEQ'] { 'BEQ' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI' }
FIRST['BMI'] { 'BMI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE' }
FIRST['BNE'] { 'BNE' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL' }
FIRST['BPL'] { 'BPL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC' }
FIRST['BVC'] { 'BVC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS' }
FIRST['BVS'] { 'BVS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
 }
FIRST['BIT'] { 'BIT' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK' }
FIRST['BRK'] { 'BRK' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC' }
FIRST['CLC'] { 'CLC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD' }
FIRST['CLD'] { 'CLD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI' }
FIRST['CLI'] { 'CLI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV' }
FIRST['CLV'] { 'CLV' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP' }
FIRST['CMP'] { 'CMP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX' }
FIRST['CPX'] { 'CPX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY' }
FIRST['CPY'] { 'CPY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC' }
FIRST['DEC'] { 'DEC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX' }
FIRST['DEX'] { 'DEX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY' }
FIRST['DEY'] { 'DEY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR' }
FIRST['EOR'] { 'EOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC' }
FIRST['INC'] { 'INC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
 }
FIRST['INX'] { 'INX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY' }
FIRST['INY'] { 'INY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP' }
FIRST['JMP'] { 'JMP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR' }
FIRST['JSR'] { 'JSR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA' }
FIRST['LDA'] { 'LDA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX' }
FIRST['LDX'] { 'LDX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY' }
FIRST['LDY'] { 'LDY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR' }
FIRST['LSR'] { 'LSR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP' }
FIRST['NOP'] { 'NOP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA' }
FIRST['ORA'] { 'ORA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA' }
FIRST['PHA'] { 'PHA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA' }
FIRST['PLA'] { 'PLA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP' }
FIRST['PHP'] { 'PHP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP' }
FIRST['PLP'] { 'PLP' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
 }
FIRST['ROL'] { 'ROL' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR' }
FIRST['ROR'] { 'ROR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI' }
FIRST['RTI'] { 'RTI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS' }
FIRST['RTS'] { 'RTS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC' }
FIRST['SBC'] { 'SBC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA' }
FIRST['STA'] { 'STA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC' }
FIRST['SEC'] { 'SEC' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED' }
FIRST['SED'] { 'SED' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI' }
FIRST['SEI'] { 'SEI' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX' }
FIRST['STX'] { 'STX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY' }
FIRST['STY'] { 'STY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX' }
FIRST['TAX'] { 'TAX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY' }
FIRST['TAY'] { 'TAY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA' }
FIRST['TXA'] { 'TXA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
 }
FIRST['TYA'] { 'TYA' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS' }
FIRST['TXS'] { 'TXS' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX' }
FIRST['TSX'] { 'TSX' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X' }
FIRST['X'] { 'X' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y' }
FIRST['Y'] { 'Y' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A' }
FIRST['A'] { 'A' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR' }
FIRST['SR'] { 'SR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@' }
FIRST['@'] { '@' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.' }
FIRST['.'] { '.' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^' }
FIRST['^'] { '^' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!' }
FIRST['!'] { '!' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR' }
FIRST['XOR'] { 'XOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&' }
FIRST['&'] { '&' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%' }
FIRST['%'] { '%' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#' }
FIRST['#'] { '#' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>' }
FIRST['>'] { '>' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<' }
FIRST['<'] { '<' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{' }
FIRST['{'] { '{' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}' }
FIRST['}'] { '}' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
 }
FIRST['='] { '=' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+' }
FIRST['==+'] { '==+' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-' }
FIRST['==-'] { '==-' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*' }
FIRST['==*'] { '==*' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/' }
FIRST['==/'] { '==/' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD' }
FIRST['==MOD'] { '==MOD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&' }
FIRST['==&'] { '==&' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!' }
FIRST['==!'] { '==!' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR' }
FIRST['==XOR'] { '==XOR' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%' }
FIRST['==%'] { '==%' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH' }
FIRST['==LSH'] { '==LSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH' }
FIRST['==RSH'] { '==RSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[' }
FIRST['['] { '[' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
 }
FIRST[']'] { ']' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',' }
FIRST[','] { ',' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';' }
FIRST[';'] { ';' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+' }
FIRST['+'] { '+' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-' }
FIRST['-'] { '-' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*' }
FIRST['*'] { '*' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/' }
FIRST['/'] { '/' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD' }
FIRST['MOD'] { 'MOD' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD','LSH' }
FIRST['LSH'] { 'LSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD','LSH','RSH' }
FIRST['RSH'] { 'RSH' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD','LSH','RSH','(' }
FIRST['('] { '(' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD','LSH','RSH','(',')' }
FIRST[')'] { ')' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD','LSH','RSH','(',')','NEG' }
FIRST['NEG'] { 'NEG' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD','LSH','RSH','(',')','NEG','CARRY' }
FIRST['CARRY'] { 'CARRY' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD','LSH','RSH','(',')','NEG','CARRY','ZERO' }
FIRST['ZERO'] { 'ZERO' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD','LSH','RSH','(',')','NEG','CARRY','ZERO','OVERFLOW'
 }
FIRST['OVERFLOW'] { 'OVERFLOW' }
TERMINALS['Terminals'] { 'IDENT','NUMBER','STRING','VECTOR','MODULE','RETURN','PROC'
,'FUNC','INTERRUPT','INTERRUPT_IDENT','PROC_IDENT','FUNC_IDENT','FOR','WHILE','DO'
,'OD','BEGIN','END','EXIT','IF','THEN','ELSEIF','ELSE','FI','IFF','FFI','UNTILL','TO'
,'STEP','OR','AND','GTEQ','LTEQ','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE'
,'CARD','INT','POINTER','ARRAY','PUSH','POP','BREAK','BITS','ACC','XREG','YREG','ASM'
,'SECTION','START','SIZE','MODE','ZEROPAGE','READ_ONLY','READ_WRITE','true','false'
,'ORG','DB','DW','DL','DAS','DCS','DS','ASMPROC','EPROC','LOCAL_LABLE','GLOBAL_LABLE'
,'GLOBAL_LABLE','ADC','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT'
,'BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX'
,'INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL'
,'ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA'
,'TXS','TSX','X','Y','A','SR','@','.','^','!','XOR','&','%','#','>','<','{','}','='
,'==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']'
,',',';','+','-','*','/','MOD','LSH','RSH','(',')','NEG','CARRY','ZERO','OVERFLOW'
,'e','$' }
NONTERMINALS['Non Terminals'] { 'Ident','Ident_1','ArithExpr','BitwiseOR_1','BitwiseAND'
,'BitwiseAND_1','BitwiseXOR','BitwiseXOR_1','AddExpr','AddExpr_1','ShifExpr','ShiftExpr_1'
,'MultExpr','MultExpr_1','Unary','Factor','Factor_1','IdentInit','IdentInit_1','Address'
,'Address_1','Data','Data_1','ArrayDim','ArrayDim_1','ConstList','ConstList_1','CompConst'
,'CompConst_1','BaseCompConst','Value','Value_1','AddressOf','AddressOf_1','MemContentsType'
,'MemContentsType_1','MemContents' }
*********** Build Nullable Set **********
****************Create NOT nullable set ************************
----- Calc First Sets------
FIRST['Ident'] { }
FIRST['Ident_1'] { 'IDENT','e' }
FIRST['ArithExpr'] { '-','IDENT' }
FIRST['BitwiseOR_1'] { '%','e' }
FIRST['BitwiseAND'] { '-','IDENT' }
FIRST['BitwiseAND_1'] { '&','e' }
FIRST['BitwiseXOR'] { '-','IDENT' }
FIRST['BitwiseXOR_1'] { '!','XOR','e' }
FIRST['AddExpr'] { '-','IDENT' }
FIRST['AddExpr_1'] { '+','-','e' }
FIRST['ShifExpr'] { '-','IDENT' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','e' }
FIRST['MultExpr'] { '-','IDENT' }
FIRST['MultExpr_1'] { '*','/','MOD','e' }
FIRST['Unary'] { '-','IDENT' }
FIRST['Factor'] { 'IDENT' }
FIRST['Factor_1'] { '(','e' }
FIRST['IdentInit'] { }
FIRST['IdentInit_1'] { '=','e' }
FIRST['Address'] { 'NUMBER','*','@','INTERRUPT_IDENT','FUNC_IDENT','PROC_IDENT' }
FIRST['Address_1'] { '[','e' }
FIRST['Data'] { 'NUMBER','*','@','INTERRUPT_IDENT','FUNC_IDENT','PROC_IDENT' }
FIRST['Data_1'] { 'STRING','e' }
FIRST['ArrayDim'] { 'e' }
FIRST['ArrayDim_1'] { '(','e' }
FIRST['ConstList'] { 'NUMBER','*','@','INTERRUPT_IDENT','FUNC_IDENT','PROC_IDENT' }
FIRST['ConstList_1'] { ',','e' }
FIRST['CompConst'] { 'e','NUMBER','*','@','INTERRUPT_IDENT','FUNC_IDENT','PROC_IDENT'
 }
FIRST['CompConst_1'] { '+','-','e' }
FIRST['BaseCompConst'] { 'NUMBER','*','@','INTERRUPT_IDENT','FUNC_IDENT','PROC_IDENT'
,'e' }
FIRST['Value'] { 'IDENT' }
FIRST['Value_1'] { 'NUMBER','PUSH','@','e' }
FIRST['AddressOf'] { 'IDENT' }
FIRST['AddressOf_1'] { 'PROC_IDENT','FUNC_IDENT','INTERRUPT_IDENT','e' }
FIRST['MemContentsType'] { 'e','IDENT' }
FIRST['MemContentsType_1'] { '^','.','e' }
FIRST['MemContents'] { 'IDENT','e' }
----- Calc Follow Sets------
------------ Follow Sets ---------------
FOLLOW['Ident'] { '$' }
FOLLOW['Ident_1'] { '$' }
FOLLOW['ArithExpr'] { ')' }
FOLLOW['BitwiseOR_1'] { ')' }
FOLLOW['BitwiseAND'] { '%',')' }
FOLLOW['BitwiseAND_1'] { '%',')' }
FOLLOW['BitwiseXOR'] { '&','%',')' }
FOLLOW['BitwiseXOR_1'] { '&','%',')' }
FOLLOW['AddExpr'] { '!','XOR','&','%',')' }
FOLLOW['AddExpr_1'] { '!','XOR','&','%',')' }
FOLLOW['ShifExpr'] { '+','-','!','XOR','&','%',')' }
FOLLOW['ShiftExpr_1'] { '+','-','!','XOR','&','%',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','XOR','&','%',')' }
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','XOR','&','%',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',')' }
FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',')' }
FOLLOW['Factor_1'] { '*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',')' }
FOLLOW['IdentInit'] { 'IDENT','$' }
FOLLOW['IdentInit_1'] { 'IDENT','$' }
FOLLOW['Address'] { }
FOLLOW['Address_1'] { }
FOLLOW['Data'] { ']' }
FOLLOW['Data_1'] { ']' }
FOLLOW['ArrayDim'] { '=','IDENT','$' }
FOLLOW['ArrayDim_1'] { '=','IDENT','$' }
FOLLOW['ConstList'] { 'STRING',']' }
FOLLOW['ConstList_1'] { 'STRING',']' }
FOLLOW['CompConst'] { '[',')',',','STRING',']' }
FOLLOW['CompConst_1'] { '[',')',',','STRING',']' }
FOLLOW['BaseCompConst'] { '+','-','[',')',',','STRING',']' }
FOLLOW['Value'] { '(','*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',')' }
FOLLOW['Value_1'] { '(','*','/','MOD','LSH','RSH','+','-','!','XOR','&','%',')' }
FOLLOW['AddressOf'] { }
FOLLOW['AddressOf_1'] { }
FOLLOW['MemContentsType'] { 'NUMBER','PUSH','@','(','*','/','MOD','LSH','RSH','+','-'
,'!','XOR','&','%',')','PROC_IDENT','FUNC_IDENT','INTERRUPT_IDENT' }
FOLLOW['MemContentsType_1'] { 'NUMBER','PUSH','@','(','*','/','MOD','LSH','RSH','+'
,'-','!','XOR','&','%',')','PROC_IDENT','FUNC_IDENT','INTERRUPT_IDENT' }
FOLLOW['MemContents'] { '^','.','NUMBER','PUSH','@','(','*','/','MOD','LSH','RSH','+'
,'-','!','XOR','&','%',')','PROC_IDENT','FUNC_IDENT','INTERRUPT_IDENT' }
---------------- Create Parse Table --------------
Table Entries = 239
------------ Check For Conflicts-------------
