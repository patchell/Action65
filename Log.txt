File:test3.act has 1298 Bytes
Parser Created
Enter PUSH Lookahead node LHNext <NODE is NULL>
---- End Enter PUSH Lookahead node LHNext ----
PUSH After First POP LHNext node LHNext <NODE is NULL>
---- End PUSH After First POP LHNext node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     -1  +- 'CODE-BLOCK'
    39     -1     40     +- 'NUMBER'$00AA
    40     -1     41     +- 'NUMBER'$00BB
    41     -1     42     +- 'NUMBER'$00CE
    42     -1     43     +- 'NUMBER'$00A1
    43     -1     -1     +- 'NUMBER'$00C0
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     -1  +- 'CODE-BLOCK'
    39     -1     40     +- 'NUMBER'$00AA
    40     -1     41     +- 'NUMBER'$00BB
    41     -1     42     +- 'NUMBER'$00CE
    42     -1     43     +- 'NUMBER'$00A1
    43     -1     -1     +- 'NUMBER'$00C0
---- End PUSH After First POP LHNext node LHNext ----
Enter PUSH Lookahead node LHNext <NODE is NULL>
---- End Enter PUSH Lookahead node LHNext ----
PUSH After First POP LHNext node LHNext <NODE is NULL>
---- End PUSH After First POP LHNext node LHNext ----
Enter PUSH Lookahead node LHNext <NODE is NULL>
---- End Enter PUSH Lookahead node LHNext ----
PUSH After First POP LHNext node LHNext <NODE is NULL>
---- End PUSH After First POP LHNext node LHNext ----
---- PUSH After AddNode(pN) LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:24  Col:6
    49     48     -1  +- 'PUSH'
    48     -1     -1     +- '.A'
---- End PUSH After AddNode(pN) LHNext node LHNext ----
---- THEN LHNext After Statements ----
	 NUMB  CHILD  NEXT  Line:22  Col:16
    47     46     52  +- 'EQU-TO'
    46     -1     45  |  +- 'IDENT': xx
    45     -1     -1  |  +- 'IDENT': c
    52     49     -1  +- 'THEN'
    49     48     51     +- 'PUSH'
    48     -1     -1     |  +- '.A'
    51     50     -1     +- 'POP'
    50     -1     -1        +- '.Y'
---- End THEN LHNext After Statements ----
---- FI node LHChild After AddMpde([N) ----
	 NUMB  CHILD  NEXT  Line:22  Col:16
    47     46     52  +- 'EQU-TO'
    46     -1     45  |  +- 'IDENT': xx
    45     -1     -1  |  +- 'IDENT': c
    52     49     53  +- 'THEN'
    49     48     51  |  +- 'PUSH'
    48     -1     -1  |  |  +- '.A'
    51     50     -1  |  +- 'POP'
    50     -1     -1  |     +- '.Y'
    53     -1     -1  +- 'FI'
---- End FI node LHChild After AddMpde([N) ----
---- FI node LHNext At Exit ----
	 NUMB  CHILD  NEXT  Line:22  Col:16
    47     46     52  +- 'EQU-TO'
    46     -1     45  |  +- 'IDENT': xx
    45     -1     -1  |  +- 'IDENT': c
    52     49     53  +- 'THEN'
    49     48     51  |  +- 'PUSH'
    48     -1     -1  |  |  +- '.A'
    51     50     -1  |  +- 'POP'
    50     -1     -1  |     +- '.Y'
    53     -1     -1  +- 'FI'
---- End FI node LHNext At Exit ----
---- IF node LHNext Befpre IFF decent ----
	 NUMB  CHILD  NEXT  Line:26  Col:7
    54     47     -1  +- 'IF'
    47     46     52     +- 'EQU-TO'
    46     -1     45     |  +- 'IDENT': xx
    45     -1     -1     |  +- 'IDENT': c
    52     49     53     +- 'THEN'
    49     48     51     |  +- 'PUSH'
    48     -1     -1     |  |  +- '.A'
    51     50     -1     |  +- 'POP'
    50     -1     -1     |     +- '.Y'
    53     -1     -1     +- 'FI'
---- End IF node LHNext Befpre IFF decent ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:26  Col:7
    54     47     -1  +- 'IF'
    47     46     52     +- 'EQU-TO'
    46     -1     45     |  +- 'IDENT': xx
    45     -1     -1     |  +- 'IDENT': c
    52     49     53     +- 'THEN'
    49     48     51     |  +- 'PUSH'
    48     -1     -1     |  |  +- '.A'
    51     50     -1     |  +- 'POP'
    50     -1     -1     |     +- '.Y'
    53     -1     -1     +- 'FI'
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:26  Col:7
    54     47     -1  +- 'IF'
    47     46     52     +- 'EQU-TO'
    46     -1     45     |  +- 'IDENT': xx
    45     -1     -1     |  +- 'IDENT': c
    52     49     53     +- 'THEN'
    49     48     51     |  +- 'PUSH'
    48     -1     -1     |  |  +- '.A'
    51     50     -1     |  +- 'POP'
    50     -1     -1     |     +- '.Y'
    53     -1     -1     +- 'FI'
---- End PUSH After First POP LHNext node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:26  Col:7
    54     47     58  +- 'IF'
    47     46     52  |  +- 'EQU-TO'
    46     -1     45  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  +- 'IDENT': c
    52     49     53  |  +- 'THEN'
    49     48     51  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  +- '.A'
    51     50     -1  |  |  +- 'POP'
    50     -1     -1  |  |     +- '.Y'
    53     -1     -1  |  +- 'FI'
    58     57     -1  +- 'UNTILL'
    57     56     -1     +- 'NEQ'
    56     -1     55        +- 'IDENT': gg
    55     -1     -1        +- 'IDENT': jj
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:26  Col:7
    54     47     58  +- 'IF'
    47     46     52  |  +- 'EQU-TO'
    46     -1     45  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  +- 'IDENT': c
    52     49     53  |  +- 'THEN'
    49     48     51  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  +- '.A'
    51     50     -1  |  |  +- 'POP'
    50     -1     -1  |  |     +- '.Y'
    53     -1     -1  |  +- 'FI'
    58     57     -1  +- 'UNTILL'
    57     56     -1     +- 'NEQ'
    56     -1     55        +- 'IDENT': gg
    55     -1     -1        +- 'IDENT': jj
---- End PUSH After First POP LHNext node LHNext ----
---- PUSH After AddNode(pN) LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:26  Col:7
    54     47     58  +- 'IF'
    47     46     52  |  +- 'EQU-TO'
    46     -1     45  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  +- 'IDENT': c
    52     49     53  |  +- 'THEN'
    49     48     51  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  +- '.A'
    51     50     -1  |  |  +- 'POP'
    50     -1     -1  |  |     +- '.Y'
    53     -1     -1  |  +- 'FI'
    58     57     60  +- 'UNTILL'
    57     56     -1  |  +- 'NEQ'
    56     -1     55  |     +- 'IDENT': gg
    55     -1     -1  |     +- 'IDENT': jj
    60     59     -1  +- 'PUSH'
    59     -1     -1     +- '.A'
---- End PUSH After AddNode(pN) LHNext node LHNext ----
---- IF After IFF node LHNext ----
	 NUMB  CHILD  NEXT  Line:26  Col:7
    54     47     58  +- 'IF'
    47     46     52  |  +- 'EQU-TO'
    46     -1     45  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  +- 'IDENT': c
    52     49     53  |  +- 'THEN'
    49     48     51  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  +- '.A'
    51     50     -1  |  |  +- 'POP'
    50     -1     -1  |  |     +- '.Y'
    53     -1     -1  |  +- 'FI'
    58     57     60  +- 'UNTILL'
    57     56     -1  |  +- 'NEQ'
    56     -1     55  |     +- 'IDENT': gg
    55     -1     -1  |     +- 'IDENT': jj
    60     59     -1  +- 'PUSH'
    59     -1     -1     +- '.A'
---- End IF After IFF node LHNext ----
---- OD node LHNext ----
	 NUMB  CHILD  NEXT  Line:26  Col:7
    54     47     58  +- 'IF'
    47     46     52  |  +- 'EQU-TO'
    46     -1     45  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  +- 'IDENT': c
    52     49     53  |  +- 'THEN'
    49     48     51  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  +- '.A'
    51     50     -1  |  |  +- 'POP'
    50     -1     -1  |  |     +- '.Y'
    53     -1     -1  |  +- 'FI'
    58     57     60  +- 'UNTILL'
    57     56     -1  |  +- 'NEQ'
    56     -1     55  |     +- 'IDENT': gg
    55     -1     -1  |     +- 'IDENT': jj
    60     59     61  +- 'PUSH'
    59     -1     -1  |  +- '.A'
    61     -1     -1  +- 'OD'
---- End OD node LHNext ----
---- DO node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     -1  +- 'DO'
    54     47     58     +- 'IF'
    47     46     52     |  +- 'EQU-TO'
    46     -1     45     |  |  +- 'IDENT': xx
    45     -1     -1     |  |  +- 'IDENT': c
    52     49     53     |  +- 'THEN'
    49     48     51     |  |  +- 'PUSH'
    48     -1     -1     |  |  |  +- '.A'
    51     50     -1     |  |  +- 'POP'
    50     -1     -1     |  |     +- '.Y'
    53     -1     -1     |  +- 'FI'
    58     57     60     +- 'UNTILL'
    57     56     -1     |  +- 'NEQ'
    56     -1     55     |     +- 'IDENT': gg
    55     -1     -1     |     +- 'IDENT': jj
    60     59     61     +- 'PUSH'
    59     -1     -1     |  +- '.A'
    61     -1     -1     +- 'OD'
---- End DO node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     -1  +- 'DO'
    54     47     58     +- 'IF'
    47     46     52     |  +- 'EQU-TO'
    46     -1     45     |  |  +- 'IDENT': xx
    45     -1     -1     |  |  +- 'IDENT': c
    52     49     53     |  +- 'THEN'
    49     48     51     |  |  +- 'PUSH'
    48     -1     -1     |  |  |  +- '.A'
    51     50     -1     |  |  +- 'POP'
    50     -1     -1     |  |     +- '.Y'
    53     -1     -1     |  +- 'FI'
    58     57     60     +- 'UNTILL'
    57     56     -1     |  +- 'NEQ'
    56     -1     55     |     +- 'IDENT': gg
    55     -1     -1     |     +- 'IDENT': jj
    60     59     61     +- 'PUSH'
    59     -1     -1     |  +- '.A'
    61     -1     -1     +- 'OD'
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     -1  +- 'DO'
    54     47     58     +- 'IF'
    47     46     52     |  +- 'EQU-TO'
    46     -1     45     |  |  +- 'IDENT': xx
    45     -1     -1     |  |  +- 'IDENT': c
    52     49     53     |  +- 'THEN'
    49     48     51     |  |  +- 'PUSH'
    48     -1     -1     |  |  |  +- '.A'
    51     50     -1     |  |  +- 'POP'
    50     -1     -1     |  |     +- '.Y'
    53     -1     -1     |  +- 'FI'
    58     57     60     +- 'UNTILL'
    57     56     -1     |  +- 'NEQ'
    56     -1     55     |     +- 'IDENT': gg
    55     -1     -1     |     +- 'IDENT': jj
    60     59     61     +- 'PUSH'
    59     -1     -1     |  +- '.A'
    61     -1     -1     +- 'OD'
---- End PUSH After First POP LHNext node LHNext ----
Enter PUSH Lookahead node LHNext <NODE is NULL>
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:31  Col:6
    66     -1     -1  +- 'BREAK'
---- End PUSH After First POP LHNext node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:31  Col:6
    66     -1     67  +- 'BREAK'
    67     -1     -1  +- 'EXIT'
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:31  Col:6
    66     -1     67  +- 'BREAK'
    67     -1     -1  +- 'EXIT'
---- End PUSH After First POP LHNext node LHNext ----
---- THEN LHNext After Statements ----
	 NUMB  CHILD  NEXT  Line:29  Col:17
    65     64     68  +- '>'
    64     -1     63  |  +- 'IDENT': gg
    63     -1     -1  |  +- 'IDENT': xxx
    68     66     -1  +- 'THEN'
    66     -1     67     +- 'BREAK'
    67     -1     -1     +- 'EXIT'
---- End THEN LHNext After Statements ----
Enter PUSH Lookahead node LHNext <NODE is NULL>
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:34  Col:6
    70     69     -1  +- '=ADD'
    69     -1     71     +- 'IDENT': gg
    71     -1     -1     +- 'IDENT': e
---- End PUSH After First POP LHNext node LHNext ----
---- PUSH After AddNode(pN) LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:34  Col:6
    70     69     73  +- '=ADD'
    69     -1     71  |  +- 'IDENT': gg
    71     -1     -1  |  +- 'IDENT': e
    73     72     -1  +- 'PUSH'
    72     -1     -1     +- '.X'
---- End PUSH After AddNode(pN) LHNext node LHNext ----
---- FI node LHChild After AddMpde([N) ----
	 NUMB  CHILD  NEXT  Line:29  Col:17
    65     64     68  +- '>'
    64     -1     63  |  +- 'IDENT': gg
    63     -1     -1  |  +- 'IDENT': xxx
    68     66     74  +- 'THEN'
    66     -1     67  |  +- 'BREAK'
    67     -1     -1  |  +- 'EXIT'
    74     70     75  +- 'ELSE'
    70     69     73  |  +- '=ADD'
    69     -1     71  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  +- 'IDENT': e
    73     72     -1  |  +- 'PUSH'
    72     -1     -1  |     +- '.X'
    75     -1     -1  +- 'FI'
---- End FI node LHChild After AddMpde([N) ----
---- FI node LHNext At Exit ----
	 NUMB  CHILD  NEXT  Line:29  Col:17
    65     64     68  +- '>'
    64     -1     63  |  +- 'IDENT': gg
    63     -1     -1  |  +- 'IDENT': xxx
    68     66     74  +- 'THEN'
    66     -1     67  |  +- 'BREAK'
    67     -1     -1  |  +- 'EXIT'
    74     70     75  +- 'ELSE'
    70     69     73  |  +- '=ADD'
    69     -1     71  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  +- 'IDENT': e
    73     72     -1  |  +- 'PUSH'
    72     -1     -1  |     +- '.X'
    75     -1     -1  +- 'FI'
---- End FI node LHNext At Exit ----
---- IF node LHNext Befpre IFF decent ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     -1  +- 'IF'
    65     64     68     +- '>'
    64     -1     63     |  +- 'IDENT': gg
    63     -1     -1     |  +- 'IDENT': xxx
    68     66     74     +- 'THEN'
    66     -1     67     |  +- 'BREAK'
    67     -1     -1     |  +- 'EXIT'
    74     70     75     +- 'ELSE'
    70     69     73     |  +- '=ADD'
    69     -1     71     |  |  +- 'IDENT': gg
    71     -1     -1     |  |  +- 'IDENT': e
    73     72     -1     |  +- 'PUSH'
    72     -1     -1     |     +- '.X'
    75     -1     -1     +- 'FI'
---- End IF node LHNext Befpre IFF decent ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     -1  +- 'IF'
    65     64     68     +- '>'
    64     -1     63     |  +- 'IDENT': gg
    63     -1     -1     |  +- 'IDENT': xxx
    68     66     74     +- 'THEN'
    66     -1     67     |  +- 'BREAK'
    67     -1     -1     |  +- 'EXIT'
    74     70     75     +- 'ELSE'
    70     69     73     |  +- '=ADD'
    69     -1     71     |  |  +- 'IDENT': gg
    71     -1     -1     |  |  +- 'IDENT': e
    73     72     -1     |  +- 'PUSH'
    72     -1     -1     |     +- '.X'
    75     -1     -1     +- 'FI'
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     -1  +- 'IF'
    65     64     68     +- '>'
    64     -1     63     |  +- 'IDENT': gg
    63     -1     -1     |  +- 'IDENT': xxx
    68     66     74     +- 'THEN'
    66     -1     67     |  +- 'BREAK'
    67     -1     -1     |  +- 'EXIT'
    74     70     75     +- 'ELSE'
    70     69     73     |  +- '=ADD'
    69     -1     71     |  |  +- 'IDENT': gg
    71     -1     -1     |  |  +- 'IDENT': e
    73     72     -1     |  +- 'PUSH'
    72     -1     -1     |     +- '.X'
    75     -1     -1     +- 'FI'
---- End PUSH After First POP LHNext node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     -1  +- 'CODE-BLOCK'
    77     -1     78     +- 'NUMBER'$00AA
    78     -1     79     +- 'NUMBER'$00BB
    79     -1     80     +- 'NUMBER'$00CE
    80     -1     81     +- 'NUMBER'$00A1
    81     -1     -1     +- 'NUMBER'$00C0
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     -1  +- 'CODE-BLOCK'
    77     -1     78     +- 'NUMBER'$00AA
    78     -1     79     +- 'NUMBER'$00BB
    79     -1     80     +- 'NUMBER'$00CE
    80     -1     81     +- 'NUMBER'$00A1
    81     -1     -1     +- 'NUMBER'$00C0
---- End PUSH After First POP LHNext node LHNext ----
Enter PUSH Lookahead node LHNext <NODE is NULL>
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:39  Col:3
    84     83     -1  +- 'Assign ='
    83     -1     89     +- 'IDENT': c
    89     88     -1     +- 'SUB'
    88     87     85        +- 'MUL'
    87     -1     86        |  +- 'IDENT': xx
    86     -1     -1        |  +- 'IDENT': x
    85     -1     -1        +- 'IDENT': e
---- End PUSH After First POP LHNext node LHNext ----
---- OD node LHNext ----
	 NUMB  CHILD  NEXT  Line:39  Col:3
    84     83     90  +- 'Assign ='
    83     -1     89  |  +- 'IDENT': c
    89     88     -1  |  +- 'SUB'
    88     87     85  |     +- 'MUL'
    87     -1     86  |     |  +- 'IDENT': xx
    86     -1     -1  |     |  +- 'IDENT': x
    85     -1     -1  |     +- 'IDENT': e
    90     -1     -1  +- 'OD'
---- End OD node LHNext ----
---- DO node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     -1  +- 'DO'
    84     83     90     +- 'Assign ='
    83     -1     89     |  +- 'IDENT': c
    89     88     -1     |  +- 'SUB'
    88     87     85     |     +- 'MUL'
    87     -1     86     |     |  +- 'IDENT': xx
    86     -1     -1     |     |  +- 'IDENT': x
    85     -1     -1     |     +- 'IDENT': e
    90     -1     -1     +- 'OD'
---- End DO node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     -1  +- 'DO'
    84     83     90     +- 'Assign ='
    83     -1     89     |  +- 'IDENT': c
    89     88     -1     |  +- 'SUB'
    88     87     85     |     +- 'MUL'
    87     -1     86     |     |  +- 'IDENT': xx
    86     -1     -1     |     |  +- 'IDENT': x
    85     -1     -1     |     +- 'IDENT': e
    90     -1     -1     +- 'OD'
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92     -1  +- 'Assign ='
    92     -1    100     +- 'IDENT': d
   100     99     -1     +- 'SUB'
    99     -1     98        +- 'IDENT': xx
    98     97     -1        +- 'ADD'
    97     96     94           +- 'MUL'
    96     -1     95           |  +- 'IDENT': a
    95     -1     -1           |  +- 'IDENT': xxx
    94     -1     -1           +- 'IDENT': x
---- End PUSH After First POP LHNext node LHNext ----
Enter PUSH Lookahead node LHNext <NODE is NULL>
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:44  Col:3
   105    104     -1  +- 'Assign ='
   104     -1    108     +- 'IDENT': ff
   108    107     -1     +- 'ADD'
   107     -1    106        +- 'NUMBER'$0001
   106     -1     -1        +- 'IDENT': d
---- End PUSH After First POP LHNext node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103     -1  +- 'WHILE'
   103    102    109     +- '>='
   102     -1    101     |  +- 'IDENT': d
   101     -1     -1     |  +- 'IDENT': c
   109    105    110     +- 'DO'
   105    104     -1     |  +- 'Assign ='
   104     -1    108     |     +- 'IDENT': ff
   108    107     -1     |     +- 'ADD'
   107     -1    106     |        +- 'NUMBER'$0001
   106     -1     -1     |        +- 'IDENT': d
   110     -1     -1     +- 'OD'
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103     -1  +- 'WHILE'
   103    102    109     +- '>='
   102     -1    101     |  +- 'IDENT': d
   101     -1     -1     |  +- 'IDENT': c
   109    105    110     +- 'DO'
   105    104     -1     |  +- 'Assign ='
   104     -1    108     |     +- 'IDENT': ff
   108    107     -1     |     +- 'ADD'
   107     -1    106     |        +- 'NUMBER'$0001
   106     -1     -1     |        +- 'IDENT': d
   110     -1     -1     +- 'OD'
---- End PUSH After First POP LHNext node LHNext ----
---- IF After IFF node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103     -1  +- 'WHILE'
   103    102    109     +- '>='
   102     -1    101     |  +- 'IDENT': d
   101     -1     -1     |  +- 'IDENT': c
   109    105    110     +- 'DO'
   105    104     -1     |  +- 'Assign ='
   104     -1    108     |     +- 'IDENT': ff
   108    107     -1     |     +- 'ADD'
   107     -1    106     |        +- 'NUMBER'$0001
   106     -1     -1     |        +- 'IDENT': d
   110     -1     -1     +- 'OD'
---- End IF After IFF node LHNext ----
Enter PUSH Lookahead node LHNext <NODE is NULL>
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:48  Col:3
   124    123     -1  +- 'Assign ='
   123     -1    129     +- 'IDENT': dd
   129    128     -1     +- 'DIV'
   128     -1    127        +- 'IDENT': e
   127    126     -1        +- 'MUL'
   126     -1    125           +- 'NUMBER'$0008
   125     -1     -1           +- 'IDENT': d
---- End PUSH After First POP LHNext node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103    132  +- 'WHILE'
   103    102    109  |  +- '>='
   102     -1    101  |  |  +- 'IDENT': d
   101     -1     -1  |  |  +- 'IDENT': c
   109    105    110  |  +- 'DO'
   105    104     -1  |  |  +- 'Assign ='
   104     -1    108  |  |     +- 'IDENT': ff
   108    107     -1  |  |     +- 'ADD'
   107     -1    106  |  |        +- 'NUMBER'$0001
   106     -1     -1  |  |        +- 'IDENT': d
   110     -1     -1  |  +- 'OD'
   132    112     -1  +- 'FOR'
   112     -1    116     +- 'IDENT': a
   116    115    120     +- 'Assign ='
   115    114     -1     |  +- 'ADD'
   114     -1    113     |     +- 'IDENT': xx
   113     -1     -1     |     +- 'IDENT': x
   120    119    122     +- 'TO'
   119    118     -1     |  +- 'SUB'
   118     -1    117     |     +- 'IDENT': c
   117     -1     -1     |     +- 'IDENT': c
   122    121    130     +- 'STEP'
   121     -1     -1     |  +- 'NUMBER'$0003
   130    124    131     +- 'DO'
   124    123     -1     |  +- 'Assign ='
   123     -1    129     |     +- 'IDENT': dd
   129    128     -1     |     +- 'DIV'
   128     -1    127     |        +- 'IDENT': e
   127    126     -1     |        +- 'MUL'
   126     -1    125     |           +- 'NUMBER'$0008
   125     -1     -1     |           +- 'IDENT': d
   131     -1     -1     +- 'OD'
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103    132  +- 'WHILE'
   103    102    109  |  +- '>='
   102     -1    101  |  |  +- 'IDENT': d
   101     -1     -1  |  |  +- 'IDENT': c
   109    105    110  |  +- 'DO'
   105    104     -1  |  |  +- 'Assign ='
   104     -1    108  |  |     +- 'IDENT': ff
   108    107     -1  |  |     +- 'ADD'
   107     -1    106  |  |        +- 'NUMBER'$0001
   106     -1     -1  |  |        +- 'IDENT': d
   110     -1     -1  |  +- 'OD'
   132    112     -1  +- 'FOR'
   112     -1    116     +- 'IDENT': a
   116    115    120     +- 'Assign ='
   115    114     -1     |  +- 'ADD'
   114     -1    113     |     +- 'IDENT': xx
   113     -1     -1     |     +- 'IDENT': x
   120    119    122     +- 'TO'
   119    118     -1     |  +- 'SUB'
   118     -1    117     |     +- 'IDENT': c
   117     -1     -1     |     +- 'IDENT': c
   122    121    130     +- 'STEP'
   121     -1     -1     |  +- 'NUMBER'$0003
   130    124    131     +- 'DO'
   124    123     -1     |  +- 'Assign ='
   123     -1    129     |     +- 'IDENT': dd
   129    128     -1     |     +- 'DIV'
   128     -1    127     |        +- 'IDENT': e
   127    126     -1     |        +- 'MUL'
   126     -1    125     |           +- 'NUMBER'$0008
   125     -1     -1     |           +- 'IDENT': d
   131     -1     -1     +- 'OD'
---- End PUSH After First POP LHNext node LHNext ----
Enter PUSH Lookahead node LHNext <NODE is NULL>
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:51  Col:7
   134    133     -1  +- 'Assign ='
   133     -1    137     +- 'IDENT': gg
   137    136     -1     +- 'SUB'
   136     -1    135        +- 'IDENT': x
   135     -1     -1        +- 'IDENT': x
---- End PUSH After First POP LHNext node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:51  Col:7
   134    133    141  +- 'Assign ='
   133     -1    137  |  +- 'IDENT': gg
   137    136     -1  |  +- 'SUB'
   136     -1    135  |     +- 'IDENT': x
   135     -1     -1  |     +- 'IDENT': x
   141    140     -1  +- 'UNTILL'
   140    139     -1     +- 'EQU-TO'
   139     -1    138        +- 'IDENT': xx
   138     -1     -1        +- 'IDENT': e
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:51  Col:7
   134    133    141  +- 'Assign ='
   133     -1    137  |  +- 'IDENT': gg
   137    136     -1  |  +- 'SUB'
   136     -1    135  |     +- 'IDENT': x
   135     -1     -1  |     +- 'IDENT': x
   141    140     -1  +- 'UNTILL'
   140    139     -1     +- 'EQU-TO'
   139     -1    138        +- 'IDENT': xx
   138     -1     -1        +- 'IDENT': e
---- End PUSH After First POP LHNext node LHNext ----
---- OD node LHNext ----
	 NUMB  CHILD  NEXT  Line:51  Col:7
   134    133    141  +- 'Assign ='
   133     -1    137  |  +- 'IDENT': gg
   137    136     -1  |  +- 'SUB'
   136     -1    135  |     +- 'IDENT': x
   135     -1     -1  |     +- 'IDENT': x
   141    140    142  +- 'UNTILL'
   140    139     -1  |  +- 'EQU-TO'
   139     -1    138  |     +- 'IDENT': xx
   138     -1     -1  |     +- 'IDENT': e
   142     -1     -1  +- 'OD'
---- End OD node LHNext ----
---- DO node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103    132  +- 'WHILE'
   103    102    109  |  +- '>='
   102     -1    101  |  |  +- 'IDENT': d
   101     -1     -1  |  |  +- 'IDENT': c
   109    105    110  |  +- 'DO'
   105    104     -1  |  |  +- 'Assign ='
   104     -1    108  |  |     +- 'IDENT': ff
   108    107     -1  |  |     +- 'ADD'
   107     -1    106  |  |        +- 'NUMBER'$0001
   106     -1     -1  |  |        +- 'IDENT': d
   110     -1     -1  |  +- 'OD'
   132    112    143  +- 'FOR'
   112     -1    116  |  +- 'IDENT': a
   116    115    120  |  +- 'Assign ='
   115    114     -1  |  |  +- 'ADD'
   114     -1    113  |  |     +- 'IDENT': xx
   113     -1     -1  |  |     +- 'IDENT': x
   120    119    122  |  +- 'TO'
   119    118     -1  |  |  +- 'SUB'
   118     -1    117  |  |     +- 'IDENT': c
   117     -1     -1  |  |     +- 'IDENT': c
   122    121    130  |  +- 'STEP'
   121     -1     -1  |  |  +- 'NUMBER'$0003
   130    124    131  |  +- 'DO'
   124    123     -1  |  |  +- 'Assign ='
   123     -1    129  |  |     +- 'IDENT': dd
   129    128     -1  |  |     +- 'DIV'
   128     -1    127  |  |        +- 'IDENT': e
   127    126     -1  |  |        +- 'MUL'
   126     -1    125  |  |           +- 'NUMBER'$0008
   125     -1     -1  |  |           +- 'IDENT': d
   131     -1     -1  |  +- 'OD'
   143    134     -1  +- 'DO'
   134    133    141     +- 'Assign ='
   133     -1    137     |  +- 'IDENT': gg
   137    136     -1     |  +- 'SUB'
   136     -1    135     |     +- 'IDENT': x
   135     -1     -1     |     +- 'IDENT': x
   141    140    142     +- 'UNTILL'
   140    139     -1     |  +- 'EQU-TO'
   139     -1    138     |     +- 'IDENT': xx
   138     -1     -1     |     +- 'IDENT': e
   142     -1     -1     +- 'OD'
---- End DO node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103    132  +- 'WHILE'
   103    102    109  |  +- '>='
   102     -1    101  |  |  +- 'IDENT': d
   101     -1     -1  |  |  +- 'IDENT': c
   109    105    110  |  +- 'DO'
   105    104     -1  |  |  +- 'Assign ='
   104     -1    108  |  |     +- 'IDENT': ff
   108    107     -1  |  |     +- 'ADD'
   107     -1    106  |  |        +- 'NUMBER'$0001
   106     -1     -1  |  |        +- 'IDENT': d
   110     -1     -1  |  +- 'OD'
   132    112    143  +- 'FOR'
   112     -1    116  |  +- 'IDENT': a
   116    115    120  |  +- 'Assign ='
   115    114     -1  |  |  +- 'ADD'
   114     -1    113  |  |     +- 'IDENT': xx
   113     -1     -1  |  |     +- 'IDENT': x
   120    119    122  |  +- 'TO'
   119    118     -1  |  |  +- 'SUB'
   118     -1    117  |  |     +- 'IDENT': c
   117     -1     -1  |  |     +- 'IDENT': c
   122    121    130  |  +- 'STEP'
   121     -1     -1  |  |  +- 'NUMBER'$0003
   130    124    131  |  +- 'DO'
   124    123     -1  |  |  +- 'Assign ='
   123     -1    129  |  |     +- 'IDENT': dd
   129    128     -1  |  |     +- 'DIV'
   128     -1    127  |  |        +- 'IDENT': e
   127    126     -1  |  |        +- 'MUL'
   126     -1    125  |  |           +- 'NUMBER'$0008
   125     -1     -1  |  |           +- 'IDENT': d
   131     -1     -1  |  +- 'OD'
   143    134     -1  +- 'DO'
   134    133    141     +- 'Assign ='
   133     -1    137     |  +- 'IDENT': gg
   137    136     -1     |  +- 'SUB'
   136     -1    135     |     +- 'IDENT': x
   135     -1     -1     |     +- 'IDENT': x
   141    140    142     +- 'UNTILL'
   140    139     -1     |  +- 'EQU-TO'
   139     -1    138     |     +- 'IDENT': xx
   138     -1     -1     |     +- 'IDENT': e
   142     -1     -1     +- 'OD'
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103    132  +- 'WHILE'
   103    102    109  |  +- '>='
   102     -1    101  |  |  +- 'IDENT': d
   101     -1     -1  |  |  +- 'IDENT': c
   109    105    110  |  +- 'DO'
   105    104     -1  |  |  +- 'Assign ='
   104     -1    108  |  |     +- 'IDENT': ff
   108    107     -1  |  |     +- 'ADD'
   107     -1    106  |  |        +- 'NUMBER'$0001
   106     -1     -1  |  |        +- 'IDENT': d
   110     -1     -1  |  +- 'OD'
   132    112    143  +- 'FOR'
   112     -1    116  |  +- 'IDENT': a
   116    115    120  |  +- 'Assign ='
   115    114     -1  |  |  +- 'ADD'
   114     -1    113  |  |     +- 'IDENT': xx
   113     -1     -1  |  |     +- 'IDENT': x
   120    119    122  |  +- 'TO'
   119    118     -1  |  |  +- 'SUB'
   118     -1    117  |  |     +- 'IDENT': c
   117     -1     -1  |  |     +- 'IDENT': c
   122    121    130  |  +- 'STEP'
   121     -1     -1  |  |  +- 'NUMBER'$0003
   130    124    131  |  +- 'DO'
   124    123     -1  |  |  +- 'Assign ='
   123     -1    129  |  |     +- 'IDENT': dd
   129    128     -1  |  |     +- 'DIV'
   128     -1    127  |  |        +- 'IDENT': e
   127    126     -1  |  |        +- 'MUL'
   126     -1    125  |  |           +- 'NUMBER'$0008
   125     -1     -1  |  |           +- 'IDENT': d
   131     -1     -1  |  +- 'OD'
   143    134     -1  +- 'DO'
   134    133    141     +- 'Assign ='
   133     -1    137     |  +- 'IDENT': gg
   137    136     -1     |  +- 'SUB'
   136     -1    135     |     +- 'IDENT': x
   135     -1     -1     |     +- 'IDENT': x
   141    140    142     +- 'UNTILL'
   140    139     -1     |  +- 'EQU-TO'
   139     -1    138     |     +- 'IDENT': xx
   138     -1     -1     |     +- 'IDENT': e
   142     -1     -1     +- 'OD'
---- End PUSH After First POP LHNext node LHNext ----
---- Enter PUSH Lookahead node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103    132  +- 'WHILE'
   103    102    109  |  +- '>='
   102     -1    101  |  |  +- 'IDENT': d
   101     -1     -1  |  |  +- 'IDENT': c
   109    105    110  |  +- 'DO'
   105    104     -1  |  |  +- 'Assign ='
   104     -1    108  |  |     +- 'IDENT': ff
   108    107     -1  |  |     +- 'ADD'
   107     -1    106  |  |        +- 'NUMBER'$0001
   106     -1     -1  |  |        +- 'IDENT': d
   110     -1     -1  |  +- 'OD'
   132    112    143  +- 'FOR'
   112     -1    116  |  +- 'IDENT': a
   116    115    120  |  +- 'Assign ='
   115    114     -1  |  |  +- 'ADD'
   114     -1    113  |  |     +- 'IDENT': xx
   113     -1     -1  |  |     +- 'IDENT': x
   120    119    122  |  +- 'TO'
   119    118     -1  |  |  +- 'SUB'
   118     -1    117  |  |     +- 'IDENT': c
   117     -1     -1  |  |     +- 'IDENT': c
   122    121    130  |  +- 'STEP'
   121     -1     -1  |  |  +- 'NUMBER'$0003
   130    124    131  |  +- 'DO'
   124    123     -1  |  |  +- 'Assign ='
   123     -1    129  |  |     +- 'IDENT': dd
   129    128     -1  |  |     +- 'DIV'
   128     -1    127  |  |        +- 'IDENT': e
   127    126     -1  |  |        +- 'MUL'
   126     -1    125  |  |           +- 'NUMBER'$0008
   125     -1     -1  |  |           +- 'IDENT': d
   131     -1     -1  |  +- 'OD'
   143    134    283  +- 'DO'
   134    133    141  |  +- 'Assign ='
   133     -1    137  |  |  +- 'IDENT': gg
   137    136     -1  |  |  +- 'SUB'
   136     -1    135  |  |     +- 'IDENT': x
   135     -1     -1  |  |     +- 'IDENT': x
   141    140    142  |  +- 'UNTILL'
   140    139     -1  |  |  +- 'EQU-TO'
   139     -1    138  |  |     +- 'IDENT': xx
   138     -1     -1  |  |     +- 'IDENT': e
   142     -1     -1  |  +- 'OD'
   283    145     -1  +- 'ASM'
   145    144    152     +- 'PROCESSOR'
   144     -1     -1     |  +- 'R6502'
   152    151    154     +- 'SECTION'
   151    150     -1     |  +- 'SECTION Name'
   150    147     -1     |     +- 'SECTION Attributes'
   147    146    149     |        +- 'ATRB-START'
   146     -1     -1     |        |  +- 'NUMBER'$F000
   149    148     -1     |        +- 'SIZE'
   148     -1     -1     |           +- 'NUMBER'$1000
   154    153    155     +- 'ORG'
   153     -1     -1     |  +- 'NUMBER'$4000
   155     -1    157     +- 'LABEL' - 'SomeData'
   157    156    159     +- 'DB'
   156     -1     -1     |  +- 'NUMBER'$0005
   159    158    161     +- 'DW'
   158     -1     -1     |  +- 'NUMBER'$0257
   161    160    162     +- 'DL'
   160     -1     -1     |  +- 'NUMBER'$864B2
   162     -1    164     +- 'LABEL' - 'Storage'
   164    163    165     +- 'DS'
   163     -1     -1     |  +- 'NUMBER'$0A7F
   165     -1    167     +- 'LABEL' - 'START'
   167    166    169     +- 'OPCODE' ADC ($71) INDIRECT INDEXED
   166     -1     -1     |  +- 'NUMBER'$0052
   169    168    171     +- 'OPCODE' LDA ($A5) ZERO PAGE
   168     -1     -1     |  +- 'LABEL' - 'xxx'
   171    170    172     +- 'OPCODE' LDA ($A9) IMMEDIATE
   170     -1     -1     |  +- 'NUMBER'$0055
   172     -1    173     +- 'OPCODE' PHA ($48) IMPLIED
   173     -1    174     +- 'OPCODE' TYA ($98) IMPLIED
   174     -1    175     +- 'LABEL' - 'HERE'
   175     -1    177     +- 'OPCODE' PHA ($48) IMPLIED
   177    176    179     +- 'OPCODE' JMP ($4C) ABSOLUTE
   176     -1     -1     |  +- 'NUMBER'$BAD1
   179    178    181     +- 'OPCODE' JMP ($6C) INDIRECT
   178     -1     -1     |  +- 'NUMBER'$432A
   181    180    182     +- 'OPCODE' JSR ($20) ABSOLUTE
   180     -1     -1     |  +- 'NUMBER'$F00D
   182     -1    183     +- 'OPCODE' PLA ($68) IMPLIED
   183     -1    190     +- 'OPCODE' TAY ($A8) IMPLIED
   190    184    192     +- 'Asm PROC'
   184    185     -1     |  +- 'PROC name' - 'AsmProc'
   185     -1    187     |     +- 'OPCODE' PLA ($68) IMPLIED
   187    186    188     |     +- 'OPCODE' STA ($8D) ABSOLUTE
   186     -1     -1     |     |  +- 'NUMBER'$1000
   188     -1    189     |     +- 'OPCODE' RTS ($60) IMPLIED
   189     -1     -1     |     +- 'OPCODE' RTI ($40) IMPLIED
   192    191    194     +- 'OPCODE' ADC ($61) INDEXED INDIRECT
   191     -1     -1     |  +- 'NUMBER'$0044
   194    193    197     +- 'OPCODE' SBC ($E5) ZERO PAGE
   193     -1     -1     |  +- 'NUMBER'$0012
   197    195    200     +- 'OPCODE' CMP ($D5) PAGE ZERO,X
   195    196     -1     |  +- 'NUMBER'$0013
   196     -1     -1     |     +- '.X'
   200    198    203     +- 'OPCODE' AND ($3D) ABSOLUTE,X
   198    199     -1     |  +- 'NUMBER'$0400
   199     -1     -1     |     +- '.X'
   203    201    205     +- 'OPCODE' ORA ($19) ABSOLUTE,Y
   201    202     -1     |  +- 'NUMBER'$0410
   202     -1     -1     |     +- '.Y'
   205    204    207     +- 'OPCODE' CPX ($E0) IMMEDIATE
   204     -1     -1     |  +- 'NUMBER'$0017
   207    206    209     +- 'OPCODE' CPX ($E4) ZERO PAGE
   206     -1     -1     |  +- 'NUMBER'$00B0
   209    208    211     +- 'OPCODE' CPX ($EC) ABSOLUTE
   208     -1     -1     |  +- 'NUMBER'$A8EE
   211    210    214     +- 'OPCODE' ASL ($06) ZERO PAGE
   210     -1     -1     |  +- 'NUMBER'$008C
   214    212    216     +- 'OPCODE' ASL ($16) PAGE ZERO,X
   212    213     -1     |  +- 'NUMBER'$008B
   213     -1     -1     |     +- '.X'
   216    215    219     +- 'OPCODE' ASL ($0E) ABSOLUTE
   215     -1     -1     |  +- 'NUMBER'$AACC
   219    217    220     +- 'OPCODE' ASL ($1E) ABSOLUTE,X
   217    218     -1     |  +- 'NUMBER'$CCAA
   218     -1     -1     |     +- '.X'
   220     -1    222     +- 'OPCODE' ASL ($0A) ACCUMULATOR
   222    221    224     +- 'OPCODE' LDX ($A2) IMMEDIATE
   221     -1     -1     |  +- 'NUMBER'$001F
   224    223    227     +- 'OPCODE' LDX ($A6) ZERO PAGE
   223     -1     -1     |  +- 'NUMBER'$00C1
   227    225    229     +- 'OPCODE' LDX ($B6) PAGE ZERO,Y
   225    226     -1     |  +- 'NUMBER'$00C2
   226     -1     -1     |     +- '.Y'
   229    228    232     +- 'OPCODE' LDX ($AE) ABSOLUTE
   228     -1     -1     |  +- 'NUMBER'$56AB
   232    230    234     +- 'OPCODE' LDX ($BE) ABSOLUTE,Y
   230    231     -1     |  +- 'NUMBER'$64BE
   231     -1     -1     |     +- '.Y'
   234    233    236     +- 'OPCODE' LDY ($A0) IMMEDIATE
   233     -1     -1     |  +- 'NUMBER'$001F
   236    235    239     +- 'OPCODE' LDY ($A4) ZERO PAGE
   235     -1     -1     |  +- 'NUMBER'$00C1
   239    237    241     +- 'OPCODE' LDY ($B4) PAGE ZERO,X
   237    238     -1     |  +- 'NUMBER'$00C2
   238     -1     -1     |     +- '.X'
   241    240    244     +- 'OPCODE' LDY ($AC) ABSOLUTE
   240     -1     -1     |  +- 'NUMBER'$56AB
   244    242    246     +- 'OPCODE' LDY ($BC) ABSOLUTE,X
   242    243     -1     |  +- 'NUMBER'$64BE
   243     -1     -1     |     +- '.X'
   246    245    249     +- 'OPCODE' STY ($84) ZERO PAGE
   245     -1     -1     |  +- 'NUMBER'$007C
   249    247    251     +- 'OPCODE' STY ($94) PAGE ZERO,X
   247    248     -1     |  +- 'NUMBER'$007D
   248     -1     -1     |     +- '.X'
   251    250    253     +- 'OPCODE' STY ($8C) ABSOLUTE
   250     -1     -1     |  +- 'NUMBER'$D00D
   253    252    256     +- 'OPCODE' STX ($86) ZERO PAGE
   252     -1     -1     |  +- 'NUMBER'$0062
   256    254    258     +- 'OPCODE' STX ($96) PAGE ZERO,Y
   254    255     -1     |  +- 'NUMBER'$0063
   255     -1     -1     |     +- '.Y'
   258    257    260     +- 'OPCODE' STX ($8E) ABSOLUTE
   257     -1     -1     |  +- 'NUMBER'$B00B
   260    259    263     +- 'OPCODE' INC ($E6) ZERO PAGE
   259     -1     -1     |  +- 'NUMBER'$00D0
   263    261    265     +- 'OPCODE' INC ($F6) PAGE ZERO,X
   261    262     -1     |  +- 'NUMBER'$0062
   262     -1     -1     |     +- '.X'
   265    264    268     +- 'OPCODE' INC ($EE) ABSOLUTE
   264     -1     -1     |  +- 'NUMBER'$63DA
   268    266    270     +- 'OPCODE' INC ($FE) ABSOLUTE,X
   266    267     -1     |  +- 'NUMBER'$B00B
   267     -1     -1     |     +- '.X'
   270    269    273     +- 'OPCODE' DEC ($C6) ZERO PAGE
   269     -1     -1     |  +- 'NUMBER'$00D0
   273    271    275     +- 'OPCODE' DEC ($D6) PAGE ZERO,X
   271    272     -1     |  +- 'NUMBER'$0062
   272     -1     -1     |     +- '.X'
   275    274    278     +- 'OPCODE' DEC ($CE) ABSOLUTE
   274     -1     -1     |  +- 'NUMBER'$63DA
   278    276    280     +- 'OPCODE' DEC ($DE) ABSOLUTE,X
   276    277     -1     |  +- 'NUMBER'$B00B
   277     -1     -1     |     +- '.X'
   280    279    282     +- 'OPCODE' BIT ($24) ZERO PAGE
   279     -1     -1     |  +- 'NUMBER'$00A8
   282    281     -1     +- 'OPCODE' BIT ($2C) ABSOLUTE
   281     -1     -1        +- 'NUMBER'$9AB0
---- End Enter PUSH Lookahead node LHNext ----
---- PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT  Line:21  Col:3
    44     39     62  +- 'CODE-BLOCK'
    39     -1     40  |  +- 'NUMBER'$00AA
    40     -1     41  |  +- 'NUMBER'$00BB
    41     -1     42  |  +- 'NUMBER'$00CE
    42     -1     43  |  +- 'NUMBER'$00A1
    43     -1     -1  |  +- 'NUMBER'$00C0
    62     54     76  +- 'DO'
    54     47     58  |  +- 'IF'
    47     46     52  |  |  +- 'EQU-TO'
    46     -1     45  |  |  |  +- 'IDENT': xx
    45     -1     -1  |  |  |  +- 'IDENT': c
    52     49     53  |  |  +- 'THEN'
    49     48     51  |  |  |  +- 'PUSH'
    48     -1     -1  |  |  |  |  +- '.A'
    51     50     -1  |  |  |  +- 'POP'
    50     -1     -1  |  |  |     +- '.Y'
    53     -1     -1  |  |  +- 'FI'
    58     57     60  |  +- 'UNTILL'
    57     56     -1  |  |  +- 'NEQ'
    56     -1     55  |  |     +- 'IDENT': gg
    55     -1     -1  |  |     +- 'IDENT': jj
    60     59     61  |  +- 'PUSH'
    59     -1     -1  |  |  +- '.A'
    61     -1     -1  |  +- 'OD'
    76     65     82  +- 'IF'
    65     64     68  |  +- '>'
    64     -1     63  |  |  +- 'IDENT': gg
    63     -1     -1  |  |  +- 'IDENT': xxx
    68     66     74  |  +- 'THEN'
    66     -1     67  |  |  +- 'BREAK'
    67     -1     -1  |  |  +- 'EXIT'
    74     70     75  |  +- 'ELSE'
    70     69     73  |  |  +- '=ADD'
    69     -1     71  |  |  |  +- 'IDENT': gg
    71     -1     -1  |  |  |  +- 'IDENT': e
    73     72     -1  |  |  +- 'PUSH'
    72     -1     -1  |  |     +- '.X'
    75     -1     -1  |  +- 'FI'
    82     77     91  +- 'CODE-BLOCK'
    77     -1     78  |  +- 'NUMBER'$00AA
    78     -1     79  |  +- 'NUMBER'$00BB
    79     -1     80  |  +- 'NUMBER'$00CE
    80     -1     81  |  +- 'NUMBER'$00A1
    81     -1     -1  |  +- 'NUMBER'$00C0
    91     84     93  +- 'DO'
    84     83     90  |  +- 'Assign ='
    83     -1     89  |  |  +- 'IDENT': c
    89     88     -1  |  |  +- 'SUB'
    88     87     85  |  |     +- 'MUL'
    87     -1     86  |  |     |  +- 'IDENT': xx
    86     -1     -1  |  |     |  +- 'IDENT': x
    85     -1     -1  |  |     +- 'IDENT': e
    90     -1     -1  |  +- 'OD'
    93     92    111  +- 'Assign ='
    92     -1    100  |  +- 'IDENT': d
   100     99     -1  |  +- 'SUB'
    99     -1     98  |     +- 'IDENT': xx
    98     97     -1  |     +- 'ADD'
    97     96     94  |        +- 'MUL'
    96     -1     95  |        |  +- 'IDENT': a
    95     -1     -1  |        |  +- 'IDENT': xxx
    94     -1     -1  |        +- 'IDENT': x
   111    103    132  +- 'WHILE'
   103    102    109  |  +- '>='
   102     -1    101  |  |  +- 'IDENT': d
   101     -1     -1  |  |  +- 'IDENT': c
   109    105    110  |  +- 'DO'
   105    104     -1  |  |  +- 'Assign ='
   104     -1    108  |  |     +- 'IDENT': ff
   108    107     -1  |  |     +- 'ADD'
   107     -1    106  |  |        +- 'NUMBER'$0001
   106     -1     -1  |  |        +- 'IDENT': d
   110     -1     -1  |  +- 'OD'
   132    112    143  +- 'FOR'
   112     -1    116  |  +- 'IDENT': a
   116    115    120  |  +- 'Assign ='
   115    114     -1  |  |  +- 'ADD'
   114     -1    113  |  |     +- 'IDENT': xx
   113     -1     -1  |  |     +- 'IDENT': x
   120    119    122  |  +- 'TO'
   119    118     -1  |  |  +- 'SUB'
   118     -1    117  |  |     +- 'IDENT': c
   117     -1     -1  |  |     +- 'IDENT': c
   122    121    130  |  +- 'STEP'
   121     -1     -1  |  |  +- 'NUMBER'$0003
   130    124    131  |  +- 'DO'
   124    123     -1  |  |  +- 'Assign ='
   123     -1    129  |  |     +- 'IDENT': dd
   129    128     -1  |  |     +- 'DIV'
   128     -1    127  |  |        +- 'IDENT': e
   127    126     -1  |  |        +- 'MUL'
   126     -1    125  |  |           +- 'NUMBER'$0008
   125     -1     -1  |  |           +- 'IDENT': d
   131     -1     -1  |  +- 'OD'
   143    134    283  +- 'DO'
   134    133    141  |  +- 'Assign ='
   133     -1    137  |  |  +- 'IDENT': gg
   137    136     -1  |  |  +- 'SUB'
   136     -1    135  |  |     +- 'IDENT': x
   135     -1     -1  |  |     +- 'IDENT': x
   141    140    142  |  +- 'UNTILL'
   140    139     -1  |  |  +- 'EQU-TO'
   139     -1    138  |  |     +- 'IDENT': xx
   138     -1     -1  |  |     +- 'IDENT': e
   142     -1     -1  |  +- 'OD'
   283    145    284  +- 'ASM'
   145    144    152  |  +- 'PROCESSOR'
   144     -1     -1  |  |  +- 'R6502'
   152    151    154  |  +- 'SECTION'
   151    150     -1  |  |  +- 'SECTION Name'
   150    147     -1  |  |     +- 'SECTION Attributes'
   147    146    149  |  |        +- 'ATRB-START'
   146     -1     -1  |  |        |  +- 'NUMBER'$F000
   149    148     -1  |  |        +- 'SIZE'
   148     -1     -1  |  |           +- 'NUMBER'$1000
   154    153    155  |  +- 'ORG'
   153     -1     -1  |  |  +- 'NUMBER'$4000
   155     -1    157  |  +- 'LABEL' - 'SomeData'
   157    156    159  |  +- 'DB'
   156     -1     -1  |  |  +- 'NUMBER'$0005
   159    158    161  |  +- 'DW'
   158     -1     -1  |  |  +- 'NUMBER'$0257
   161    160    162  |  +- 'DL'
   160     -1     -1  |  |  +- 'NUMBER'$864B2
   162     -1    164  |  +- 'LABEL' - 'Storage'
   164    163    165  |  +- 'DS'
   163     -1     -1  |  |  +- 'NUMBER'$0A7F
   165     -1    167  |  +- 'LABEL' - 'START'
   167    166    169  |  +- 'OPCODE' ADC ($71) INDIRECT INDEXED
   166     -1     -1  |  |  +- 'NUMBER'$0052
   169    168    171  |  +- 'OPCODE' LDA ($A5) ZERO PAGE
   168     -1     -1  |  |  +- 'LABEL' - 'xxx'
   171    170    172  |  +- 'OPCODE' LDA ($A9) IMMEDIATE
   170     -1     -1  |  |  +- 'NUMBER'$0055
   172     -1    173  |  +- 'OPCODE' PHA ($48) IMPLIED
   173     -1    174  |  +- 'OPCODE' TYA ($98) IMPLIED
   174     -1    175  |  +- 'LABEL' - 'HERE'
   175     -1    177  |  +- 'OPCODE' PHA ($48) IMPLIED
   177    176    179  |  +- 'OPCODE' JMP ($4C) ABSOLUTE
   176     -1     -1  |  |  +- 'NUMBER'$BAD1
   179    178    181  |  +- 'OPCODE' JMP ($6C) INDIRECT
   178     -1     -1  |  |  +- 'NUMBER'$432A
   181    180    182  |  +- 'OPCODE' JSR ($20) ABSOLUTE
   180     -1     -1  |  |  +- 'NUMBER'$F00D
   182     -1    183  |  +- 'OPCODE' PLA ($68) IMPLIED
   183     -1    190  |  +- 'OPCODE' TAY ($A8) IMPLIED
   190    184    192  |  +- 'Asm PROC'
   184    185     -1  |  |  +- 'PROC name' - 'AsmProc'
   185     -1    187  |  |     +- 'OPCODE' PLA ($68) IMPLIED
   187    186    188  |  |     +- 'OPCODE' STA ($8D) ABSOLUTE
   186     -1     -1  |  |     |  +- 'NUMBER'$1000
   188     -1    189  |  |     +- 'OPCODE' RTS ($60) IMPLIED
   189     -1     -1  |  |     +- 'OPCODE' RTI ($40) IMPLIED
   192    191    194  |  +- 'OPCODE' ADC ($61) INDEXED INDIRECT
   191     -1     -1  |  |  +- 'NUMBER'$0044
   194    193    197  |  +- 'OPCODE' SBC ($E5) ZERO PAGE
   193     -1     -1  |  |  +- 'NUMBER'$0012
   197    195    200  |  +- 'OPCODE' CMP ($D5) PAGE ZERO,X
   195    196     -1  |  |  +- 'NUMBER'$0013
   196     -1     -1  |  |     +- '.X'
   200    198    203  |  +- 'OPCODE' AND ($3D) ABSOLUTE,X
   198    199     -1  |  |  +- 'NUMBER'$0400
   199     -1     -1  |  |     +- '.X'
   203    201    205  |  +- 'OPCODE' ORA ($19) ABSOLUTE,Y
   201    202     -1  |  |  +- 'NUMBER'$0410
   202     -1     -1  |  |     +- '.Y'
   205    204    207  |  +- 'OPCODE' CPX ($E0) IMMEDIATE
   204     -1     -1  |  |  +- 'NUMBER'$0017
   207    206    209  |  +- 'OPCODE' CPX ($E4) ZERO PAGE
   206     -1     -1  |  |  +- 'NUMBER'$00B0
   209    208    211  |  +- 'OPCODE' CPX ($EC) ABSOLUTE
   208     -1     -1  |  |  +- 'NUMBER'$A8EE
   211    210    214  |  +- 'OPCODE' ASL ($06) ZERO PAGE
   210     -1     -1  |  |  +- 'NUMBER'$008C
   214    212    216  |  +- 'OPCODE' ASL ($16) PAGE ZERO,X
   212    213     -1  |  |  +- 'NUMBER'$008B
   213     -1     -1  |  |     +- '.X'
   216    215    219  |  +- 'OPCODE' ASL ($0E) ABSOLUTE
   215     -1     -1  |  |  +- 'NUMBER'$AACC
   219    217    220  |  +- 'OPCODE' ASL ($1E) ABSOLUTE,X
   217    218     -1  |  |  +- 'NUMBER'$CCAA
   218     -1     -1  |  |     +- '.X'
   220     -1    222  |  +- 'OPCODE' ASL ($0A) ACCUMULATOR
   222    221    224  |  +- 'OPCODE' LDX ($A2) IMMEDIATE
   221     -1     -1  |  |  +- 'NUMBER'$001F
   224    223    227  |  +- 'OPCODE' LDX ($A6) ZERO PAGE
   223     -1     -1  |  |  +- 'NUMBER'$00C1
   227    225    229  |  +- 'OPCODE' LDX ($B6) PAGE ZERO,Y
   225    226     -1  |  |  +- 'NUMBER'$00C2
   226     -1     -1  |  |     +- '.Y'
   229    228    232  |  +- 'OPCODE' LDX ($AE) ABSOLUTE
   228     -1     -1  |  |  +- 'NUMBER'$56AB
   232    230    234  |  +- 'OPCODE' LDX ($BE) ABSOLUTE,Y
   230    231     -1  |  |  +- 'NUMBER'$64BE
   231     -1     -1  |  |     +- '.Y'
   234    233    236  |  +- 'OPCODE' LDY ($A0) IMMEDIATE
   233     -1     -1  |  |  +- 'NUMBER'$001F
   236    235    239  |  +- 'OPCODE' LDY ($A4) ZERO PAGE
   235     -1     -1  |  |  +- 'NUMBER'$00C1
   239    237    241  |  +- 'OPCODE' LDY ($B4) PAGE ZERO,X
   237    238     -1  |  |  +- 'NUMBER'$00C2
   238     -1     -1  |  |     +- '.X'
   241    240    244  |  +- 'OPCODE' LDY ($AC) ABSOLUTE
   240     -1     -1  |  |  +- 'NUMBER'$56AB
   244    242    246  |  +- 'OPCODE' LDY ($BC) ABSOLUTE,X
   242    243     -1  |  |  +- 'NUMBER'$64BE
   243     -1     -1  |  |     +- '.X'
   246    245    249  |  +- 'OPCODE' STY ($84) ZERO PAGE
   245     -1     -1  |  |  +- 'NUMBER'$007C
   249    247    251  |  +- 'OPCODE' STY ($94) PAGE ZERO,X
   247    248     -1  |  |  +- 'NUMBER'$007D
   248     -1     -1  |  |     +- '.X'
   251    250    253  |  +- 'OPCODE' STY ($8C) ABSOLUTE
   250     -1     -1  |  |  +- 'NUMBER'$D00D
   253    252    256  |  +- 'OPCODE' STX ($86) ZERO PAGE
   252     -1     -1  |  |  +- 'NUMBER'$0062
   256    254    258  |  +- 'OPCODE' STX ($96) PAGE ZERO,Y
   254    255     -1  |  |  +- 'NUMBER'$0063
   255     -1     -1  |  |     +- '.Y'
   258    257    260  |  +- 'OPCODE' STX ($8E) ABSOLUTE
   257     -1     -1  |  |  +- 'NUMBER'$B00B
   260    259    263  |  +- 'OPCODE' INC ($E6) ZERO PAGE
   259     -1     -1  |  |  +- 'NUMBER'$00D0
   263    261    265  |  +- 'OPCODE' INC ($F6) PAGE ZERO,X
   261    262     -1  |  |  +- 'NUMBER'$0062
   262     -1     -1  |  |     +- '.X'
   265    264    268  |  +- 'OPCODE' INC ($EE) ABSOLUTE
   264     -1     -1  |  |  +- 'NUMBER'$63DA
   268    266    270  |  +- 'OPCODE' INC ($FE) ABSOLUTE,X
   266    267     -1  |  |  +- 'NUMBER'$B00B
   267     -1     -1  |  |     +- '.X'
   270    269    273  |  +- 'OPCODE' DEC ($C6) ZERO PAGE
   269     -1     -1  |  |  +- 'NUMBER'$00D0
   273    271    275  |  +- 'OPCODE' DEC ($D6) PAGE ZERO,X
   271    272     -1  |  |  +- 'NUMBER'$0062
   272     -1     -1  |  |     +- '.X'
   275    274    278  |  +- 'OPCODE' DEC ($CE) ABSOLUTE
   274     -1     -1  |  |  +- 'NUMBER'$63DA
   278    276    280  |  +- 'OPCODE' DEC ($DE) ABSOLUTE,X
   276    277     -1  |  |  +- 'NUMBER'$B00B
   277     -1     -1  |  |     +- '.X'
   280    279    282  |  +- 'OPCODE' BIT ($24) ZERO PAGE
   279     -1     -1  |  |  +- 'NUMBER'$00A8
   282    281     -1  |  +- 'OPCODE' BIT ($2C) ABSOLUTE
   281     -1     -1  |     +- 'NUMBER'$9AB0
   284     -1     -1  +- 'RTI'
---- End PUSH After First POP LHNext node LHNext ----
	 NUMB  CHILD  NEXT
   292      4     -1  +- 'ROOT'
     4      1      7     +- 'INT'
     1     -1      2     |  +- 'IDENT': aa
     2     -1      3     |  +- 'IDENT': bb
     3     -1     -1     |  +- 'IDENT': cc
     7      5      9     +- 'CARD'
     5     -1      6     |  +- 'IDENT': dd
     6     -1     -1     |  +- 'IDENT': ee
     9      8     15     +- 'CHAR'
     8     -1     -1     |  +- 'IDENT': ff
    15     10    291     +- 'BYTE'
    10     -1     11     |  +- 'IDENT': gg
    11     -1     12     |  +- 'IDENT': hh
    12     -1     13     |  +- 'IDENT': ii
    13     -1     14     |  +- 'IDENT': jj
    14     -1     -1     |  +- 'IDENT': kk
   291     23     -1     +- 'MODULE'
    23     22    287        +- 'DEFINE'
    22     21     -1        |  +- 'SECTION'
    21     20     -1        |     +- 'SECTION Name'
    20     17     -1        |        +- 'SECTION Attributes'
    17     16     19        |           +- 'ATRB-START'
    16     -1     -1        |           |  +- 'NUMBER'$0200
    19     18     -1        |           +- 'SIZE'
    18     -1     -1        |              +- 'NUMBER'$0400
   287     24    290        +- 'IRQ-PROC'
    24     25     -1        |  +- 'IDENT': AnInteruption
    25     -1    286        |     +- 'Param LIST'
   286     38     -1        |     +- 'Body'
    38     27    285        |        +- 'LOCAL Vars'
    27     26     31        |        |  +- 'CHAR'
    26     -1     -1        |        |  |  +- 'IDENT': a
    31     28     33        |        |  +- 'INT'
    28     -1     29        |        |  |  +- 'IDENT': x
    29     -1     30        |        |  |  +- 'IDENT': xx
    30     -1     -1        |        |  |  +- 'IDENT': xxx
    33     32     35        |        |  +- 'INT'
    32     -1     -1        |        |  |  +- 'IDENT': c
    35     34     37        |        |  +- 'CHAR'
    34     -1     -1        |        |  |  +- 'IDENT': d
    37     36     -1        |        |  +- 'CHAR'
    36     -1     -1        |        |     +- 'IDENT': e
   285     44     -1        |        +- 'STATEMENTS'
    44     39     62        |           +- 'CODE-BLOCK'
    39     -1     40        |           |  +- 'NUMBER'$00AA
    40     -1     41        |           |  +- 'NUMBER'$00BB
    41     -1     42        |           |  +- 'NUMBER'$00CE
    42     -1     43        |           |  +- 'NUMBER'$00A1
    43     -1     -1        |           |  +- 'NUMBER'$00C0
    62     54     76        |           +- 'DO'
    54     47     58        |           |  +- 'IF'
    47     46     52        |           |  |  +- 'EQU-TO'
    46     -1     45        |           |  |  |  +- 'IDENT': xx
    45     -1     -1        |           |  |  |  +- 'IDENT': c
    52     49     53        |           |  |  +- 'THEN'
    49     48     51        |           |  |  |  +- 'PUSH'
    48     -1     -1        |           |  |  |  |  +- '.A'
    51     50     -1        |           |  |  |  +- 'POP'
    50     -1     -1        |           |  |  |     +- '.Y'
    53     -1     -1        |           |  |  +- 'FI'
    58     57     60        |           |  +- 'UNTILL'
    57     56     -1        |           |  |  +- 'NEQ'
    56     -1     55        |           |  |     +- 'IDENT': gg
    55     -1     -1        |           |  |     +- 'IDENT': jj
    60     59     61        |           |  +- 'PUSH'
    59     -1     -1        |           |  |  +- '.A'
    61     -1     -1        |           |  +- 'OD'
    76     65     82        |           +- 'IF'
    65     64     68        |           |  +- '>'
    64     -1     63        |           |  |  +- 'IDENT': gg
    63     -1     -1        |           |  |  +- 'IDENT': xxx
    68     66     74        |           |  +- 'THEN'
    66     -1     67        |           |  |  +- 'BREAK'
    67     -1     -1        |           |  |  +- 'EXIT'
    74     70     75        |           |  +- 'ELSE'
    70     69     73        |           |  |  +- '=ADD'
    69     -1     71        |           |  |  |  +- 'IDENT': gg
    71     -1     -1        |           |  |  |  +- 'IDENT': e
    73     72     -1        |           |  |  +- 'PUSH'
    72     -1     -1        |           |  |     +- '.X'
    75     -1     -1        |           |  +- 'FI'
    82     77     91        |           +- 'CODE-BLOCK'
    77     -1     78        |           |  +- 'NUMBER'$00AA
    78     -1     79        |           |  +- 'NUMBER'$00BB
    79     -1     80        |           |  +- 'NUMBER'$00CE
    80     -1     81        |           |  +- 'NUMBER'$00A1
    81     -1     -1        |           |  +- 'NUMBER'$00C0
    91     84     93        |           +- 'DO'
    84     83     90        |           |  +- 'Assign ='
    83     -1     89        |           |  |  +- 'IDENT': c
    89     88     -1        |           |  |  +- 'SUB'
    88     87     85        |           |  |     +- 'MUL'
    87     -1     86        |           |  |     |  +- 'IDENT': xx
    86     -1     -1        |           |  |     |  +- 'IDENT': x
    85     -1     -1        |           |  |     +- 'IDENT': e
    90     -1     -1        |           |  +- 'OD'
    93     92    111        |           +- 'Assign ='
    92     -1    100        |           |  +- 'IDENT': d
   100     99     -1        |           |  +- 'SUB'
    99     -1     98        |           |     +- 'IDENT': xx
    98     97     -1        |           |     +- 'ADD'
    97     96     94        |           |        +- 'MUL'
    96     -1     95        |           |        |  +- 'IDENT': a
    95     -1     -1        |           |        |  +- 'IDENT': xxx
    94     -1     -1        |           |        +- 'IDENT': x
   111    103    132        |           +- 'WHILE'
   103    102    109        |           |  +- '>='
   102     -1    101        |           |  |  +- 'IDENT': d
   101     -1     -1        |           |  |  +- 'IDENT': c
   109    105    110        |           |  +- 'DO'
   105    104     -1        |           |  |  +- 'Assign ='
   104     -1    108        |           |  |     +- 'IDENT': ff
   108    107     -1        |           |  |     +- 'ADD'
   107     -1    106        |           |  |        +- 'NUMBER'$0001
   106     -1     -1        |           |  |        +- 'IDENT': d
   110     -1     -1        |           |  +- 'OD'
   132    112    143        |           +- 'FOR'
   112     -1    116        |           |  +- 'IDENT': a
   116    115    120        |           |  +- 'Assign ='
   115    114     -1        |           |  |  +- 'ADD'
   114     -1    113        |           |  |     +- 'IDENT': xx
   113     -1     -1        |           |  |     +- 'IDENT': x
   120    119    122        |           |  +- 'TO'
   119    118     -1        |           |  |  +- 'SUB'
   118     -1    117        |           |  |     +- 'IDENT': c
   117     -1     -1        |           |  |     +- 'IDENT': c
   122    121    130        |           |  +- 'STEP'
   121     -1     -1        |           |  |  +- 'NUMBER'$0003
   130    124    131        |           |  +- 'DO'
   124    123     -1        |           |  |  +- 'Assign ='
   123     -1    129        |           |  |     +- 'IDENT': dd
   129    128     -1        |           |  |     +- 'DIV'
   128     -1    127        |           |  |        +- 'IDENT': e
   127    126     -1        |           |  |        +- 'MUL'
   126     -1    125        |           |  |           +- 'NUMBER'$0008
   125     -1     -1        |           |  |           +- 'IDENT': d
   131     -1     -1        |           |  +- 'OD'
   143    134    283        |           +- 'DO'
   134    133    141        |           |  +- 'Assign ='
   133     -1    137        |           |  |  +- 'IDENT': gg
   137    136     -1        |           |  |  +- 'SUB'
   136     -1    135        |           |  |     +- 'IDENT': x
   135     -1     -1        |           |  |     +- 'IDENT': x
   141    140    142        |           |  +- 'UNTILL'
   140    139     -1        |           |  |  +- 'EQU-TO'
   139     -1    138        |           |  |     +- 'IDENT': xx
   138     -1     -1        |           |  |     +- 'IDENT': e
   142     -1     -1        |           |  +- 'OD'
   283    145    284        |           +- 'ASM'
   145    144    152        |           |  +- 'PROCESSOR'
   144     -1     -1        |           |  |  +- 'R6502'
   152    151    154        |           |  +- 'SECTION'
   151    150     -1        |           |  |  +- 'SECTION Name'
   150    147     -1        |           |  |     +- 'SECTION Attributes'
   147    146    149        |           |  |        +- 'ATRB-START'
   146     -1     -1        |           |  |        |  +- 'NUMBER'$F000
   149    148     -1        |           |  |        +- 'SIZE'
   148     -1     -1        |           |  |           +- 'NUMBER'$1000
   154    153    155        |           |  +- 'ORG'
   153     -1     -1        |           |  |  +- 'NUMBER'$4000
   155     -1    157        |           |  +- 'LABEL' - 'SomeData'
   157    156    159        |           |  +- 'DB'
   156     -1     -1        |           |  |  +- 'NUMBER'$0005
   159    158    161        |           |  +- 'DW'
   158     -1     -1        |           |  |  +- 'NUMBER'$0257
   161    160    162        |           |  +- 'DL'
   160     -1     -1        |           |  |  +- 'NUMBER'$864B2
   162     -1    164        |           |  +- 'LABEL' - 'Storage'
   164    163    165        |           |  +- 'DS'
   163     -1     -1        |           |  |  +- 'NUMBER'$0A7F
   165     -1    167        |           |  +- 'LABEL' - 'START'
   167    166    169        |           |  +- 'OPCODE' ADC ($71) INDIRECT INDEXED
   166     -1     -1        |           |  |  +- 'NUMBER'$0052
   169    168    171        |           |  +- 'OPCODE' LDA ($A5) ZERO PAGE
   168     -1     -1        |           |  |  +- 'LABEL' - 'xxx'
   171    170    172        |           |  +- 'OPCODE' LDA ($A9) IMMEDIATE
   170     -1     -1        |           |  |  +- 'NUMBER'$0055
   172     -1    173        |           |  +- 'OPCODE' PHA ($48) IMPLIED
   173     -1    174        |           |  +- 'OPCODE' TYA ($98) IMPLIED
   174     -1    175        |           |  +- 'LABEL' - 'HERE'
   175     -1    177        |           |  +- 'OPCODE' PHA ($48) IMPLIED
   177    176    179        |           |  +- 'OPCODE' JMP ($4C) ABSOLUTE
   176     -1     -1        |           |  |  +- 'NUMBER'$BAD1
   179    178    181        |           |  +- 'OPCODE' JMP ($6C) INDIRECT
   178     -1     -1        |           |  |  +- 'NUMBER'$432A
   181    180    182        |           |  +- 'OPCODE' JSR ($20) ABSOLUTE
   180     -1     -1        |           |  |  +- 'NUMBER'$F00D
   182     -1    183        |           |  +- 'OPCODE' PLA ($68) IMPLIED
   183     -1    190        |           |  +- 'OPCODE' TAY ($A8) IMPLIED
   190    184    192        |           |  +- 'Asm PROC'
   184    185     -1        |           |  |  +- 'PROC name' - 'AsmProc'
   185     -1    187        |           |  |     +- 'OPCODE' PLA ($68) IMPLIED
   187    186    188        |           |  |     +- 'OPCODE' STA ($8D) ABSOLUTE
   186     -1     -1        |           |  |     |  +- 'NUMBER'$1000
   188     -1    189        |           |  |     +- 'OPCODE' RTS ($60) IMPLIED
   189     -1     -1        |           |  |     +- 'OPCODE' RTI ($40) IMPLIED
   192    191    194        |           |  +- 'OPCODE' ADC ($61) INDEXED INDIRECT
   191     -1     -1        |           |  |  +- 'NUMBER'$0044
   194    193    197        |           |  +- 'OPCODE' SBC ($E5) ZERO PAGE
   193     -1     -1        |           |  |  +- 'NUMBER'$0012
   197    195    200        |           |  +- 'OPCODE' CMP ($D5) PAGE ZERO,X
   195    196     -1        |           |  |  +- 'NUMBER'$0013
   196     -1     -1        |           |  |     +- '.X'
   200    198    203        |           |  +- 'OPCODE' AND ($3D) ABSOLUTE,X
   198    199     -1        |           |  |  +- 'NUMBER'$0400
   199     -1     -1        |           |  |     +- '.X'
   203    201    205        |           |  +- 'OPCODE' ORA ($19) ABSOLUTE,Y
   201    202     -1        |           |  |  +- 'NUMBER'$0410
   202     -1     -1        |           |  |     +- '.Y'
   205    204    207        |           |  +- 'OPCODE' CPX ($E0) IMMEDIATE
   204     -1     -1        |           |  |  +- 'NUMBER'$0017
   207    206    209        |           |  +- 'OPCODE' CPX ($E4) ZERO PAGE
   206     -1     -1        |           |  |  +- 'NUMBER'$00B0
   209    208    211        |           |  +- 'OPCODE' CPX ($EC) ABSOLUTE
   208     -1     -1        |           |  |  +- 'NUMBER'$A8EE
   211    210    214        |           |  +- 'OPCODE' ASL ($06) ZERO PAGE
   210     -1     -1        |           |  |  +- 'NUMBER'$008C
   214    212    216        |           |  +- 'OPCODE' ASL ($16) PAGE ZERO,X
   212    213     -1        |           |  |  +- 'NUMBER'$008B
   213     -1     -1        |           |  |     +- '.X'
   216    215    219        |           |  +- 'OPCODE' ASL ($0E) ABSOLUTE
   215     -1     -1        |           |  |  +- 'NUMBER'$AACC
   219    217    220        |           |  +- 'OPCODE' ASL ($1E) ABSOLUTE,X
   217    218     -1        |           |  |  +- 'NUMBER'$CCAA
   218     -1     -1        |           |  |     +- '.X'
   220     -1    222        |           |  +- 'OPCODE' ASL ($0A) ACCUMULATOR
   222    221    224        |           |  +- 'OPCODE' LDX ($A2) IMMEDIATE
   221     -1     -1        |           |  |  +- 'NUMBER'$001F
   224    223    227        |           |  +- 'OPCODE' LDX ($A6) ZERO PAGE
   223     -1     -1        |           |  |  +- 'NUMBER'$00C1
   227    225    229        |           |  +- 'OPCODE' LDX ($B6) PAGE ZERO,Y
   225    226     -1        |           |  |  +- 'NUMBER'$00C2
   226     -1     -1        |           |  |     +- '.Y'
   229    228    232        |           |  +- 'OPCODE' LDX ($AE) ABSOLUTE
   228     -1     -1        |           |  |  +- 'NUMBER'$56AB
   232    230    234        |           |  +- 'OPCODE' LDX ($BE) ABSOLUTE,Y
   230    231     -1        |           |  |  +- 'NUMBER'$64BE
   231     -1     -1        |           |  |     +- '.Y'
   234    233    236        |           |  +- 'OPCODE' LDY ($A0) IMMEDIATE
   233     -1     -1        |           |  |  +- 'NUMBER'$001F
   236    235    239        |           |  +- 'OPCODE' LDY ($A4) ZERO PAGE
   235     -1     -1        |           |  |  +- 'NUMBER'$00C1
   239    237    241        |           |  +- 'OPCODE' LDY ($B4) PAGE ZERO,X
   237    238     -1        |           |  |  +- 'NUMBER'$00C2
   238     -1     -1        |           |  |     +- '.X'
   241    240    244        |           |  +- 'OPCODE' LDY ($AC) ABSOLUTE
   240     -1     -1        |           |  |  +- 'NUMBER'$56AB
   244    242    246        |           |  +- 'OPCODE' LDY ($BC) ABSOLUTE,X
   242    243     -1        |           |  |  +- 'NUMBER'$64BE
   243     -1     -1        |           |  |     +- '.X'
   246    245    249        |           |  +- 'OPCODE' STY ($84) ZERO PAGE
   245     -1     -1        |           |  |  +- 'NUMBER'$007C
   249    247    251        |           |  +- 'OPCODE' STY ($94) PAGE ZERO,X
   247    248     -1        |           |  |  +- 'NUMBER'$007D
   248     -1     -1        |           |  |     +- '.X'
   251    250    253        |           |  +- 'OPCODE' STY ($8C) ABSOLUTE
   250     -1     -1        |           |  |  +- 'NUMBER'$D00D
   253    252    256        |           |  +- 'OPCODE' STX ($86) ZERO PAGE
   252     -1     -1        |           |  |  +- 'NUMBER'$0062
   256    254    258        |           |  +- 'OPCODE' STX ($96) PAGE ZERO,Y
   254    255     -1        |           |  |  +- 'NUMBER'$0063
   255     -1     -1        |           |  |     +- '.Y'
   258    257    260        |           |  +- 'OPCODE' STX ($8E) ABSOLUTE
   257     -1     -1        |           |  |  +- 'NUMBER'$B00B
   260    259    263        |           |  +- 'OPCODE' INC ($E6) ZERO PAGE
   259     -1     -1        |           |  |  +- 'NUMBER'$00D0
   263    261    265        |           |  +- 'OPCODE' INC ($F6) PAGE ZERO,X
   261    262     -1        |           |  |  +- 'NUMBER'$0062
   262     -1     -1        |           |  |     +- '.X'
   265    264    268        |           |  +- 'OPCODE' INC ($EE) ABSOLUTE
   264     -1     -1        |           |  |  +- 'NUMBER'$63DA
   268    266    270        |           |  +- 'OPCODE' INC ($FE) ABSOLUTE,X
   266    267     -1        |           |  |  +- 'NUMBER'$B00B
   267     -1     -1        |           |  |     +- '.X'
   270    269    273        |           |  +- 'OPCODE' DEC ($C6) ZERO PAGE
   269     -1     -1        |           |  |  +- 'NUMBER'$00D0
   273    271    275        |           |  +- 'OPCODE' DEC ($D6) PAGE ZERO,X
   271    272     -1        |           |  |  +- 'NUMBER'$0062
   272     -1     -1        |           |  |     +- '.X'
   275    274    278        |           |  +- 'OPCODE' DEC ($CE) ABSOLUTE
   274     -1     -1        |           |  |  +- 'NUMBER'$63DA
   278    276    280        |           |  +- 'OPCODE' DEC ($DE) ABSOLUTE,X
   276    277     -1        |           |  |  +- 'NUMBER'$B00B
   277     -1     -1        |           |  |     +- '.X'
   280    279    282        |           |  +- 'OPCODE' BIT ($24) ZERO PAGE
   279     -1     -1        |           |  |  +- 'NUMBER'$00A8
   282    281     -1        |           |  +- 'OPCODE' BIT ($2C) ABSOLUTE
   281     -1     -1        |           |     +- 'NUMBER'$9AB0
   284     -1     -1        |           +- 'RTI'
   290    288     -1        +- 'INT'
   288     -1    289           +- 'IDENT': qr
   289     -1     -1           +- 'IDENT': st
------------ Symbol Table --------------
ee: GLOBAL:CARD::Address=00000000  Value=0000

e: LOCAL:CHAR::Address=00000000  Value=0000

START: :Address=00000000  Value=0000

gg: GLOBAL:BYTE::Address=00000000  Value=0000

x: LOCAL:INT::Address=00000000  Value=0000

ii: GLOBAL:BYTE::Address=00000000  Value=0000

AnInteruption: INTERRUPT::Address=00000000  Value=0000

bb: GLOBAL:INT::Address=00000000  Value=0000

Storage: :Address=00000000  Value=0000

kk: GLOBAL:BYTE::Address=00000000  Value=0000

HERE: :Address=00000000  Value=0000

dd: GLOBAL:CARD::Address=00000000  Value=0000

xxx: LOCAL:INT::Address=00000000  Value=0000

ff: GLOBAL:CHAR::Address=00000000  Value=0000

hh: GLOBAL:BYTE::Address=00000000  Value=0000

xx: LOCAL:INT::Address=00000000  Value=0000

aa: GLOBAL:INT::Address=00000000  Value=0000

qr: GLOBAL:INT::Address=00000000  Value=0000

jj: GLOBAL:BYTE::Address=00000000  Value=0000

SomeData: :Address=00000000  Value=0000

cc: GLOBAL:INT::Address=00000000  Value=0000

st: GLOBAL:INT::Address=00000000  Value=0000

a: LOCAL:CHAR::Address=00000000  Value=0000

c: LOCAL:INT::Address=00000000  Value=0000

d: LOCAL:CHAR::Address=00000000  Value=0000

Lines Compiled:126
