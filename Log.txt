File:test1.act has 2086 Bytes
Parser Created
Code Loc Cntr:8000
Code Loc Cntr:8001
Code Loc Cntr:8002
Code Loc Cntr:8003
Code Loc Cntr:8004
Code Loc Cntr:8005
Code Loc Cntr:8006
Code Loc Cntr:8007
Code Loc Cntr:8008
Code Loc Cntr:8009
Code Loc Cntr:800a
Code Loc Cntr:800b
Code Loc Cntr:800c
Code Loc Cntr:800d
Code Loc Cntr:800e
Code Loc Cntr:800f
Code Loc Cntr:8010
Code Loc Cntr:8011
Code Loc Cntr:8012
Code Loc Cntr:8013
Code Loc Cntr:8014
Code Loc Cntr:8015
Code Loc Cntr:8016
Code Loc Cntr:8017
Code Loc Cntr:8018
Code Loc Cntr:8019
Code Loc Cntr:801a
Code Loc Cntr:801b
Code Loc Cntr:801c
Code Loc Cntr:801d
Code Loc Cntr:801e
Code Loc Cntr:801f
Code Loc Cntr:8020
Code Loc Cntr:8021
Code Loc Cntr:8022
Code Loc Cntr:8023
Code Loc Cntr:8024
Code Loc Cntr:8025
Code Loc Cntr:8026
Code Loc Cntr:8027
Code Loc Cntr:8028
Code Loc Cntr:8029
Code Loc Cntr:802a
Code Loc Cntr:802b
Code Loc Cntr:802c
Code Loc Cntr:802d
Code Loc Cntr:802e
Code Loc Cntr:802f
Code Loc Cntr:8030
Code Loc Cntr:8031
Code Loc Cntr:8033
Code Loc Cntr:8034
Code Loc Cntr:8035
Code Loc Cntr:8036
Code Loc Cntr:8037
Code Loc Cntr:8038
Code Loc Cntr:803a
Code Loc Cntr:803b
Code Loc Cntr:803d
Code Loc Cntr:803e
Code Loc Cntr:8040
Code Loc Cntr:8041
Code Loc Cntr:8043
Code Loc Cntr:8044
Code Loc Cntr:8046
Code Loc Cntr:8047
Code Loc Cntr:8048
Code Loc Cntr:8049
Code Loc Cntr:804a
Code Loc Cntr:804b
Code Loc Cntr:804d
Code Loc Cntr:804e
Code Loc Cntr:8050
Code Loc Cntr:8051
Code Loc Cntr:8052
Code Loc Cntr:8053
Code Loc Cntr:8054
Code Loc Cntr:8055
Code Loc Cntr:8057
Code Loc Cntr:8058
Code Loc Cntr:805a
Code Loc Cntr:805b
Code Loc Cntr:805c
Code Loc Cntr:805d
Code Loc Cntr:805e
Code Loc Cntr:805f
Code Loc Cntr:8061
Code Loc Cntr:8062
Code Loc Cntr:8063
Code Loc Cntr:8064
Code Loc Cntr:8065
Code Loc Cntr:8066
Code Loc Cntr:8068
Code Loc Cntr:8069
Code Loc Cntr:806a
Code Loc Cntr:806b
Code Loc Cntr:806d
Code Loc Cntr:806e
Code Loc Cntr:806f
Code Loc Cntr:8070
Code Loc Cntr:8071
Code Loc Cntr:8072
Code Loc Cntr:8074
Code Loc Cntr:8075
Code Loc Cntr:8077
Code Loc Cntr:8078
Code Loc Cntr:8079
Code Loc Cntr:807a
Code Loc Cntr:807b
Code Loc Cntr:807c
Code Loc Cntr:807d
Code Loc Cntr:807e
Code Loc Cntr:807f
Code Loc Cntr:8080
Code Loc Cntr:8081
Code Loc Cntr:8082
Code Loc Cntr:8083
Code Loc Cntr:8084
Code Loc Cntr:8085
Code Loc Cntr:8086
Code Loc Cntr:8087
Code Loc Cntr:8088
Code Loc Cntr:8089
Code Loc Cntr:808a
Code Loc Cntr:808b
Code Loc Cntr:808c
Code Loc Cntr:808d
Code Loc Cntr:808e
Code Loc Cntr:808f
Code Loc Cntr:8090
Code Loc Cntr:8091
Code Loc Cntr:8092
Code Loc Cntr:8093
Code Loc Cntr:8094
Code Loc Cntr:8095
Code Loc Cntr:8096
Code Loc Cntr:8097
Code Loc Cntr:8098
Code Loc Cntr:8099
Code Loc Cntr:809a
Code Loc Cntr:809b
Code Loc Cntr:809c
Code Loc Cntr:809d
Code Loc Cntr:809f
Code Loc Cntr:80a0
Code Loc Cntr:80a2
Code Loc Cntr:80a3
Code Loc Cntr:80a5
Code Loc Cntr:80a6
Code Loc Cntr:80a7
Code Loc Cntr:80a8
Code Loc Cntr:80a9
Code Loc Cntr:80aa
Code Loc Cntr:80ab
Code Loc Cntr:80ac
Code Loc Cntr:80ad
Code Loc Cntr:80ae
Code Loc Cntr:80af
Code Loc Cntr:80b0
Code Loc Cntr:80b2
Code Loc Cntr:80b3
Code Loc Cntr:80b5
Code Loc Cntr:80b6
Code Loc Cntr:80b7
Code Loc Cntr:80b8
Code Loc Cntr:80b9
Code Loc Cntr:80ba
Code Loc Cntr:80bb
Code Loc Cntr:80bc
Code Loc Cntr:80be
Code Loc Cntr:80bf
	 NUMB  CHILD  NEXT
     2      3     -1  +- 'ROOT'
     3      4    280     +- 'MODULE'
     4      5      9     |  +- 'INT'
     5     -1      6     |  |  +- 'IDENT': Avar
     6     -1      7     |  |  +- 'IDENT': x
     7     -1      8     |  |  +- 'IDENT': y
     8     -1     -1     |  |  +- 'IDENT': z
     9     10     11     |  +- 'CARD'
    10     -1     -1     |  |  +- 'IDENT': Cvar
    11     12     24     |  +- 'CHAR'
    12     -1     13     |  |  +- 'IDENT': Stuff
    13     -1     -1     |  |  +- 'IDENT': Yep
    24     14     25     |  +- 'TYPE'
    14     22     -1     |  |  +- 'TYPE Name': Junk
    22     18     23     |  |     +- 'FIELDS'
    18     15     21     |  |     |  +- 'CHAR'
    15     -1     16     |  |     |  |  +- 'IDENT': q
    16     -1     17     |  |     |  |  +- 'IDENT': e
    17     -1     -1     |  |     |  |  +- 'IDENT': d
    21     19     -1     |  |     |  +- 'INT'
    19     20     -1     |  |     |     +- 'POINTER'
    20     -1     -1     |  |     |        +- 'IDENT': pX
    23     -1     -1     |  |     +- 'TYPE Fields End'
    25     26     -1     |  +- 'IRQ-PROC'
    26     -1     29     |     +- 'IDENT': Hey
    29     28     -1     |     +- 'Body'
    28     42     52     |        +- 'LOCAL Vars'
    42     38     45     |        |  +- 'INT'
    38     -1     39     |        |  |  +- 'POINTER'
    39     -1     40     |        |  |  +- 'ARRAY'
    40     41     -1     |        |  |  +- 'POINTER'
    41     -1     -1     |        |  |     +- 'IDENT': cc
    45     43     49     |        |  +- 'CHAR'
    43     -1     44     |        |  |  +- 'IDENT': la
    44     -1     -1     |        |  |  +- 'IDENT': lb
    49     46     51     |        |  +- 'CARD'
    46     -1     47     |        |  |  +- 'IDENT': lc
    47     -1     48     |        |  |  +- 'IDENT': ld
    48     -1     -1     |        |  |  +- 'IDENT': le
    51     50     37     |        |  +- 'BYTE'
    50     -1     -1     |        |  |  +- 'IDENT': lf
    37     30     -1     |        |  +- 'TYPE'
    30     35     -1     |        |     +- 'TYPE Name': Crud
    35     32     36     |        |        +- 'FIELDS'
    32     31     34     |        |        |  +- 'INT'
    31     -1     -1     |        |        |  |  +- 'IDENT': CrudOne
    34     33     -1     |        |        |  +- 'CHAR'
    33     -1     -1     |        |        |     +- 'IDENT': CrudTwo
    36     -1     -1     |        |        +- 'TYPE Fields End'
    52     53     -1     |        +- 'STATEMENTS'
    53     54    161     |           +- 'ASM'
    54     -1     55     |           |  +- 'SECTION' Code Start:$8000 SIZE:$1000 MODE:MODE_READ_ONLY PAGE0:FALSE
    55     -1     56     |           |  +- 'SECTION' Page2 Start:$0200 SIZE:$0100 MODE:MODE_READ_WRITE PAGE0:FALSE
    56     -1     57     |           |  +- 'SECTION' PageZero Start:$0000 SIZE:$0100 MODE:MODE_READ_WRITE PAGE0:TRUE
    57     59     61     |           |  +- 'LABEL' 'First'
    59     58     -1     |           |  |  +- 'DB'
    58     -1     -1     |           |  |     +- 'CONSTANT'     0  $0000
    61     60     62     |           |  +- 'SET'
    60     -1     -1     |           |  |  +- 'SECTION' Page2 Start:$0200 SIZE:$0100 MODE:MODE_READ_WRITE PAGE0:FALSE
    62     64     65     |           |  +- 'LABEL' 'Second'
    64     63     -1     |           |  |  +- 'DB'
    63     -1     -1     |           |  |     +- 'CONSTANT'     1  $0001
    65     67     68     |           |  +- 'LABEL' 'ThirdW'
    67     66     -1     |           |  |  +- 'DW'
    66     -1     -1     |           |  |     +- 'CONSTANT'    77  $004D
    68     70     72     |           |  +- 'LABEL' 'ForthL'
    70     69     -1     |           |  |  +- 'DL'
    69     -1     -1     |           |  |     +- 'CONSTANT' 305462970  $1234FEBA
    72     71     73     |           |  +- 'SET'
    71     -1     -1     |           |  |  +- 'SECTION' Code Start:$8000 SIZE:$1000 MODE:MODE_READ_ONLY PAGE0:FALSE
    73     75     76     |           |  +- 'LABEL' 'Astring'
    75     -1     -1     |           |  |  +- 'DAS' $19:This is an ACTION! string
    76     78     79     |           |  +- 'LABEL' 'CString'
    78     77     -1     |           |  |  +- 'DCS' This is a C String
    77     -1     -1     |           |  |     +- 'STRING'
    79     -1     80     |           |  +- 'OPCODE' STY ($84) ZERO PAGE First
    80     -1     81     |           |  +- 'OPCODE' STY ($94) PAGE ZERO,X First,.X
    81     -1     82     |           |  +- 'OPCODE' STY ($8C) ABSOLUTE Second
    82     -1     83     |           |  +- 'OPCODE' STX ($86) ZERO PAGE First
    83     -1     84     |           |  +- 'OPCODE' STX ($96) PAGE ZERO,Y First,.Y
    84     -1     85     |           |  +- 'OPCODE' STX ($8E) ABSOLUTE Second
    85     -1     86     |           |  +- 'OPCODE' JSR ($20) Value Type:SYMBOL
    86     -1     87     |           |  +- 'OPCODE' JSR ($20) ABSOLUTE Second
    87     -1     88     |           |  +- 'OPCODE' JMP ($4C) Value Type:SYMBOL
    88     -1     89     |           |  +- 'OPCODE' JMP ($4C) ABSOLUTE Second
    89     -1     90     |           |  +- 'OPCODE' JMP ($6C) INDIRECT(First)
    90     -1     91     |           |  +- 'OPCODE' JMP ($6C) INDIRECT(Second)
    91     -1     92     |           |  +- 'OPCODE' DEC ($C6) ZERO PAGE First
    92     -1     93     |           |  +- 'OPCODE' DEC ($D6) PAGE ZERO,X First,.X
    93     -1     94     |           |  +- 'OPCODE' DEC ($CE) ABSOLUTE Second
    94     -1     95     |           |  +- 'OPCODE' DEC ($DE) ABSOLUTE,X Second,X
    95     -1     96     |           |  +- 'OPCODE' INC ($E6) ZERO PAGE First
    96     -1     97     |           |  +- 'OPCODE' INC ($F6) PAGE ZERO,X First,.X
    97     -1     98     |           |  +- 'OPCODE' INC ($EE) ABSOLUTE Second
    98     -1     99     |           |  +- 'OPCODE' INC ($FE) ABSOLUTE,X Second,X
    99     -1    100     |           |  +- 'OPCODE' CPY ($C0) IMMEDIATE #'J'  #$4A
   100     -1    101     |           |  +- 'OPCODE' CPY ($C4) ZERO PAGE First
   101     -1    102     |           |  +- 'OPCODE' CPY ($CC) ABSOLUTE Second
   102     -1    103     |           |  +- 'OPCODE' CPX ($E0) IMMEDIATE #'k'  #$6B
   103     -1    104     |           |  +- 'OPCODE' CPX ($E4) ZERO PAGE First
   104     -1    105     |           |  +- 'OPCODE' CPX ($EC) ABSOLUTE Second
   105     -1    106     |           |  +- 'OPCODE' BIT ($24) ZERO PAGE First
   106     -1    107     |           |  +- 'OPCODE' BIT ($2C) ABSOLUTE Second
   107     -1    108     |           |  +- 'OPCODE' ASL ($0A) ACCUMULATOR .A
   108     -1    109     |           |  +- 'OPCODE' LSR ($4A) ACCUMULATOR .A
   109     -1    110     |           |  +- 'OPCODE' ROR ($6A) ACCUMULATOR .A
   110     -1    111     |           |  +- 'OPCODE' ROL ($2A) ACCUMULATOR .A
   111     -1    112     |           |  +- 'OPCODE' ASL ($06) ZERO PAGE First
   112     -1    113     |           |  +- 'OPCODE' ASL ($16) PAGE ZERO,X First,.X
   113     -1    114     |           |  +- 'OPCODE' ASL ($0E) ABSOLUTE Second
   114     -1    115     |           |  +- 'OPCODE' ASL ($1E) ABSOLUTE,X Second,X
   115     -1    116     |           |  +- 'OPCODE' BRK ($00) IMPLIED
   116     -1    117     |           |  +- 'OPCODE' CLC ($18) IMPLIED
   117     -1    118     |           |  +- 'OPCODE' CLD ($D8) IMPLIED
   118     -1    119     |           |  +- 'OPCODE' CLI ($58) IMPLIED
   119     -1    120     |           |  +- 'OPCODE' CLV ($B8) IMPLIED
   120     -1    121     |           |  +- 'OPCODE' DEX ($CA) IMPLIED
   121     -1    122     |           |  +- 'OPCODE' DEY ($88) IMPLIED
   122     -1    123     |           |  +- 'OPCODE' INX ($E8) IMPLIED
   123     -1    124     |           |  +- 'OPCODE' INY ($C8) IMPLIED
   124     -1    125     |           |  +- 'OPCODE' NOP ($EA) IMPLIED
   125     -1    126     |           |  +- 'OPCODE' PHA ($48) IMPLIED
   126     -1    127     |           |  +- 'OPCODE' PLA ($68) IMPLIED
   127     -1    128     |           |  +- 'OPCODE' PHP ($08) IMPLIED
   128     -1    129     |           |  +- 'OPCODE' PLP ($28) IMPLIED
   129     -1    130     |           |  +- 'OPCODE' RTI ($40) IMPLIED
   130     -1    131     |           |  +- 'OPCODE' RTS ($60) IMPLIED
   131     -1    132     |           |  +- 'OPCODE' SEC ($38) IMPLIED
   132     -1    133     |           |  +- 'OPCODE' SED ($F8) IMPLIED
   133     -1    134     |           |  +- 'OPCODE' SEI ($78) IMPLIED
   134     -1    135     |           |  +- 'OPCODE' TAX ($AA) IMPLIED
   135     -1    136     |           |  +- 'OPCODE' TAY ($A8) IMPLIED
   136     -1    137     |           |  +- 'OPCODE' TXA ($8A) IMPLIED
   137     -1    138     |           |  +- 'OPCODE' TYA ($98) IMPLIED
   138     -1    139     |           |  +- 'OPCODE' TXS ($9A) IMPLIED
   139     -1    140     |           |  +- 'OPCODE' TSX ($BA) IMPLIED
   140     -1    141     |           |  +- 'OPCODE' LDA ($A9) IMMEDIATE #'J'  #$4A
   141     -1    142     |           |  +- 'OPCODE' LDA ($B1) INDIRECT INDEXED(First),.Y
   142     -1    143     |           |  +- 'OPCODE' LDA ($A9) IMMEDIATE #$CD
   143     -1    144     |           |  +- 'OPCODE' LDA ($A9) IMMEDIATE #$AB
   144     -1    145     |           |  +- 'OPCODE' LDA ($A5) ZERO PAGE First
   145     -1    146     |           |  +- 'OPCODE' LDA ($B5) PAGE ZERO,X First,.X
   146     -1    147     |           |  +- 'OPCODE' LDA ($AD) ABSOLUTE Second
   147     -1    148     |           |  +- 'OPCODE' LDA ($BD) ABSOLUTE,X Second,X
   148     -1    149     |           |  +- 'OPCODE' LDA ($B9) ABSOLUTE,Y Second,Y
   149     -1    150     |           |  +- 'OPCODE' LDA ($A1) INDEXED INDIRECT(First,.X)
   150     -1    151     |           |  +- 'OPCODE' LDA ($A5) ZERO PAGE First + 2
   151     -1    152     |           |  +- 'OPCODE' LDX ($A2) IMMEDIATE #'E'  #$45
   152     -1    153     |           |  +- 'OPCODE' LDX ($A6) ZERO PAGE First
   153     -1    154     |           |  +- 'OPCODE' LDX ($B6) PAGE ZERO,Y First,.Y
   154     -1    155     |           |  +- 'OPCODE' LDX ($AE) ABSOLUTE Second
   155     -1    156     |           |  +- 'OPCODE' LDX ($BE) ABSOLUTE,Y Second,Y
   156     -1    157     |           |  +- 'OPCODE' LDY ($A0) IMMEDIATE #'a'  #$61
   157     -1    158     |           |  +- 'OPCODE' LDY ($A4) ZERO PAGE First
   158     -1    159     |           |  +- 'OPCODE' LDY ($B4) PAGE ZERO,X First,.X
   159     -1    160     |           |  +- 'OPCODE' LDY ($AC) ABSOLUTE Second
   160     -1     -1     |           |  +- 'OPCODE' LDY ($BC) ABSOLUTE,X Second,X
   161    163    198     |           +- 'IF'
   163    164    172     |           |  +- 'EQU-TO'
   164     -1    162     |           |  |  +- 'IDENT': lb
   162     -1    171     |           |  |  +- 'IDENT': la
   171    165     -1     |           |  |  +- 'THEN'
   165    167     -1     |           |  |     +- 'STATEMENTS'
   167    169     -1     |           |  |        +- '=ADD'
   169    170    166     |           |  |           +- 'SUB'
   170     -1    168     |           |  |           |  +- 'IDENT': le
   168     -1     -1     |           |  |           |  +- 'IDENT': lb
   166     -1     -1     |           |  |           +- 'IDENT': la
   172    174    183     |           |  +- 'ELSEIF'
   174    175     -1     |           |  |  +- '<'
   175     -1    173     |           |  |     +- 'IDENT': lf
   173     -1    182     |           |  |     +- 'IDENT': ld
   182    176     -1     |           |  |     +- 'THEN'
   176    178     -1     |           |  |        +- 'STATEMENTS'
   178    180     -1     |           |  |           +- 'Assign ='
   180    181    177     |           |  |              +- 'MUL'
   181     -1    179     |           |  |              |  +- 'IDENT': le
   179     -1     -1     |           |  |              |  +- 'IDENT': lb
   177     -1     -1     |           |  |              +- 'IDENT': la
   183    185    196     |           |  +- 'ELSEIF'
   185    186     -1     |           |  |  +- '>'
   186     -1    184     |           |  |     +- 'IDENT': lf
   184     -1    193     |           |  |     +- 'IDENT': ld
   193    187     -1     |           |  |     +- 'THEN'
   187    189     -1     |           |  |        +- 'STATEMENTS'
   189    191     -1     |           |  |           +- 'Assign ='
   191    192    188     |           |  |              +- 'DIV'
   192     -1    190     |           |  |              |  +- 'IDENT': le
   190     -1     -1     |           |  |              |  +- 'IDENT': lb
   188     -1     -1     |           |  |              +- 'IDENT': la
   196    194    197     |           |  +- 'ELSE'
   194    195     -1     |           |  |  +- 'STATEMENTS'
   195     -1     -1     |           |  |     +- 'EXIT'
   197     -1     -1     |           |  +- 'FI'
   198    199    213     |           +- 'FOR'
   199    200    201     |           |  +- 'IDENT': lf
   200     -1     -1     |           |  |  +- 'NUMBER'$0000
   201    202    204     |           |  +- 'TO'
   202     -1     -1     |           |  |  +- 'NUMBER'$000E
   204    203    205     |           |  +- 'STEP'
   203     -1     -1     |           |  |  +- 'NUMBER'$0002
   205    207     -1     |           |  +- 'DO'
   207    209    206     |           |     +- 'STATEMENTS'
   209    211     -1     |           |     |  +- 'Assign ='
   211    212    208     |           |     |     +- 'RSH'
   212     -1    210     |           |     |     |  +- 'IDENT': ld
   210     -1     -1     |           |     |     |  +- 'IDENT': lf
   208     -1     -1     |           |     |     +- 'IDENT': la
   206     -1     -1     |           |     +- 'OD'
   213    215    225     |           +- 'WHILE'
   215    216    223     |           |  +- '<'
   216     -1    214     |           |  |  +- 'IDENT': ld
   214     -1     -1     |           |  |  +- 'IDENT': lc
   223    217     -1     |           |  +- 'DO'
   217    219    224     |           |     +- 'STATEMENTS'
   219    221     -1     |           |     |  +- 'Assign ='
   221    222    218     |           |     |     +- 'LSH'
   222     -1    220     |           |     |     |  +- 'IDENT': ld
   220     -1     -1     |           |     |     |  +- 'IDENT': lf
   218     -1     -1     |           |     |     +- 'IDENT': la
   224     -1     -1     |           |     +- 'OD'
   225    226    236     |           +- 'DO'
   226    228    235     |           |  +- 'STATEMENTS'
   228    232    234     |           |  |  +- 'Assign ='
   232    233    227     |           |  |  |  +- 'SUB'
   233     -1    230     |           |  |  |  |  +- 'IDENT': lf
   230    231     -1     |           |  |  |  |  +- 'MUL'
   231     -1    229     |           |  |  |  |     +- 'IDENT': lc
   229     -1     -1     |           |  |  |  |     +- 'IDENT': lb
   227     -1     -1     |           |  |  |  +- 'IDENT': la
   234     -1     -1     |           |  |  +- 'EXIT'
   235     -1     -1     |           |  +- 'OD'
   236     -1    237     |           +- 'BREAK'
   237     -1    238     |           +- 'RTI'
   238     -1    239     |           +- 'EXIT'
   239     -1    240     |           +- 'RETURN'
   240    242    245     |           +- 'RETURN'
   242    243     -1     |           |  +- 'SUB'
   243     -1    241     |           |     +- 'IDENT': lb
   241     -1     -1     |           |     +- 'IDENT': la
   245    247    250     |           +- 'Assign ='
   247    248    244     |           |  +- 'ADD'
   248     -1    246     |           |  |  +- 'IDENT': y
   246     -1     -1     |           |  |  +- 'IDENT': x
   244     -1     -1     |           |  +- 'IDENT': Avar
   250    252    255     |           +- '=SUB'
   252    253    249     |           |  +- 'ADD'
   253     -1    251     |           |  |  +- 'IDENT': y
   251     -1     -1     |           |  |  +- 'IDENT': x
   249     -1     -1     |           |  +- 'IDENT': Avar
   255    257    260     |           +- '=AND'
   257    258    254     |           |  +- 'ADD'
   258     -1    256     |           |  |  +- 'IDENT': y
   256     -1     -1     |           |  |  +- 'IDENT': x
   254     -1     -1     |           |  +- 'IDENT': Avar
   260    262    265     |           +- '=OR'
   262    263    259     |           |  +- 'ADD'
   263     -1    261     |           |  |  +- 'IDENT': y
   261     -1     -1     |           |  |  +- 'IDENT': x
   259     -1     -1     |           |  +- 'IDENT': Avar
   265    267    270     |           +- '=LSH'
   267    268    264     |           |  +- 'ADD'
   268     -1    266     |           |  |  +- 'IDENT': y
   266     -1     -1     |           |  |  +- 'IDENT': x
   264     -1     -1     |           |  +- 'IDENT': Avar
   270    272    275     |           +- '=XOR'
   272    273    269     |           |  +- 'ADD'
   273     -1    271     |           |  |  +- 'IDENT': y
   271     -1     -1     |           |  |  +- 'IDENT': x
   269     -1     -1     |           |  +- 'IDENT': Avar
   275    277    279     |           +- '=MOD'
   277    278    274     |           |  +- 'ADD'
   278     -1    276     