File:test1.act has 2541 Bytes
File:Action.Act65_settings has 976 Bytes
Section:STACK:Start:$0100 Size:$0100 MODE:R/W:ABSOLUTE Address Size:WORD
Section:LOCALS:Start:$1200 Size:$0800 MODE:R/W:ABSOLUTE Address Size:WORD
Section:PARAMS:Start:$0A00 Size:$0800 MODE:R/W:ABSOLUTE Address Size:WORD
Section:VARIABLES:Start:$0200 Size:$0800 MODE:R/W:ABSOLUTE Address Size:WORD
Section:VECTOR:Start:$FFFA Size:$0006 MODE:RO:ABSOLUTE Address Size:WORD
Section:CONST:Start:$F800 Size:$0800 MODE:RO:ABSOLUTE Address Size:WORD
Section:STRINGS:Start:$F800 Size:$0800 MODE:RO:ABSOLUTE Address Size:WORD
Section:ZERO:Start:$0000 Size:$0100 MODE:R/W:ABSOLUTE Address Size:BYTE
Section:CODE:Start:$F800 Size:$0800 MODE:RO:ABSOLUTE Address Size:WORD
Section:VREG:Start:$0000 Size:$0100 MODE:R/W:RELOCATALE Address Size:BYTE
File:Linker.Act65_LinkerScript has 38 Bytes
Parser Created
	 NUMB  CHILD  NEXT
     2      3     -1  +- 'ROOT'
     3      4    365     +- 'MODULE'
     4      5      9     |  +- 'CHAR'
     5      6     -1     |  |  +- 'ARRAY'
     6      7     -1     |  |     +- 'IDENT': DataBuff
     7      8     -1     |  |        +- 'ARRAY Dim'
     8     -1     -1     |  |           +- 'NUMBER'$0064
     9     10     16     |  +- 'INT'
    10     11     -1     |  |  +- 'POINTER'
    11     12     -1     |  |     +- 'ARRAY'
    12     -1     13     |  |        +- 'IDENT': Avar
    13     -1     14     |  |        +- 'IDENT': x
    14     -1     15     |  |        +- 'IDENT': y
    15     -1     -1     |  |        +- 'IDENT': z
    16     17     18     |  +- 'CARD'
    17     -1     -1     |  |  +- 'IDENT': Cvar
    18     19     31     |  +- 'CHAR'
    19     -1     20     |  |  +- 'IDENT': Stuff
    20     -1     -1     |  |  +- 'IDENT': Yep
    31     21     32     |  +- 'TYPE'
    21     29     -1     |  |  +- 'TYPE Name': Junk
    29     25     30     |  |     +- 'FIELDS'
    25     22     28     |  |     |  +- 'CHAR'
    22     -1     23     |  |     |  |  +- 'IDENT': q
    23     -1     24     |  |     |  |  +- 'IDENT': e
    24     -1     -1     |  |     |  |  +- 'IDENT': d
    28     26     -1     |  |     |  +- 'INT'
    26     27     -1     |  |     |     +- 'POINTER'
    27     -1     -1     |  |     |        +- 'IDENT': pX
    30     -1     -1     |  |     +- 'TYPE Fields End'
    32     64     65     |  +- 'INT'
    64     33     -1     |  |  +- 'FUNC'
    33     42     -1     |  |     +- 'IDENT': FuncName2
    42     37     44     |  |        +- 'Param LIST'
    37     36     41     |  |        |  +- 'CARD'
    36     34     -1     |  |        |  |  +- 'POINTER'
    34     -1     35     |  |        |  |     +- 'IDENT': c100
    35     -1     -1     |  |        |  |     +- 'IDENT': c101
    41     38     -1     |  |        |  +- 'CHAR'
    38     40     -1     |  |        |     +- 'ARRAY'
    40     39     -1     |  |        |        +- 'POINTER'
    39     -1     -1     |  |        |           +- 'IDENT': h190
    44     43     -1     |  |        +- 'Body'
    43     46     59     |  |           +- 'LOCAL Vars'
    46     45     49     |  |           |  +- 'CARD'
    45     -1     -1     |  |           |  |  +- 'IDENT': cx100
    49     47     54     |  |           |  +- 'CHAR'
    47     48     -1     |  |           |  |  +- 'POINTER'
    48     -1     -1     |  |           |  |     +- 'IDENT': pData
    54     50     58     |  |           |  +- 'CHAR'
    50     51     -1     |  |           |  |  +- 'ARRAY'
    51     52     -1     |  |           |  |     +- 'IDENT': aData
    52     53     -1     |  |           |  |        +- 'ARRAY Dim'
    53     -1     -1     |  |           |  |           +- 'NUMBER'$0020
    58     55     -1     |  |           |  +- 'CHAR'
    55     56     -1     |  |           |     +- 'POINTER'
    56     57     -1     |  |           |        +- 'ARRAY'
    57     -1     -1     |  |           |           +- 'IDENT': paData
    59     60     -1     |  |           +- 'STATEMENTS'
    60     62     -1     |  |              +- 'RETURN'
    62     63     -1     |  |                 +- 'SUB'
    63     -1     61     |  |                    +- 'IDENT': Stuff
    61     -1     -1     |  |                    +- 'IDENT': cx100
    65     66     79     |  +- 'PROC'
    66     72     -1     |  |  +- 'IDENT': ProcNum1
    72     69     74     |  |     +- 'Param LIST'
    69     67     71     |  |     |  +- 'BYTE'
    67     -1     68     |  |     |  |  +- 'IDENT': a100
    68     -1     -1     |  |     |  |  +- 'IDENT': a101
    71     70     -1     |  |     |  +- 'INT'
    70     -1     -1     |  |     |     +- 'IDENT': i100
    74     73     -1     |  |     +- 'Body'
    73     76     77     |  |        +- 'LOCAL Vars'
    76     75     -1     |  |        |  +- 'BYTE'
    75     -1     -1     |  |        |     +- 'IDENT': x100
    77     78     -1     |  |        +- 'STATEMENTS'
    78     -1     -1     |  |           +- 'RETURN'
    79     80     -1     |  +- 'IRQ-PROC'
    80     -1     83     |     +- 'IDENT': Hey
    83     82     -1     |     +- 'Body'
    82     96    106     |        +- 'LOCAL Vars'
    96     92     99     |        |  +- 'INT'
    92     93     -1     |        |  |  +- 'POINTER'
    93     94     -1     |        |  |     +- 'ARRAY'
    94     95     -1     |        |  |        +- 'POINTER'
    95     -1     -1     |        |  |           +- 'IDENT': cc
    99     97    103     |        |  +- 'CHAR'
    97     -1     98     |        |  |  +- 'IDENT': la
    98     -1     -1     |        |  |  +- 'IDENT': lb
   103    100    105     |        |  +- 'CARD'
   100     -1    101     |        |  |  +- 'IDENT': lc
   101     -1    102     |        |  |  +- 'IDENT': ld
   102     -1     -1     |        |  |  +- 'IDENT': le
   105    104     91     |        |  +- 'BYTE'
   104     -1     -1     |        |  |  +- 'IDENT': lf
    91     84     -1     |        |  +- 'TYPE'
    84     89     -1     |        |     +- 'TYPE Name': Crud
    89     86     90     |        |        +- 'FIELDS'
    86     85     88     |        |        |  +- 'INT'
    85     -1     -1     |        |        |  |  +- 'IDENT': CrudOne
    88     87     -1     |        |        |  +- 'CHAR'
    87     -1     -1     |        |        |     +- 'IDENT': CrudTwo
    90     -1     -1     |        |        +- 'TYPE Fields End'
   106    107     -1     |        +- 'STATEMENTS'
   107    108    246     |           +- 'ASM'
   108     -1    109     |           |  +- 'SECTION' Code Start:$8000 SIZE:$1000 MODE:MODE_READ_ONLY PAGE0:FALSE
   109     -1    110     |           |  +- 'SECTION' Page2 Start:$0200 SIZE:$0100 MODE:MODE_READ_WRITE PAGE0:FALSE
   110     -1    111     |           |  +- 'SECTION' PageZero Start:$0000 SIZE:$0100 MODE:MODE_READ_WRITE PAGE0:TRUE
   111    113    114     |           |  +- 'LABEL' 'StirageA'
   113    112     -1     |           |  |  +- 'DS'
   112     -1     -1     |           |  |     +- 'CONSTANT'    64  $0040
   114    116    117     |           |  +- 'LABEL' 'StorageB'
   116    115     -1     |           |  |  +- 'DS'
   115     -1     -1     |           |  |     +- 'CONSTANT'    16  $0010
   117    119    121     |           |  +- 'LABEL' 'First'
   119    118     -1     |           |  |  +- 'DB'
   118     -1     -1     |           |  |     +- 'CONSTANT'     0  $0000
   121    120    122     |           |  +- 'SET'
   120     -1     -1     |           |  |  +- 'SECTION' Page2 Start:$0200 SIZE:$0100 MODE:MODE_READ_WRITE PAGE0:FALSE
   122    124    125     |           |  +- 'LABEL' 'Second'
   124    123     -1     |           |  |  +- 'DB'
   123     -1     -1     |           |  |     +- 'CONSTANT'     1  $0001
   125    127    128     |           |  +- 'LABEL' 'ThirdW'
   127    126     -1     |           |  |  +- 'DW'
   126     -1     -1     |           |  |     +- 'CONSTANT'    77  $004D
   128    130    132     |           |  +- 'LABEL' 'ForthL'
   130    129     -1     |           |  |  +- 'DL'
   129     -1     -1     |           |  |     +- 'CONSTANT' 305462970  $1234FEBA
   132    131    133     |           |  +- 'SET'
   131     -1     -1     |           |  |  +- 'SECTION' Code Start:$8000 SIZE:$1000 MODE:MODE_READ_ONLY PAGE0:FALSE
   133    135    136     |           |  +- 'LABEL' 'Astring'
   135    134     -1     |           |  |  +- 'DAS' $19:This is an ACTION! string
   134     -1     -1     |           |  |     +- 'STRING'
   136    138    139     |           |  +- 'LABEL' 'CString'
   138    137     -1     |           |  |  +- 'DCS' This is a C String
   137     -1     -1     |           |  |     +- 'STRING'
   139    140    141     |           |  +- 'LABEL' 'Start'
   140     -1     -1     |           |  |  +- 'OPCODE' STY ($84) ZERO PAGE First <:Start  STY  First>   SECTION:Code (Parent:LABEL
   141     -1    142     |           |  +- 'OPCODE' STY ($94) PAGE ZERO,X First,.X <STY  First,.X>   SECTION:Code
   142    143    144     |           |  +- 'LABEL' 'Here'
   143     -1     -1     |           |  |  +- 'OPCODE' STY ($8C) ABSOLUTE Second <:Here  STY  Second>   SECTION:Code (Parent:LABEL
   144     -1    145     |           |  +- 'OPCODE' STX ($86) ZERO PAGE First <STX  First>   SECTION:Code
   145     -1    146     |           |  +- 'OPCODE' STX ($96) PAGE ZERO,Y First,.Y <STX  First,.Y>   SECTION:Code
   146    147    148     |           |  +- 'LABEL' 'We'
   147     -1     -1     |           |  |  +- 'OPCODE' STX ($8E) ABSOLUTE Second <:We  STX  Second>   SECTION:Code (Parent:LABEL
   148    149    150     |           |  +- 'POP'
   149     -1     -1     |           |  |  +- '.A'
   150    151    152     |           |  +- 'POP'
   151     -1     -1     |           |  |  +- '.Y'
   152    153    154     |           |  +- 'PUSH'
   153     -1     -1     |           |  |  +- '.X'
   154    157    161     |           |  +- 'IFF'
   157    156    158     |           |  |  +- 'EQU-TO'
   156     -1    155     |           |  |  |  +- 'IDENT': First
   155     -1     -1     |           |  |  |  +- '.A'
   158    159    160     |           |  |  +- 'THEN'
   159     -1     -1     |           |  |  |  +- 'LABEL' 'We'
   160     -1     -1     |           |  |  +- 'FFI'
   161     -1    162     |           |  +- 'OPCODE' JSR ($20) ABSOLUTE First <JSR  First>   SECTION:Code
   162    163    164     |           |  +- 'LABEL' 'Are'
   163     -1     -1     |           |  |  +- 'OPCODE' JSR ($20) ABSOLUTE Second <:Are  JSR  Second>   SECTION:Code (Parent:LABEL
   164     -1    165     |           |  +- 'OPCODE' JMP ($4C) ABSOLUTE First <JMP  First>   SECTION:Code
   165     -1    166     |           |  +- 'OPCODE' JMP ($4C) ABSOLUTE Second <JMP  Second>   SECTION:Code
   166     -1    167     |           |  +- 'OPCODE' JMP ($6C) INDIRECT(First) <JMP  (First)>   SECTION:Code
   167     -1    168     |           |  +- 'OPCODE' JMP ($6C) INDIRECT(Second) <JMP  (Second)>   SECTION:Code
   168     -1    169     |           |  +- 'OPCODE' BEQ ($F0) RELATIVE Are <BEQ  Are>   SECTION:Code
   169     -1    170     |           |  +- 'OPCODE' BNE ($D0) RELATIVE Are <BNE  Are>   SECTION:Code
   170     -1    171     |           |  +- 'OPCODE' BVS ($70) RELATIVE Are <BVS  Are>   SECTION:Code
   171     -1    172     |           |  +- 'OPCODE' BVC ($50) RELATIVE Are <BVC  Are>   SECTION:Code
   172     -1    173     |           |  +- 'OPCODE' BMI ($30) RELATIVE Are <BMI  Are>   SECTION:Code
   173     -1    174     |           |  +- 'OPCODE' BPL ($10) RELATIVE Are <BPL  Are>   SECTION:Code
   174    175    176     |           |  +- 'LABEL' 'Go'
   175     -1     -1     |           |  |  +- 'OPCODE' DEC ($C6) ZERO PAGE First <:Go  DEC  First>   SECTION:Code (Parent:LABEL
   176     -1    177     |           |  +- 'OPCODE' DEC ($D6) PAGE ZERO,X First,.X <DEC  First,.X>   SECTION:Code
   177    178    179     |           |  +- 'LABEL' 'Again'
   178     -1     -1     |           |  |  +- 'OPCODE' DEC ($CE) ABSOLUTE Second <:Again  DEC  Second>   SECTION:Code (Parent:LABEL
   179     -1    180     |           |  +- 'OPCODE' DEC ($DE) ABSOLUTE,X Second,X <DEC  Second,.X>   SECTION:Code
   180     -1    181     |           |  +- 'OPCODE' INC ($E6) ZERO PAGE First <INC  First>   SECTION:Code
   181     -1    182     |           |  +- 'OPCODE' INC ($F6) PAGE ZERO,X First,.X <INC  First,.X>   SECTION:Code
   182     -1    183     |           |  +- 'OPCODE' INC ($EE) ABSOLUTE Second <INC  Second>   SECTION:Code
   183     -1    184     |           |  +- 'OPCODE' INC ($FE) ABSOLUTE,X Second,X <INC  Second,.X>   SECTION:Code
   184     -1    185     |           |  +- 'OPCODE' CPY ($C0) IMMEDIATE #'J'  #$4A <CPY #$4A>   SECTION:Code
   185     -1    186     |           |  +- 'OPCODE' CPY ($C4) ZERO PAGE First <CPY  First>   SECTION:Code
   186     -1    187     |           |  +- 'OPCODE' CPY ($CC) ABSOLUTE Second <CPY  Second>   SECTION:Code
   187     -1    188     |           |  +- 'OPCODE' CPX ($E0) IMMEDIATE #'k'  #$6B <CPX #$6B>   SECTION:Code
   188     -1    189     |           |  +- 'OPCODE' CPX ($E4) ZERO PAGE First <CPX  First>   SECTION:Code
   189     -1    190     |           |  +- 'OPCODE' CPX ($EC) ABSOLUTE Second <CPX  Second>   SECTION:Code
   190     -1    191     |           |  +- 'OPCODE' BIT ($24) ZERO PAGE First <BIT  First>   SECTION:Code
   191     -1    192     |           |  +- 'OPCODE' BIT ($2C) ABSOLUTE Second <BIT  Second>   SECTION:Code
   192     -1    193     |           |  +- 'OPCODE' ASL ($0A) ACCUMULATOR <ASL  .A>   SECTION:Code
   193     -1    194     |           |  +- 'OPCODE' LSR ($4A) ACCUMULATOR <LSR  .A>   SECTION:Code
   194     -1    195     |           |  +- 'OPCODE' ROR ($6A) ACCUMULATOR <ROR  .A>   SECTION:Code
   195     -1    196     |           |  +- 'OPCODE' ROL ($2A) ACCUMULATOR <ROL  .A>   SECTION:Code
   196     -1    197     |           |  +- 'OPCODE' ASL ($06) ZERO PAGE First <ASL  First>   SECTION:Code
   197     -1    198     |           |  +- 'OPCODE' ASL ($16) PAGE ZERO,X First,.X <ASL  First,.X>   SECTION:Code
   198     -1    199     |           |  +- 'OPCODE' ASL ($0E) ABSOLUTE Second <ASL  Second>   SECTION:Code
   199     -1    200     |           |  +- 'OPCODE' ASL ($1E) ABSOLUTE,X Second,X <ASL  Second,.X>   SECTION:Code
   200     -1    201     |           |  +- 'OPCODE' BRK ($00) IMPLIED <BRK >   SECTION:Code
   201     -1    202     |           |  +- 'OPCODE' CLC ($18) IMPLIED <CLC >   SECTION:Code
   202     -1    203     |           |  +- 'OPCODE' CLD ($D8) IMPLIED <CLD >   SECTION:Code
   203     -1    204     |           |  +- 'OPCODE' CLI ($58) IMPLIED <CLI >   SECTION:Code
   204     -1    205     |           |  +- 'OPCODE' CLV ($B8) IMPLIED <CLV >   SECTION:Code
   205     -1    206     |           |  +- 'OPCODE' DEX ($CA) IMPLIED <DEX >   SECTION:Code
   206     -1    207     |           |  +- 'OPCODE' DEY ($88) IMPLIED <DEY >   SECTION:Code
   207     -1    208     |           |  +- 'OPCODE' INX ($E8) IMPLIED <INX >   SECTION:Code
   208     -1    209     |           |  +- 'OPCODE' INY ($C8) IMPLIED <INY >   SECTION:Code
   209     -1    210     |           |  +- 'OPCODE' NOP ($EA) IMPLIED <NOP >   SECTION:Code
   210     -1    211     |           |  +- 'OPCODE' PHA ($48) IMPLIED <PHA >   SECTION:Code
   211     -1    212     |           |  +- 'OPCODE' PLA ($68) IMPLIED <PLA >   SECTION:Code
   212     -1    213     |           |  +- 'OPCODE' PHP ($08) IMPLIED <PHP >   SECTION:Code
   213     -1    214     |           |  +- 'OPCODE' PLP ($28) IMPLIED <PLP >   SECTION:Code
   214     -1    215     |           |  +- 'OPCODE' RTI ($40) IMPLIED <RTI >   SECTION:Code
   215     -1    216     |           |  +- 'OPCODE' RTS ($60) IMPLIED <RTS >   SECTION:Code
   216     -1    217     |           |  +- 'OPCODE' SEC ($38) IMPLIED <SEC >   SECTION:Code
   217     -1    218     |           |  +- 'OPCODE' SED ($F8) IMPLIED <SED >   SECTION:Code
   218     -1    219     |           |  +- 'OPCODE' SEI ($78) IMPLIED <SEI >   SECTION:Code
   219     -1    220     |           |  +- 'OPCODE' TAX ($AA) IMPLIED <TAX >   SECTION:Code
   220     -1    221     |           |  +- 'OPCODE' TAY ($A8) IMPLIED <TAY >   SECTION:Code
   221     -1    222     |           |  +- 'OPCODE' TXA ($8A) IMPLIED <TXA >   SECTION:Code
   222     -1    223     |           |  +- 'OPCODE' TYA ($98) IMPLIED <TYA >   SECTION:Code
   223     -1    224     |           |  +- 'OPCODE' TXS ($9A) IMPLIED <TXS >   SECTION:Code
   224     -1    225     |           |  +- 'OPCODE' TSX ($BA) IMPLIED <TSX >   SECTION:Code
   225     -1    226     |           |  +- 'OPCODE' LDA ($A9) IMMEDIATE #'J'  #$4A <LDA #$4A>   SECTION:Code
   226     -1    227     |           |  +- 'OPCODE' LDA ($B1) INDIRECT INDEXED(First),.Y <LDA  (First),.Y>   SECTION:Code
   227     -1    228     |           |  +- 'OPCODE' LDA ($A9) IMMEDIATE #$CD <LDA #$CD>   SECTION:Code
   228     -1    229     |           |  +- 'OPCODE' LDA ($A9) IMMEDIATE #$AB <LDA #$AB>   SECTION:Code
   229     -1    230     |           |  +- 'OPCODE' LDA ($A5) ZERO PAGE First <LDA  First>   SECTION:Code
   230     -1    231     |           |  +- 'OPCODE' LDA ($B5) PAGE ZERO,X First,.X <LDA  First,.X>   SECTION:Code
   231     -1    232     |           |  +- 'OPCODE' LDA ($AD) ABSOLUTE Second <LDA  Second>   SECTION:Code
   232     -1    233     |           |  +- 'OPCODE' LDA ($BD) ABSOLUTE,X Second,X <LDA  Second,.X>   SECTION:Code
   233     -1    234     |           |  +- 'OPCODE' LDA ($B9) ABSOLUTE,Y Second,Y <LDA  Second>   SECTION:Code
   234     -1    235     |           |  +- 'OPCODE' LDA ($A1) INDEXED INDIRECT(First,.X) <LDA  (First,.X)>   SECTION:Code
   235     -1    236     |           |  +- 'OPCODE' LDA ($A5) ZERO PAGE First + 2 <LDA  First + $02>   SECTION:Code
   236     -1    237     |           |  +- 'OPCODE' LDX ($A2) IMMEDIATE #'E'  #$45 <LDX #$45>   SECTION:Code
   237     -1    238     |           |  +- 'OPCODE' LDX ($A6) ZERO PAGE First <LDX  First>   SECTION:Code
   238     -1    239     |           |  +- 'OPCODE' LDX ($B6) PAGE ZERO,Y First,.Y <LDX  First,.Y>   SECTION:Code
   239     -1    240     |           |  +- 'OPCODE' LDX ($AE) ABSOLUTE Second <LDX  Second>   SECTION:Code
   240     -1    241     |           |  +- 'OPCODE' LDX ($BE) ABSOLUTE,Y Second,Y <LDX  Second>   SECTION:Code
   241     -1    242     |           |  +- 'OPCODE' LDY ($A0) IMMEDIATE #'a'  #$61 <LDY #$61>   SECTION:Code
   242     -1    243     |           |  +- 'OPCODE' LDY ($A4) ZERO PAGE First <LDY  First>   SECTION:Code
   243     -1    244     |           |  +- 'OPCODE' LDY ($B4) PAGE ZERO,X First,.X <LDY  First,.X>   SECTION:Code
   244     -1    245     |           |  +- 'OPCODE' LDY ($AC) ABSOLUTE Second <LDY  Second>   SECTION:Code
   245     -1     -1     |           |  +- 'OPCODE' LDY ($BC) ABSOLUTE,X Second,X <LDY  Second,.X>   SECTION:Code
   246    248    283     |           +- 'IF'
   248    249    257     |           |  +- 'EQU-TO'
   249     -1    247     |           |  |  +- 'IDENT': lb
   247     -1    256     |           |  |  +- 'IDENT': la
   256    250     -1     |           |  |  +- 'THEN'
   250    252     -1     |           |  |     +- 'STATEMENTS'
   252    254     -1     |           |  |        +- '=ADD'
   254    255    251     |           |  |           +- 'SUB'
   255     -1    253     |           |  |           |  +- 'IDENT': le
   253     -1     -1     |           |  |           |  +- 'IDENT': lb
   251     -1     -1     |           |  |           +- 'IDENT': la
   257    259    268     |           |  +- 'ELSEIF'
   259    260     -1     |           |  |  +- '<'
   260     -1    258     |           |  |     +- 'IDENT': lf
   258     -1    267     |           |  |     +- 'IDENT': ld
   267    261     -1     |           |  |     +- 'THEN'
   261    263     -1     |           |  |        +- 'STATEMENTS'
   263    265     -1     |           |  |           +- 'Assign ='
   265    266    262     |           |  |              +- 'MUL'
   266     -1    264     |           |  |              |  +- 'IDENT': le
   264     -1     -1     |           |  |              |  +- 'IDENT': lb
   262     -1     -1     |           |  |              +- 'IDENT': la
   268    270    281     |           |  +- 'ELSEIF'
   270    271     -1     |           |  |  +- '>'
   271     -1    269     |           |  |     +- 'IDENT': lf
   269     -1    278     |           |  |     +- 'IDENT': ld
   278    272     -1     |           |  |     +- 'THEN'
   272    274     -1     |           |  |        +- 'STATEMENTS'
   274    276     -1     |           |  |           +- 'Assign ='
   276    277    273     |           |  |              +- 'DIV'
   277     -1    275     |           |  |              |  +- 'IDENT': le
   275     -1     -1     |           |  |              |  +- 'IDENT': lb
   273     -1     -1     |           |  |              +- 'IDENT': la
   281    279    282     |           |  +- 'ELSE'
   279    280     -1     |           |  |  +- 'STATEMENTS'
   280     -1     -1     |           |  |     +- 'EXIT'
   282     -1     -1     |           |  +- 'FI'
   283    284    298     |           +- 'FOR'
   284    285    286     |           |  +- 'IDENT': lf
   285     -1     -1     |           |  |  +- 'NUMBER'$0000
   286    287    289     |           |  +- 'TO'
   287     -1     -1     |           |  |  +- 'NUMBER'$000E
   289    288    290     |           |  +- 'STEP'
   288     -1     -1     |           |  |  +- 'NUMBER'$0002
   290    292     -1     |           |  +- 'DO'
   292    294    291     |           |     +- 'STATEMENTS'
   294    296     -1     |           |     |  +- 'Assign ='
   296    297    293     |           |     |     +- 'RSH'
   297     -1    295     |           |     |     |  +- 'IDENT': ld
   295     -1     -1     |           |     |     |  +- 'IDENT': lf
   293     -1     -1     |           |     |     +- 'IDENT': la
   291     -1     -1     |           |     +- 'OD'
   298    300    310     |           +- 'WHILE'
   300    301    308     |           |  +- '<'
   301     -1    299     |           |  |  +- 'IDENT': ld
   299     -1     -1     |           |  |  +- 'IDENT': lc
   308    302     -1     |           |  +- 'DO'
   302    304    309     |           |     +- 'STATEMENTS'
   304    306     -1     |           |     |  +- 'Assign ='
   306    307    303     |           |     |     +- 'LSH'
   307     -1    305     |           |     |     |  +- 'IDENT': ld
   305     -1     -1     |           |     |     |  +- 'IDENT': lf
   303     -1     -1     |           |     |     +- 'IDENT': la
   309     -1     -1     |           |     +- 'OD'
   310    311    321     |           +- 'DO'
   311    313    320     |           |  +- 'STATEMENTS'
   313    317    319     |           |  |  +- 'Assign ='
   317    318    312     |           |  |  |  +- 'SUB'
   318     -1    315     |           |  |  |  |  +- 'IDENT': lf
   315    316     -1     |           |  |  |  |  +- 'MUL'
   316     -1    314     |           |  |  |  |     +- 'IDENT': lc
   314     -1     -1     |           |  |  |  |     +- 'IDENT': lb
   312     -1     -1     |           |  |  |  +- 'IDENT': la
   319     -1     -1     |           |  |  +- 'EXIT'
   320     -1     -1     |           |  +- 'OD'
   321     -1    322     |           +- 'BREAK'
   322     -1    323     |           +- 'RTI'
   323     -1    324     |           +- 'EXIT'
   324     -1    325     |           +- 'RETURN'
   325    327    330     |           +- 'RETURN'
   327    328     -1     |           |  +- 'SUB'
   328     -1    326     |           |     +- 'IDENT': lb
   326     -1     -1     |           |     +- 'IDENT': la
   330    332    335     |           +- 'Assign ='
   332    333    329     |           |  +- 'ADD'
   333     -1    331     |           |  |  +- 'IDENT': y
   331     -1     -1     |           |  |  +- 'IDENT': x
   329     -1     -1     |           |  +- 'IDENT': Avar
   335    337    340     |           +- '=SUB'
   337    338    334     |           |  +- 'ADD'
   338     -1    336     |           |  |  +- 'IDENT': y
   336     -1     -1     |           |  |  +- 'IDENT': x
   334     -1     -1     |           |  +- 'IDENT': Avar
   340    342    345     |           +- '=AND'
   342    343    339     |           |  +- 'ADD'
   343     -1    341     |           |  |  +- 'IDENT': y
   341     -1     -1     |           |  |  +- 'IDENT': x
   339     -1     -1     |           |  +- 'IDENT': Avar
   345    347    350     |           +- '=OR'
   347    348    344     |           |  +- 'ADD'
   348     -1    346     |           |  |  +- 'IDENT': y
   346     -1     -1     |           |  |  +- 'IDENT': x
   344     -1     -1     |           |  +- 'IDENT': Avar
   350    352    355     |           +- '=LSH'
   352    353    349     |           |  +- 'ADD'
   353     -1    351     |           |  |  +- 'IDENT': y
   351     -1     -1     |           |  |  +- 'IDENT': x
   349     -1     -1     |           |  +- 'IDENT': Avar
   355    357    360     |           +- '=XOR'
   357    358    354     |           |  +- 'ADD'
   358     -1    356     |           |  |  +- 'IDENT': y
   356     -1     -1     |           |  |  +- 'IDENT': x
   354     -1     -1     |           |  +- 'IDENT': Avar
   360    362    364     |           +- '=MOD'
   362    363    359     |           |  +- 'ADD'
   363     -1    361     |           |  |  +- 'IDENT': y
   361     -1     -1     |           |  |  +- 'IDENT': x
   359     -1     -1     |           |  +- 'IDENT': Avar
   364     -1     -1     |           +- 'RETURN'
   365    366     -1     +- 'MODULE'
   366    367    369        +- 'CHAR'
   367     -1    368        |  +- 'IDENT': xyx
   368     -1     -1        |  +- 'IDENT': yxy
   369    370     -1        +- 'CARD'
   370     -1    371           +- 'IDENT': one
   371     -1    372           +- 'IDENT': two
   372     -1     -1           +- 'IDENT': three
EMIT:IDENT:ID=6:DataBuff
EMIT:CHAR:ID=4
EMIT:IDENT:ID=12:Avar
EMIT:IDENT:ID=13:x
EMIT:IDENT:ID=14:y
EMIT:IDENT:ID=15:z
EMIT:INT:ID=9
EMIT:IDENT:ID=17:Cvar
EMIT:CARD:ID=16
EMIT:IDENT:ID=19:Stuff
EMIT:IDENT:ID=20:Yep
EMIT:CHAR:ID=18
EMIT:IDENT:ID=22:q
EMIT:IDENT:ID=23:e
EMIT:IDENT:ID=24:d
EMIT:CHAR:ID=25
EMIT:IDENT:ID=27:pX
EMIT:INT:ID=28
EMIT:IDENT:ID=34:c100
EMIT:IDENT:ID=35:c101
EMIT:CARD:ID=37
EMIT:IDENT:ID=39:h190
EMIT:CHAR:ID=41
EMIT:IDENT:ID=45:cx100
EMIT:CARD:ID=46
EMIT:IDENT:ID=48:pData
EMIT:CHAR:ID=49
EMIT:IDENT:ID=51:aData
EMIT:CHAR:ID=54
EMIT:IDENT:ID=57:paData
EMIT:CHAR:ID=58
EMIT:IDENT:ID=63:Stuff
EMIT:IDENT:ID=61:cx100
EMIT:IDENT:ID=33:FuncName2
EMIT:INT:ID=32
EMIT:IDENT:ID=67:a100
EMIT:IDENT:ID=68:a101
EMIT:BYTE:ID=69
EMIT:IDENT:ID=70:i100
EMIT:INT:ID=71
EMIT:IDENT:ID=75:x100
EMIT:BYTE:ID=76
EMIT:IDENT:ID=66:ProcNum1
EMIT:IDENT:ID=80:Hey
EMIT:IDENT:ID=95:cc
EMIT:INT:ID=96
EMIT:IDENT:ID=97:la
EMIT:IDENT:ID=98:lb
EMIT:CHAR:ID=99
EMIT:IDENT:ID=100:lc
EMIT:IDENT:ID=101:ld
EMIT:IDENT:ID=102:le
EMIT:CARD:ID=103
EMIT:IDENT:ID=104:lf
EMIT:BYTE:ID=105
EMIT:IDENT:ID=85:CrudOne
EMIT:INT:ID=86
EMIT:IDENT:ID=87:CrudTwo
EMIT:CHAR:ID=88
EMIT:This is an ACTION! string:Code
EMIT:This is a C String:Code
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:IDENT:ID=156:First
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:OPCODE
EMIT:IDENT:ID=249:lb
EMIT:IDENT:ID=247:la
EMIT:IDENT:ID=255:le
EMIT:IDENT:ID=253:lb
EMIT:IDENT:ID=251:la
EMIT:IDENT:ID=260:lf
EMIT:IDENT:ID=258:ld
EMIT:IDENT:ID=266:le
EMIT:IDENT:ID=264:lb
EMIT:IDENT:ID=262:la
EMIT:IDENT:ID=271:lf
EMIT:IDENT:ID=269:ld
EMIT:IDENT:ID=277:le
EMIT:IDENT:ID=275:lb
EMIT:IDENT:ID=273:la
EMIT:IDENT:ID=284:lf
EMIT:IDENT:ID=297:ld
EMIT:IDENT:ID=295:lf
EMIT:IDENT:ID=293:la
EMIT:IDENT:ID=301:ld
EMIT:IDENT:ID=299:lc
EMIT:IDENT:ID=307:ld
EMIT:IDENT:ID=305:lf
EMIT:IDENT:ID=303:la
EMIT:IDENT:ID=318:lf
EMIT:IDENT:ID=316:lc
EMIT:IDENT:ID=314:lb
EMIT:IDENT:ID=312:la
EMIT:IDENT:ID=328:lb
EMIT:IDENT:ID=326:la
EMIT:IDENT:ID=333:y
EMIT:IDENT:ID=331:x
EMIT:IDENT:ID=329:Avar
EMIT:IDENT:ID=338:y
EMIT:IDENT:ID=336:x
EMIT:IDENT:ID=334:Avar
EMIT:IDENT:ID=343:y
EMIT:IDENT:ID=341:x
EMIT:IDENT:ID=339:Avar
EMIT:IDENT:ID=348:y
EMIT:IDENT:ID=346:x
EMIT:IDENT:ID=344:Avar
EMIT:IDENT:ID=353:y
EMIT:IDENT:ID=351:x
EMIT:IDENT:ID=349:Avar
EMIT:IDENT:ID=358:y
EMIT:IDENT:ID=356:x
EMIT:IDENT:ID=354:Avar
EMIT:IDENT:ID=363:y
EMIT:IDENT:ID=361:x
EMIT:IDENT:ID=359:Avar
EMIT:MODULE ID=3
EMIT:IDENT:ID=367:xyx
EMIT:IDENT:ID=368:yxy
EMIT:CHAR:ID=366
EMIT:IDENT:ID=370:one
EMIT:IDENT:ID=371:two
EMIT:IDENT:ID=372:three
EMIT:CARD:ID=369
EMIT:MODULE ID=365
------------ Symbol Table --------------
e: LOCAL:CHAR::Address=00000000
Start: :Address=00008000
First: :Address=00000000
Section:LOCALS:Start:$1200 Size:$0800 MODE:R/W:ABSOLUTE Address Size:WORD
xyx: GLOBAL:CHAR::Address=00000000
one: GLOBAL:CARD::Address=00000000
ThirdW: :Address=00000200
q: LOCAL:CHAR::Address=00000000
Astring: :Address=00008000
Here: :Address=00008000
Section:STRINGS:Start:$F800 Size:$0800 MODE:RO:ABSOLUTE Address Size:WORD
x: GLOBAL:INT:POINTER:ARRAY::Address=00000000
three: GLOBAL:CARD::Address=00000000
y: GLOBAL:INT:POINTER:ARRAY::Address=00000000
Section:VARIABLES:Start:$0200 Size:$0800 MODE:R/W:ABSOLUTE Address Size:WORD
z: GLOBAL:INT:POINTER:ARRAY::Address=00000000
Second: :Address=00000200
We: :Address=00008000
two: GLOBAL:CARD::Address=00000000
Section:Page2:Start:$0200 Size:$0100 MODE:R/W:ABSOLUTE Address Size:WORD
DataBuff: GLOBAL:CHAR:ARRAY::Address=00000000
Section:PageZero:Start:$0000 Size:$0100 MODE:R/W:ABSOLUTE Address Size:BYTE
ProcNum1: GLOBAL:PROC::Address=00000000
	a100: PARAM:BYTE::Address=00000000
	a101: PARAM:BYTE::Address=00000000
	i100: PARAM:INT::Address=00000000
CString: :Address=00008000
StorageB: :Address=00000000
Section:CONST:Start:$F800 Size:$0800 MODE:RO:ABSOLUTE Address Size:WORD
Yep: GLOBAL:CHAR::Address=00000000
paData: LOCAL:CHAR:POINTER:ARRAY::Address=00000000
Go: :Address=00008000
Hey: INTERRUPT::Address=00000000
Section:ZERO:Start:$0000 Size:$0100 MODE:R/W:ABSOLUTE Address Size:BYTE
Again: :Address=00008000
yxy: GLOBAL:CHAR::Address=00000000
FuncName2: GLOBAL:INT:FUNC::Address=00000000
	c100: PARAM:CARD:POINTER::Address=00000000
	c101: PARAM:CARD:POINTER::Address=00000000
	h190: PARAM:CHAR:ARRAY:POINTER::Address=00000000
Section:VECTOR:Start:$FFFA Size:$0006 MODE:RO:ABSOLUTE Address Size:WORD
Are: :Address=00008000
aData: LOCAL:CHAR:ARRAY::Address=00000000
Stuff: GLOBAL:CHAR::Address=00000000
Section:PARAMS:Start:$0A00 Size:$0800 MODE:R/W:ABSOLUTE Address Size:WORD
Section:STACK:Start:$0100 Size:$0100 MODE:R/W:ABSOLUTE Address Size:WORD
StirageA: :Address=00000000
pData: LOCAL:CHAR:POINTER::Address=00000000
Section:Code:Start:$8000 Size:$1000 MODE:RO:ABSOLUTE Address Size:WORD
Section:VREG:Start:$0000 Size:$0100 MODE:R/W:RELOCATALE Address Size:BYTE
Avar: GLOBAL:INT:POINTER:ARRAY::Address=00000000
CrudOne: LOCAL:INT::Address=00000000
la: LOCAL:CHAR::Address=00000000
lb: LOCAL:CHAR::Address=00000000
lc: LOCAL:CARD::Address=00000000
cc: LOCAL:INT:POINTER:ARRAY:POINTER::Address=00000000
ld: LOCAL:CARD::Address=00000000
ForthL: :Address=00000200
le: LOCAL:CARD::Address=00000000
Cvar: GLOBAL:CARD::Address=00000000
cx100: LOCAL:CARD::Address=00000000
lf: LOCAL:BYTE::Address=00000000
CrudTwo: LOCAL:CHAR::Address=00000000
x100: LOCAL:BYTE::Address=00000000
pX: LOCAL:INT:POINTER::Address=00000000
Section:CODE:Start:$F800 Size:$0800 MODE:RO:ABSOLUTE Address Size:WORD
d: LOCAL:CHAR::Address=00000000
Lines Compiled:212
