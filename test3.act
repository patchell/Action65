INT aa,bb,cc
CARD dd,ee
CHAR ff
BYTE gg,hh,ii,jj,kk

MODULE

DEFINE SECTION RAM [
	START = $200,
	SIZE = $400
]

INTERRUPT AnInteruption()
	CHAR a
	INT x,xx,xxx
	INT c
	CHAR d
	CHAR e

	[$AA$BB$CE$A1$C0]
	IFF .A = 0 THEN
		jj ==* 2
	FFI
	IFF .N THEN
		kk ==MOD 5
	FFI
	a = c * d
	a ==+ c * d
	a ==- c * d
	a ==* c * d
	a ==/ c * d
	a ==MOD c * d
	a ==! c * d
	a ==& c * d
	a ==% c * d
	a ==LSH c * d
	a ==RSH c * d
	a ==+ c * d
	IFF BITS[$05] THEN
		ii ==LSH 2
	FFI
	DO
		IF c = xx THEN
			PUSH .A
			POP .Y
		FI
		UNTIL jj # gg
		PUSH .A
	OD
	IF xxx > gg THEN
		BREAK
		EXIT
	ELSE
		gg ==+ e
		PUSH .X
	FI
	[$AA$BB$CE$A1$C0]
	DO
		c = e - x * xx
	OD
	d = x + xxx * a - xx
	WHILE c >= d
	DO
		ff = d + 1
	OD
	FOR a = x + xx TO c - 4 STEP 3
	DO
		dd = d * 8 / e
	OD
	DO
		gg = x - 8
		UNTIL e = xx
	OD
	ASM {
	PROCESSOR R6502
SECTION ROM [
	START = $F000,
	SIZE = $1000
]
	ORG $4000
	:SomeData	DB 5
				DW 599
				DL 550066
:Storage:	DS $A7F
:START ADC ($52),.Y
	LDA xxx
	LDA #$55
	PHA
	TYA
	:HERE: PHA
	JMP $BAD1
	JMP ($432A)
	JSR $F00D
	PLA
	TAY
	PROC AsmProc BEGIN
	PLA
	STA $1000
	RTS
	RTI
	EPROC
	ADC ($44, .X)
	SBC $12
	CMP $13 , .X
	AND $400,.X
	ORA $410,.Y
	CPX #23
	CPX $B0
	CPX $A8EE
	ASL $8C
	ASL $8B,.X
	ASL $AACC
	ASL $CCAA,.X
	ASL .A
	LDX #$1F
	LDX $C1
	LDX $C2,.Y
	LDX $56AB
	LDX $64BE,.Y
	LDY #$1F
	LDY $C1
	LDY $C2,.X
	LDY $56AB
	LDY $64BE,.X
	STY $7C
	STY $7D,.X
	STY $D00D
	STX $62
	STX $63,.Y
	STX $B00B

	INC $D0
	INC $62, .X
	INC $63DA
	INC $B00B, .X
	DEC $D0
	DEC $62, .X
	DEC $63DA
	DEC $B00B, .X

	BIT $A8
	BIT $9AB0
	}
	RTI

INT qr,st
